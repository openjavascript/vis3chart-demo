{"version":3,"sources":["webpack:///./src/assets/js/utils/three.js","webpack:///../vis3chart/dist/geometry/geometry.js","webpack:///../vis3chart/dist/3d/common/base.js","webpack:///../vis3chart/dist/geometry/geometry3d.js","webpack:///../vis3chart/dist/common/utils.js","webpack:///./src/assets/js/common.js","webpack:///../vis3chart/dist/3d/common/pointat.js","webpack:///../vis3chart/dist/index.js","webpack:///../vis3chart/dist/common/SVGLoader.js","webpack:///../vis3chart/dist/3d/common/legend.js","webpack:///../vis3chart/dist/3d/dount/index.js","webpack:///../vis3chart/dist/3d/gauge/index.js","webpack:///../vis3chart/dist/3d/icon/roundstatetext.js","webpack:///../vis3chart/dist/common/constant.js","webpack:///../vis3chart/dist/common/threex.domevents.js","webpack:///./src/assets/js/data-3d/svg/dount-in.txt","webpack:///./src/assets/js/data-3d/svg/dount-big.txt","webpack:///./src/assets/js/data-3d/svg/dount-big-all.txt","webpack:///./src/assets/js/dount.js"],"names":["module","exports","window","THREE","Object","defineProperty","value","pointRectangleIntersection","p","r","x","x2","y","y2","pointDistance","_p1","_p2","_dx","_dy","Math","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","width","height","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_vischartbase2","_interopRequireDefault","__webpack_require__","geometry3d","obj","__esModule","newObj","hasOwnProperty","call","default","_interopRequireWildcard","_jsonUtilsx2","_three2","ThreeBase","_VisChartBase","box","camera","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","textColor","screenWidth","screenHeight","subClass","superClass","create","constructor","setPrototypeOf","_inherits","size","arguments","undefined","textureParams","params","callback","parent","texture","map","material","SpriteMaterial","sprite","Sprite","scale","setX","imageAspect","multiplyScalar","stage","add","addDestroy","mesh","Box3","setFromObject","getBox","getSize","Vector3","matrixWorld","setFromMatrixPosition","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","_get","totalAngle","deep","sizeRate","renderer","scene","render","jsonInData","config","cameraPosition","z","_this2","images","iconLayer","remove","_images","rotationBg","data","background","val","addImage","url","offsetX","offsetY","rotation","isbase64","item","opt","issvgstring","svgLoader","initSVGBackground","parse","_svgloader","SVGLoader","paths","group","Group","path","MeshBasicMaterial","color","side","DoubleSide","depthWrite","shapes","toShapes","j","shape","geometry","ShapeBufferGeometry","Mesh","max","min","position","pivot","Object3D","to3d","scaleOffset","set","fixCy","ele","push","animationBg","_this3","isDestroy","isAnimation","requestAnimationFrame","animate","_this4","getRotationAttr","getRotationStep","rotationAttr","rotationStep","_this5","setDestroy","destroyList","dispose","toString","indexOf","parseInt","replace","cx","cy","legend","direction","outerHeight","_this6","children","sitem","ex","pos2dto3d","size2dto3d","pos0","pos","clone","abs","posx","to3dx","vec","unproject","sub","normalize","distance","copy","to3dy","resizeToBit","rangeCount","cur","next","parseFinance","_i","_dot","parseFloat","toFixed","COLORS","setColor","colors","textStyle","series","skey","itemStyle","_jsonUtilsx","PointAt","point","cpoint","init","rects","fill","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_base2","_legend2","_index2","_index4","constant","_threexDomevents2","_lodash2","VisThree","ins","fov","near","far","resize","update","tmpredraw","redraw","ignoreLegend","aspect","updateProjectionMatrix","Scene","PerspectiveCamera","nera","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","sortObjects","innerHTML","appendChild","domElement","cameraHelper","CameraHelper","visible","domEvents","DomEvents","setSize","customWidth","style","customHeight","merge","setThreeConfig","realIndex","clearUpdate","emptyblock","destroy","legent","setOptions","onChange","initChart","type","CHART_TYPE","dount","gauge","setLegend","options","srcData","fillData","getLegendData","tmp","disabled","manager","DefaultLoadingManager","load","onLoad","onProgress","onError","scope","FileLoader","text","parseArcCommand","rx","ry","x_axis_rotation","large_arc_flag","sweep_flag","start","end","dx2","dy2","x1p","y1p","rxs","rys","x1ps","y1ps","cr","s","dq","pq","q","cxp","cyp","theta","svgAngle","delta","currentPath","absellipse","ux","uy","vx","vy","dot","len","ang","acos","parseStyle","node","assign","hasAttribute","getAttribute","isVisible","getReflection","a","b","parseFloats","string","array","split","number","lastIndexOf","splice","parseNode","nodeType","nodeName","ShapePath","setStyle","Vector2","control","commands","match","l","command","charAt","substr","trim","numbers","jl","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","autoClose","parsePathNode","w","h","parseRectNode","index","parsePolygonNode","parsePolylineNode","subpath","Path","absarc","subPaths","parseCircleNode","parseEllipseNode","x1","y1","parseLineNode","nodes","childNodes","DOMParser","parseFromString","documentElement","Legend","name","Date","now","iconSpace","icon","allData","curRow","floor","column","space","columnWidth","row","spaceY","rowHeight","label","parseColor","inited","_item","_bgPlane","bg","_rectPlane","rect","_group","_textSprite","rectGeometry","PlaneBufferGeometry","itemWidth","itemHeight","needsUpdate","_fontSize","createText","fontFamily","fontSize","fontStyle","transparent","textSprite","textMaterial","opacity","bgGeometry","bgMaterial","bgPlane","rectMaterial","rectPlane","bind","ceil","bottom","left","right","unbind","_pointat2","_three5","_toConsumableArray","arr","Array","isArray","arr2","from","Dount","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","line","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","lineCurveLength","loopSort","clearList","outRadius","inRadius","lineLength","lineLengthCount","lineLengthStep","lineLeft","fixCx","lineRight","calcLayoutPosition","countAngle","isDone","clearItems","calcVal","initText","calcDataPosition","initDataLayout","animation","animationCircleLine","pathData","circleLine","isSeriesAnimation","reset","tmpAngle","itemData","geometryx","RingGeometry","arc","animationLine","circleRadius","MeshLine","curve","EllipseCurve","points","getPoints","geometryy","Geometry","setFromPoints","concat","setGeometry","MeshLineMaterial","Color","circle","renderOrder","depthTest","circleLineRadius","geometryItem","CircleGeometry","vertices","shift","Line","drawCircle","drawCircleLine","ii","mline","layer","arcLayer","lineEnd","lineExpend","meshline","lineStart","addIcon","addText","lineicon","textar","textPoint","angleDirect","pointDirection","autoAngle","textX","textY","auto","realLineWidth","getLabel","_this7","total","_percent","precision","getPrecision","percent","round","_totalPercent","_this8","textWidth","midAngle","fixWidth","fixHeight","tmpPoint","_tmpAngle","_tmpPoint","pre","tmpY","_pre","_cur","_tmpY","_i2","_pre2","_cur2","_tmpY2","_i3","_pre3","_cur3","_tmpY3","_i4","_pre4","_cur4","_roundstatetext2","Gauge","totalPostfix","offsetCy","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngleOffset","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","radius","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","angleOffset","rotationOffset","json","animationAngle","getAttackRateAngle","updateArrow","rateStep","isRunAnimation","totalNumCount","animationText","totalTextTexture","totalTextGroup","labelFontSize","letterSpacing","colorParams","tmpParams","labelParams","fontWeight","tmpTotalText","matrixWorldNeedsUpdate","totalTextPostfix","totalText","rectHeight","PlaneGeometry","positions","partpoints","indices","getBoxSize","top","getPosition","arrowLength","LineBasicMaterial","Float32Array","BufferGeometry","addAttribute","BufferAttribute","setIndex","Uint16Array","LineSegments","_this9","Texture","generateGradientTexture","canvas","document","createElement","context","getContext","gradient","createLinearGradient","addColorStop","fillStyle","drawText","drawInnerText","drawInnerCircle","drawTextRect","drawArcText","drawArc","drawArcLine","drawArcPartLine","initRoundText","drawArrow","arrowIcon","preAngle","geo","mat","tri","faces","Face3","setHex","center","vertexColors","FaceColors","isNaN","innerCircleRadius","_this10","percentText","getAttackText","RoundStateText","curColor","stageBackup","rate","uniforms","linePartMaterial1","linePartMaterial2","circleMaterial","THREEx","_camera","_domElement","_raycaster","Raycaster","_selected","_boundObjs","_$onClick","_onClick","apply","_$onDblClick","_onDblClick","_$onMouseMove","_onMouseMove","_$onMouseDown","_onMouseDown","_$onMouseUp","_onMouseUp","_$onTouchMove","_onTouchMove","_$onTouchStart","_onTouchStart","_$onTouchEnd","_onTouchEnd","_$onContextmenu","_onContextmenu","addEventListener","removeEventListener","eventNames","_getRelativeMouseXY","domEvent","element","srcElement","parentNode","elPosition","tmpElement","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetParent","elDimension","innerWidth","offsetWidth","innerHeight","offsetHeight","pageX","pageY","_objectCtxInit","object3d","_3xDomEvent","_objectCtxDeinit","_objectCtxIsInit","_objectCtxGet","eventName","useCapture","objectCtx","handlers","handler","_bound","_onMove","mouseX","mouseY","origDomEvent","boundObjs","vector","setFromCamera","intersects","intersectObjects","oldSelected","notifyOver","notifyOut","notifyMove","intersect","newSelected","_notify","_onEvent","objectParent","toPropagate","stopPropagation","event","_onMouseEvent","mouseCoords","_onTouchEvent","touches","preventDefault","dount_in_default","dount_big_default","fontfaceobserver_standalone_default","then","gui","dat_gui_module","addFolder","common","querySelector","dmins","dist_default","updateThreeConfig","tmpTimeout","clearTimeout","setTimeout"],"mappings":"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","file":"assets/js/dount.js","sourcesContent":["\nmodule.exports = window.THREE;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('vischartbase');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nrequire('../../common/SVGLoader.js');\n\nvar ThreeBase = function (_VisChartBase) {\n    _inherits(ThreeBase, _VisChartBase);\n\n    function ThreeBase(box, width, height, camera) {\n        _classCallCheck(this, ThreeBase);\n\n        var _this = _possibleConstructorReturn(this, (ThreeBase.__proto__ || Object.getPrototypeOf(ThreeBase)).call(this, box, width, height, camera));\n\n        camera && (_this.camera = camera);\n\n        _this.textColor = 0xffffff;\n        //this.lineColor = 0x596ea7;\n\n        geometry3d.screenWidth = _this.width;\n        geometry3d.screenHeight = _this.height;\n        geometry3d.camera = _this.camera;\n        return _this;\n    }\n    /*\n        let fontSize = geometry3d.to3d( 16 );\n        this.createText(\n            fontSize\n            , {\n                color: this.lineColor \n                , rotation: geometry.radians( \n                    val.angle + 90 + ( val.rotationOffset || 0 ) + 180\n                )\n            }\n            , {\n              text: val.text + '',\n              fontFamily: 'MicrosoftYaHei, \"Times New Roman\", Times, serif',\n              fontSize: fontSize * 2,\n            }\n            , ( sprite ) => {\n                sprite.position.x = val.point.x\n                sprite.position.y = val.point.y\n            }\n        );\n    */\n\n\n    _createClass(ThreeBase, [{\n        key: 'createText',\n        value: function createText() {\n            var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 44;\n            var textureParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n            var callback = arguments[3];\n            var parent = arguments[4];\n\n            var texture = new _three2.default(params);\n            textureParams.map = texture;\n            var material = new THREE.SpriteMaterial(textureParams);\n            var sprite = new THREE.Sprite(material);\n            sprite.scale.setX(texture.imageAspect).multiplyScalar(size);\n\n            callback && callback(sprite, material, texture, textureParams, params);\n\n            parent = parent || this.stage;\n\n            parent.add(sprite);\n            this.addDestroy(sprite);\n\n            return sprite;\n        }\n    }, {\n        key: 'getBox',\n        value: function getBox(mesh) {\n            var box = new THREE.Box3().setFromObject(mesh);\n            /*\n            let size = box.getSize( new THREE.Vector3 );\n            return size;\n            */\n            return box;\n        }\n    }, {\n        key: 'getBoxSize',\n        value: function getBoxSize(mesh) {\n            return this.getBox(mesh).getSize(new THREE.Vector3());\n        }\n    }, {\n        key: 'getPosition',\n        value: function getPosition(matrixWorld) {\n            var position = new THREE.Vector3();\n            return position.setFromMatrixPosition(matrixWorld);\n        }\n    }, {\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(ThreeBase.prototype.__proto__ || Object.getPrototypeOf(ThreeBase.prototype), '_setSize', this).call(this, width, height);\n\n            this.totalAngle = -360;\n            this.deep = 0;\n\n            this.sizeRate = 1;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            this.renderer && this.scene && this.camera && this.renderer.render(this.scene, this.camera);\n\n            return this;\n        }\n    }, {\n        key: 'getWidth',\n        value: function getWidth() {\n            var r = this.width;\n\n            if (_jsonUtilsx2.default.jsonInData(this, 'config.cameraPosition.z')) {\n                r = this.config.cameraPosition.z;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'getHeight',\n        value: function getHeight() {\n            var r = this.height;\n\n            if (_jsonUtilsx2.default.jsonInData(this, 'config.cameraPosition.z')) {\n                r = this.config.cameraPosition.z;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'getDeepWidth',\n        value: function getDeepWidth() {\n            var r = this.deep;\n            if (_jsonUtilsx2.default.jsonInData(this, 'config.cameraPosition.z')) {\n                r = this.config.cameraPosition.z / this.width * this.config.cameraPosition.z;\n            }\n            return r;\n        }\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.images.length) return;\n\n            if (this.iconLayer) this.iconLayer.remove();\n\n            this.images = [];\n            this._images = [];\n            this.rotationBg = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0, val.isbase64, val);\n                });\n            }\n\n            this.images.map(function (item, key) {\n                item.opt = item.opt || {};\n                if (item.opt.issvgstring) {\n                    if (!_this2.svgLoader()) return;\n                    _this2.initSVGBackground(_this2.svgLoader().parse(item.url), item, key);\n                    return;\n                }\n            });\n\n            return this;\n        }\n    }, {\n        key: 'svgLoader',\n        value: function svgLoader() {\n            if (!this._svgloader && THREE.SVGLoader) {\n                this._svgloader = new THREE.SVGLoader();\n            }\n\n            return this._svgloader;\n        }\n    }, {\n        key: 'initSVGBackground',\n        value: function initSVGBackground(paths, item, key) {\n            if (!(paths && paths.length)) return;\n\n            var group = new THREE.Group();\n            group.scale.y *= -1;\n            for (var i = 0; i < paths.length; i++) {\n                var path = paths[i];\n                var material = new THREE.MeshBasicMaterial({\n                    color: path.color,\n                    side: THREE.DoubleSide,\n                    depthWrite: false\n                });\n                var shapes = path.toShapes(true);\n                for (var j = 0; j < shapes.length; j++) {\n                    var shape = shapes[j];\n                    var geometry = new THREE.ShapeBufferGeometry(shape);\n                    var mesh = new THREE.Mesh(geometry, material);\n                    group.add(mesh);\n                    this.addDestroy(mesh);\n                }\n            }\n\n            var box = new THREE.Box3().setFromObject(group);\n            var size = box.getSize(new THREE.Vector3());\n\n            var x = -box.max.x / 2 - box.min.x / 2,\n                y = -box.max.y / 2 - box.min.y / 2;\n\n            group.position.x = x;\n            group.position.y = y;\n\n            var pivot = new THREE.Object3D();\n            pivot.add(group);\n            this.addDestroy(group);\n\n            var scale = geometry3d.to3d(Math.max(item.width, item.height)) / Math.max(box.max.x, size.x);\n            if (item.opt.scaleOffset) {\n                scale += item.opt.scaleOffset;\n            }\n\n            pivot.scale.set(scale, scale, scale);\n\n            pivot.position.y = this.fixCy();\n\n            this.stage.add(pivot);\n            this.addDestroy(pivot);\n\n            var data = { ele: pivot, item: item };\n\n            this._images.push(data);\n\n            item.rotation && this.rotationBg.push(data);\n\n            this.render();\n            this.animationBg();\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n\n            requestAnimationFrame(function () {\n                _this3.animate();\n            });\n        }\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this4 = this;\n\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n            //return;\n            if (this._images && this._images.length) {\n                this._images.map(function (item) {\n                    item.ele.rotation[_this4.getRotationAttr(item)] += _this4.getRotationStep(item);\n                });\n                this.render();\n            };\n\n            window.requestAnimationFrame(function () {\n                _this4.animationBg();\n            });\n        }\n    }, {\n        key: 'getRotationAttr',\n        value: function getRotationAttr(item) {\n            var r = 'y';\n            if (_jsonUtilsx2.default.jsonInData(item, 'item.opt.rotationAttr')) {\n                r = item.item.opt.rotationAttr;\n            }\n            return r;\n        }\n    }, {\n        key: 'getRotationStep',\n        value: function getRotationStep(item) {\n            var r = 0.03;\n            if (_jsonUtilsx2.default.jsonInData(item, 'item.opt.rotationStep')) {\n                r = item.item.opt.rotationStep;\n            }\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this5 = this;\n\n            this.setDestroy();\n\n            this.destroyList.map(function (item) {\n                _this5.dispose(item);\n            });\n        }\n    }, {\n        key: 'parseColor',\n        value: function parseColor(color) {\n            if (color.toString().indexOf('#') > -1) {\n                color = parseInt(color.replace('#', ''), 16);\n            }\n\n            return color;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2 - 5;\n                            break;\n                        }\n                }\n            }\n\n            return geometry3d.to3d(this.cy - r);\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'dispose',\n        value: function dispose(item) {\n            var _this6 = this;\n\n            if (!item) return this;\n\n            if (item.children && item.children.length) {\n                item.children.map(function (sitem) {\n                    _this6.dispose(sitem);\n                });\n            }\n\n            try {\n                item.geometry && item.parent && item.geometry.dispose && item.geometry.dispose();\n\n                item.material && item.parent && item.material.dispose && item.material.dispose();\n\n                item.texture && item.parent && item.texture.dispose && item.texture.dispose();\n            } catch (ex) {};\n\n            item.parent && item.parent.remove && item.parent.remove(item);\n\n            return this;\n        }\n    }]);\n\n    return ThreeBase;\n}(_vischartbase2.default);\n\nexports.default = ThreeBase;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pos2dto3d = pos2dto3d;\nexports.size2dto3d = size2dto3d;\nexports.to3d = to3d;\nexports.to3dx = to3dx;\nexports.to3dy = to3dy;\nexports.resizeToBit = resizeToBit;\n\nvar THREE = require('three');\n\nfunction pos2dto3d(x, y, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var vec = new THREE.Vector3(); // create once and reuse\n    var pos = new THREE.Vector3(); // create once and reuse\n    vec.set(x / screenWidth * 2 - 1, -(y / screenHeight) * 2 + 1, 0.5);\n\n    vec.unproject(camera);\n    vec.sub(camera.position).normalize();\n    var distance = -camera.position.z / vec.z;\n    pos.copy(camera.position).add(vec.multiplyScalar(distance));\n    return pos;\n}\n\nfunction size2dto3d(x, y, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var pos0 = pos2dto3d(0, 0, screenWidth, screenHeight, camera);\n    var posx = pos2dto3d(x, y, screenWidth, screenHeight, camera);\n    var pos = posx.clone();\n    pos.x = Math.abs(pos.x - pos0.x);\n    pos.y = Math.abs(pos.y - pos0.y);\n    pos.z = Math.abs(pos.z - pos0.z);\n    return pos;\n}\n\nfunction to3d(x, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var y = 0;\n    var pos0 = pos2dto3d(0, 0, screenWidth, screenHeight, camera);\n    var posx = pos2dto3d(x, y, screenWidth, screenHeight, camera);\n    return Math.abs(posx.x - pos0.x);\n}\n\nfunction to3dx(x, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var y = 0;\n\n    var vec = new THREE.Vector3(); // create once and reuse\n    var pos = new THREE.Vector3(); // create once and reuse\n    vec.set(x / screenWidth * 2 - 1, -(y / screenHeight) * 2 + 1, 0.5);\n\n    vec.unproject(camera);\n    vec.sub(camera.position).normalize();\n    var distance = -camera.position.z / vec.z;\n    pos.copy(camera.position).add(vec.multiplyScalar(distance));\n    return pos.x;\n}\n\nfunction to3dy(y, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var x = 0;\n\n    var vec = new THREE.Vector3(); // create once and reuse\n    var pos = new THREE.Vector3(); // create once and reuse\n    vec.set(x / screenWidth * 2 - 1, -(y / screenHeight) * 2 + 1, 0.5);\n\n    vec.unproject(camera);\n    vec.sub(camera.position).normalize();\n    var distance = -camera.position.z / vec.z;\n    pos.copy(camera.position).add(vec.multiplyScalar(distance));\n    return pos.x;\n}\n\nfunction resizeToBit(size) {\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n\n    var r = size;\n    var rangeCount = 1;\n    for (var i = 0; i < max; i++) {\n        var cur = rangeCount,\n            next = rangeCount * 2;\n\n        if (size >= cur && size <= next) {\n            if (size >= cur + cur / 2) {\n                r = next;\n            } else {\n                r = cur;\n            }\n            break;\n        }\n\n        rangeCount *= 2;\n    }\n\n    return r;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","\n\nlet COLORS = [\n    '#da432e',\n    '#f3a42d',\n    '#b56be8',\n    '#207dd3',\n    '#50d275',\n    '#4aabd6',\n    '#f12575',\n    '#da432e',\n    '#19af89'\n];\n\n\nexport function setColor( data, colors ){\n    colors = colors || COLORS;\n\n\n    if( data && data.legend && data.legend.data ){\n        data.legend.data.map( ( item, key ) => {\n            if( !item.textStyle ) return;\n\n            item.textStyle.color = colors[ key % colors.length ];\n        });\n    }\n\n    if( data && data.series  ){\n        data.series.map( ( item, key ) => {\n            if( !item.data ) return;\n\n            item.data.map( ( sitem, skey ) => {\n                if( !sitem.itemStyle ) return;\n                sitem.itemStyle.color = colors[ skey % colors.length ];\n            });\n        });\n    }\n\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n                i++;\n            }\n            //this.stage.add( this.layer );\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightTop;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else {\n                r = PointAt.DIRE_NAME.rightBottom;\n            }\n\n            //console.log( 'autoAngle', angle, r );\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('./3d/common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _legend = require('./3d/common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nvar _index = require('./3d/dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./3d/gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _threexDomevents = require('./common/threex.domevents.js');\n\nvar _threexDomevents2 = _interopRequireDefault(_threexDomevents);\n\nvar _geometry = require('./geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar VisThree = function (_VisChartBase) {\n    _inherits(VisThree, _VisChartBase);\n\n    function VisThree(box, width, height) {\n        _classCallCheck(this, VisThree);\n\n        var _this = _possibleConstructorReturn(this, (VisThree.__proto__ || Object.getPrototypeOf(VisThree)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n        return _this;\n    }\n\n    _createClass(VisThree, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            this.config = this.config || {\n                camera: {\n                    fov: 40,\n                    near: 1,\n                    far: 1000\n                },\n\n                cameraPosition: { x: 0, y: 0, z: 350 }\n            };\n\n            _get(VisThree.prototype.__proto__ || Object.getPrototypeOf(VisThree.prototype), '_setSize', this).call(this, width, height);\n\n            this.init();\n\n            if (this.legend && this.data && this.data.legend) {\n                this.legend.resize(this.width, this.height);\n\n                this.legend.update(this.data.legend);\n            }\n\n            if (this.data) {\n                var tmpredraw = this.redraw;\n                this.update(this.data, this.ignoreLegend);\n                this.redraw = tmpredraw;\n            }\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            if (!this.box) return;\n\n            if (!this.stage) {\n                this.stage = this.scene = new THREE.Scene();\n\n                //console.log( this, this.config );\n\n                this.camera = new THREE.PerspectiveCamera(this.config.camera.fov, this.width / this.height, this.config.camera.nera, this.config.camera.far);\n                this.camera.position.set(this.config.cameraPosition.x, this.config.cameraPosition.y, this.config.cameraPosition.z);\n                this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n                this.renderer.setPixelRatio(window.devicePixelRatio);\n                //this.renderer.setClearColor( 0xffffff, .2 );\n                this.renderer.sortObjects = true;\n                this.box.innerHTML = '';\n                this.box.appendChild(this.renderer.domElement);\n\n                //this.scene.rotation.x = geometry.radians( 45 );\n                //this.scene.rotation.y = geometry.radians( 290 );\n\n                this.cameraHelper = new THREE.CameraHelper(this.camera);\n                this.cameraHelper.visible = false;\n                this.scene.add(this.cameraHelper);\n\n                this.domEvents = new _threexDomevents2.default.DomEvents(this.camera, this.renderer.domElement);\n\n                //console.log( this.scene, this.camera );\n            } else {\n                this.camera.aspect = this.width / this.height;\n                this.camera.updateProjectionMatrix();\n            }\n            this.renderer.setSize(this.width, this.height);\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            this.render();\n\n            return this;\n        }\n    }, {\n        key: 'setThreeConfig',\n        value: function setThreeConfig(config) {\n            config = config || {};\n\n            this.config = _lodash2.default.merge(this.config, config);\n\n            return this;\n        }\n    }, {\n        key: 'updateThreeConfig',\n        value: function updateThreeConfig(config) {\n            this.setThreeConfig(config);\n\n            this.camera.position.x = this.config.cameraPosition.x;\n            this.camera.position.y = this.config.cameraPosition.y;\n            this.camera.position.z = this.config.cameraPosition.z;\n\n            this.camera.fov = this.config.camera.fov;\n            this.camera.near = this.config.camera.near;\n            this.camera.far = this.config.camera.far;\n\n            this.camera.updateProjectionMatrix();\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, ignoreLegend) {\n            var _this2 = this;\n\n            var redraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            this.data = data;\n            this.ignoreLegend = ignoreLegend;\n            this.redraw = redraw;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            this.data && this.data.legend && this.data.legend.data && this.data.legend.data.legend && this.data.legend.data.map(function (item, key) {\n                item.realIndex = key;\n            });\n\n            this.data && this.data.series && this.data.series.length && this.data.series.map(function (sitem) {\n                sitem.data && sitem.data.length && sitem.data.map(function (item, key) {\n                    item.realIndex = key;\n                });\n            });\n\n            this.clearUpdate();\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                if (this.legend && ignoreLegend) {\n                    this.emptyblock = 'kao';\n                } else {\n                    this.legend && this.legend.destroy() && (this.legent = null);\n                    this.legend = new _legend2.default(this.box, this.width, this.height, this.camera);\n                    this.legend.setOptions({\n                        renderer: this.renderer,\n                        scene: this.scene,\n                        camera: this.camera,\n                        stage: this.stage,\n                        config: this.config,\n                        domEvents: this.domEvents,\n                        onChange: function onChange(group) {\n                            _this2.initChart();\n                        }\n                    });\n                    this.legend.update(this.data.legend);\n                }\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            //console.log( 'initChart', Date.now() );\n\n            if (this.ins && this.ins.length && !this.redraw) {\n                this.emptyblock = 'kao';\n            } else {\n                this.ins.map(function (item) {\n                    item.destroy();\n                });\n                this.ins = [];\n            }\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                if (_this3.ins && _this3.ins.length && _this3.ins[key] && !_this3.redraw) {\n                    ins = _this3.ins[key];\n                    ins.width = _this3.width;\n                    ins.height = _this3.height;\n                } else {\n                    switch (val.type) {\n                        case constant.CHART_TYPE.dount:\n                            {\n                                ins = new _index2.default(_this3.box, _this3.width, _this3.height, _this3.camera);\n                                break;\n                            }\n                        case constant.CHART_TYPE.gauge:\n                            {\n                                //console.log( 'gauge 1', Date.now() );\n                                ins = new _index4.default(_this3.box, _this3.width, _this3.height, _this3.camera);\n                                break;\n                            }\n                    }\n                    if (ins) {\n                        //console.log( 'gauge 2', Date.now() );\n                        _this3.legend && ins.setLegend(_this3.legend);\n                        ins.setOptions({\n                            renderer: _this3.renderer,\n                            scene: _this3.scene,\n                            camera: _this3.camera,\n                            stage: _this3.stage,\n                            config: _this3.config,\n                            domEvents: _this3.domEvents\n                        });\n                    }\n                }\n\n                if (ins) {\n                    //console.log( 'gauge 3', Date.now() );\n                    _this3.options = _this3.options || {};\n                    _this3.options.srcData = val;\n                    ins.setOptions(_this3.options);\n\n                    var fillData = _this3.getLegendData(val);\n                    ins.update(fillData, _jsonUtilsx2.default.clone(_this3.data));\n\n                    if (!_this3.ins[key]) {\n                        _this3.ins[key] = ins;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                this.legend.group.map(function (item, key) {\n                    //console.log( key, item.disabled, item );\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(VisThree.prototype.__proto__ || Object.getPrototypeOf(VisThree.prototype), 'destroy', this).call(this);\n\n            //this.clearUpdate();\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n            //this.legend && this.legend.destroy();\n\n            this.stage && this.stage.destroy();\n            this.stage = null;\n        }\n    }, {\n        key: 'clearUpdate',\n        value: function clearUpdate() {\n            //this.legend && !this.ignoreLegend && this.legend.destroy();\n        }\n    }]);\n\n    return VisThree;\n}(_base2.default);\n\nexports.default = VisThree;","'use strict';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author zz85 / http://joshuakoo.com/\n */\n\nTHREE.SVGLoader = function (manager) {\n\n\tthis.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.SVGLoader.prototype = {\n\n\tconstructor: THREE.SVGLoader,\n\n\tload: function load(url, onLoad, onProgress, onError) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader(scope.manager);\n\t\tloader.load(url, function (text) {\n\n\t\t\tonLoad(scope.parse(text));\n\t\t}, onProgress, onError);\n\t},\n\n\tparse: function parse(text) {\n\n\t\tfunction parseNode(node, style) {\n\n\t\t\tif (node.nodeType !== 1) return;\n\n\t\t\tswitch (node.nodeName) {\n\n\t\t\t\tcase 'svg':\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'path':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (node.hasAttribute('d') && isVisible(style)) paths.push(parsePathNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rect':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseRectNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polygon':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parsePolygonNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polyline':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parsePolylineNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'circle':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseCircleNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ellipse':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseEllipseNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'line':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseLineNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t//console.log( node );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tvar nodes = node.childNodes;\n\n\t\t\tfor (var i = 0; i < nodes.length; i++) {\n\n\t\t\t\tparseNode(nodes[i], style);\n\t\t\t}\n\t\t}\n\n\t\tfunction parsePathNode(node, style) {\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\n\t\t\tvar point = new THREE.Vector2();\n\t\t\tvar control = new THREE.Vector2();\n\n\t\t\tvar d = node.getAttribute('d');\n\n\t\t\t// console.log( d );\n\n\t\t\tvar commands = d.match(/[a-df-z][^a-df-z]*/ig);\n\n\t\t\tfor (var i = 0, l = commands.length; i < l; i++) {\n\n\t\t\t\tvar command = commands[i];\n\n\t\t\t\tvar type = command.charAt(0);\n\t\t\t\tvar data = command.substr(1).trim();\n\n\t\t\t\tswitch (type) {\n\n\t\t\t\t\tcase 'M':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x = numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.moveTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'H':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.x = numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.y = numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x = numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'C':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 6) {\n\t\t\t\t\t\t\tpath.bezierCurveTo(numbers[j + 0], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], numbers[j + 5]);\n\t\t\t\t\t\t\tcontrol.x = numbers[j + 2];\n\t\t\t\t\t\t\tcontrol.y = numbers[j + 3];\n\t\t\t\t\t\t\tpoint.x = numbers[j + 4];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 5];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'S':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.bezierCurveTo(getReflection(point.x, control.x), getReflection(point.y, control.y), numbers[0], numbers[1], numbers[2], numbers[3]);\n\t\t\t\t\t\tcontrol.x = numbers[0];\n\t\t\t\t\t\tcontrol.y = numbers[1];\n\t\t\t\t\t\tpoint.x = numbers[2];\n\t\t\t\t\t\tpoint.y = numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Q':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.quadraticCurveTo(numbers[0], numbers[1], numbers[2], numbers[3]);\n\t\t\t\t\t\tcontrol.x = numbers[0];\n\t\t\t\t\t\tcontrol.y = numbers[1];\n\t\t\t\t\t\tpoint.x = numbers[2];\n\t\t\t\t\t\tpoint.y = numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tvar rx = getReflection(point.x, control.x);\n\t\t\t\t\t\tvar ry = getReflection(point.y, control.y);\n\t\t\t\t\t\tpath.quadraticCurveTo(rx, ry, numbers[0], numbers[1]);\n\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\tpoint.x = numbers[0];\n\t\t\t\t\t\tpoint.y = numbers[1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 7) {\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x = numbers[j + 5];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 6];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(path, numbers[j], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], start, point);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t//\n\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x += numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.moveTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'h':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.x += numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.y += numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x += numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 6) {\n\t\t\t\t\t\t\tpath.bezierCurveTo(point.x + numbers[j + 0], point.y + numbers[j + 1], point.x + numbers[j + 2], point.y + numbers[j + 3], point.x + numbers[j + 4], point.y + numbers[j + 5]);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[j + 2];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[j + 3];\n\t\t\t\t\t\t\tpoint.x += numbers[j + 4];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 5];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.bezierCurveTo(getReflection(point.x, control.x), getReflection(point.y, control.y), point.x + numbers[0], point.y + numbers[1], point.x + numbers[2], point.y + numbers[3]);\n\t\t\t\t\t\tcontrol.x = point.x + numbers[0];\n\t\t\t\t\t\tcontrol.y = point.y + numbers[1];\n\t\t\t\t\t\tpoint.x += numbers[2];\n\t\t\t\t\t\tpoint.y += numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.quadraticCurveTo(point.x + numbers[0], point.y + numbers[1], point.x + numbers[2], point.y + numbers[3]);\n\t\t\t\t\t\tcontrol.x = point.x + numbers[0];\n\t\t\t\t\t\tcontrol.y = point.y + numbers[1];\n\t\t\t\t\t\tpoint.x += numbers[2];\n\t\t\t\t\t\tpoint.y += numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tvar rx = getReflection(point.x, control.x);\n\t\t\t\t\t\tvar ry = getReflection(point.y, control.y);\n\t\t\t\t\t\tpath.quadraticCurveTo(rx, ry, point.x + numbers[0], point.y + numbers[1]);\n\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\tpoint.x = point.x + numbers[0];\n\t\t\t\t\t\tpoint.y = point.y + numbers[1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'a':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 7) {\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x += numbers[j + 5];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 6];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(path, numbers[j], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], start, point);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t//\n\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\tcase 'z':\n\t\t\t\t\t\tpath.currentPath.autoClose = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t//console.warn( command );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\t/**\n   * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n   * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n   * From\n   * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n   * To\n   * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n   */\n\n\t\tfunction parseArcCommand(path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end) {\n\n\t\t\tx_axis_rotation = x_axis_rotation * Math.PI / 180;\n\n\t\t\t// Ensure radii are positive\n\t\t\trx = Math.abs(rx);\n\t\t\try = Math.abs(ry);\n\n\t\t\t// Compute (x1′, y1′)\n\t\t\tvar dx2 = (start.x - end.x) / 2.0;\n\t\t\tvar dy2 = (start.y - end.y) / 2.0;\n\t\t\tvar x1p = Math.cos(x_axis_rotation) * dx2 + Math.sin(x_axis_rotation) * dy2;\n\t\t\tvar y1p = -Math.sin(x_axis_rotation) * dx2 + Math.cos(x_axis_rotation) * dy2;\n\n\t\t\t// Compute (cx′, cy′)\n\t\t\tvar rxs = rx * rx;\n\t\t\tvar rys = ry * ry;\n\t\t\tvar x1ps = x1p * x1p;\n\t\t\tvar y1ps = y1p * y1p;\n\n\t\t\t// Ensure radii are large enough\n\t\t\tvar cr = x1ps / rxs + y1ps / rys;\n\n\t\t\tif (cr > 1) {\n\n\t\t\t\t// scale up rx,ry equally so cr == 1\n\t\t\t\tvar s = Math.sqrt(cr);\n\t\t\t\trx = s * rx;\n\t\t\t\try = s * ry;\n\t\t\t\trxs = rx * rx;\n\t\t\t\trys = ry * ry;\n\t\t\t}\n\n\t\t\tvar dq = rxs * y1ps + rys * x1ps;\n\t\t\tvar pq = (rxs * rys - dq) / dq;\n\t\t\tvar q = Math.sqrt(Math.max(0, pq));\n\t\t\tif (large_arc_flag === sweep_flag) q = -q;\n\t\t\tvar cxp = q * rx * y1p / ry;\n\t\t\tvar cyp = -q * ry * x1p / rx;\n\n\t\t\t// Step 3: Compute (cx, cy) from (cx′, cy′)\n\t\t\tvar cx = Math.cos(x_axis_rotation) * cxp - Math.sin(x_axis_rotation) * cyp + (start.x + end.x) / 2;\n\t\t\tvar cy = Math.sin(x_axis_rotation) * cxp + Math.cos(x_axis_rotation) * cyp + (start.y + end.y) / 2;\n\n\t\t\t// Step 4: Compute θ1 and Δθ\n\t\t\tvar theta = svgAngle(1, 0, (x1p - cxp) / rx, (y1p - cyp) / ry);\n\t\t\tvar delta = svgAngle((x1p - cxp) / rx, (y1p - cyp) / ry, (-x1p - cxp) / rx, (-y1p - cyp) / ry) % (Math.PI * 2);\n\n\t\t\tpath.currentPath.absellipse(cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation);\n\t\t}\n\n\t\tfunction svgAngle(ux, uy, vx, vy) {\n\n\t\t\tvar dot = ux * vx + uy * vy;\n\t\t\tvar len = Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n\t\t\tvar ang = Math.acos(Math.max(-1, Math.min(1, dot / len))); // floating point precision, slightly over values appear\n\t\t\tif (ux * vy - uy * vx < 0) ang = -ang;\n\t\t\treturn ang;\n\t\t}\n\n\t\t/*\n  * According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n  * rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n  */\n\t\tfunction parseRectNode(node, style) {\n\n\t\t\tvar x = parseFloat(node.getAttribute('x') || 0);\n\t\t\tvar y = parseFloat(node.getAttribute('y') || 0);\n\t\t\tvar rx = parseFloat(node.getAttribute('rx') || 0);\n\t\t\tvar ry = parseFloat(node.getAttribute('ry') || 0);\n\t\t\tvar w = parseFloat(node.getAttribute('width'));\n\t\t\tvar h = parseFloat(node.getAttribute('height'));\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\t\t\tpath.moveTo(x + 2 * rx, y);\n\t\t\tpath.lineTo(x + w - 2 * rx, y);\n\t\t\tif (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y, x + w, y, x + w, y + 2 * ry);\n\t\t\tpath.lineTo(x + w, y + h - 2 * ry);\n\t\t\tif (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h);\n\t\t\tpath.lineTo(x + 2 * rx, y + h);\n\n\t\t\tif (rx !== 0 || ry !== 0) {\n\n\t\t\t\tpath.bezierCurveTo(x, y + h, x, y + h, x, y + h - 2 * ry);\n\t\t\t\tpath.lineTo(x, y + 2 * ry);\n\t\t\t\tpath.bezierCurveTo(x, y, x, y, x + 2 * rx, y);\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parsePolygonNode(node, style) {\n\n\t\t\tfunction iterator(match, a, b) {\n\n\t\t\t\tvar x = parseFloat(a);\n\t\t\t\tvar y = parseFloat(b);\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t} else {\n\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute('points').replace(regex, iterator);\n\n\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parsePolylineNode(node, style) {\n\n\t\t\tfunction iterator(match, a, b) {\n\n\t\t\t\tvar x = parseFloat(a);\n\t\t\t\tvar y = parseFloat(b);\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t} else {\n\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute('points').replace(regex, iterator);\n\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parseCircleNode(node, style) {\n\n\t\t\tvar x = parseFloat(node.getAttribute('cx'));\n\t\t\tvar y = parseFloat(node.getAttribute('cy'));\n\t\t\tvar r = parseFloat(node.getAttribute('r'));\n\n\t\t\tvar subpath = new THREE.Path();\n\t\t\tsubpath.absarc(x, y, r, 0, Math.PI * 2);\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\t\t\tpath.subPaths.push(subpath);\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parseEllipseNode(node, style) {\n\n\t\t\tvar x = parseFloat(node.getAttribute('cx'));\n\t\t\tvar y = parseFloat(node.getAttribute('cy'));\n\t\t\tvar rx = parseFloat(node.getAttribute('rx'));\n\t\t\tvar ry = parseFloat(node.getAttribute('ry'));\n\n\t\t\tvar subpath = new THREE.Path();\n\t\t\tsubpath.absellipse(x, y, rx, ry, 0, Math.PI * 2);\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\t\t\tpath.subPaths.push(subpath);\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parseLineNode(node, style) {\n\n\t\t\tvar x1 = parseFloat(node.getAttribute('x1'));\n\t\t\tvar y1 = parseFloat(node.getAttribute('y1'));\n\t\t\tvar x2 = parseFloat(node.getAttribute('x2'));\n\t\t\tvar y2 = parseFloat(node.getAttribute('y2'));\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.moveTo(x1, y1);\n\t\t\tpath.lineTo(x2, y2);\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\t\t}\n\n\t\t//\n\n\t\tfunction parseStyle(node, style) {\n\n\t\t\tstyle = Object.assign({}, style); // clone style\n\n\t\t\tif (node.hasAttribute('fill')) style.fill = node.getAttribute('fill');\n\t\t\tif (node.style.fill !== '') style.fill = node.style.fill;\n\n\t\t\treturn style;\n\t\t}\n\n\t\tfunction isVisible(style) {\n\n\t\t\treturn style.fill !== 'none' && style.fill !== 'transparent';\n\t\t}\n\n\t\t// http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n\t\tfunction getReflection(a, b) {\n\n\t\t\treturn a - (b - a);\n\t\t}\n\n\t\tfunction parseFloats(string) {\n\n\t\t\tvar array = string.split(/[\\s,]+|(?=\\s?[+\\-])/);\n\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\n\t\t\t\tvar number = array[i];\n\n\t\t\t\t// Handle values like 48.6037.7\n\t\t\t\t// TODO Find a regex for this\n\n\t\t\t\tif (number.indexOf('.') !== number.lastIndexOf('.')) {\n\n\t\t\t\t\tarray.splice(i + 1, 0, '0.' + number.split('.')[2]);\n\t\t\t\t}\n\n\t\t\t\tarray[i] = parseFloat(number);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t}\n\n\t\t//\n\n\t\t//console.log( 'THREE.SVGLoader' );\n\n\t\tvar paths = [];\n\n\t\t//console.time( 'THREE.SVGLoader: DOMParser' );\n\n\t\tvar xml = new DOMParser().parseFromString(text, 'image/svg+xml'); // application/xml\n\n\t\t//console.timeEnd( 'THREE.SVGLoader: DOMParser' );\n\n\t\t//console.time( 'THREE.SVGLoader: Parse' );\n\n\t\tparseNode(xml.documentElement, { fill: '#000' });\n\n\t\t// console.log( paths );\n\n\t\t//console.timeEnd( 'THREE.SVGLoader: Parse' );\n\n\t\treturn paths;\n\t}\n\n};\n\nmodule.exports = THREE.SVGLoader;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('./base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height, camera) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height, camera));\n\n        _this.name = 'Legend_' + Date.now();\n\n        _this.textColor = 0x24a3ea;\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        _this.destroyList = [];\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n        }\n    }, {\n        key: 'resize',\n        value: function resize(width, height) {\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var allData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'resize', this).call(this, width, height, data, allData);\n\n            geometry3d.screenWidth = this.width;\n            geometry3d.screenHeight = this.height;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            geometry3d.screenWidth = this.width;\n            geometry3d.screenHeight = this.height;\n            geometry3d.camera = this.camera;\n\n            //console.log( 'text size', geometry3d.to3d( 20 ) );\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            break;\n                        }\n                }\n\n                y += 4;\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                color = _this2.parseColor(color);\n                var pos = geometry3d.pos2dto3d(x, y);\n\n                if (!_this2.inited) {\n\n                    //console.log( 'x', x, 'y', y, 'pos.x', pos.x, 'pos.y', pos.y );\n\n                    var group = new THREE.Group();\n                    group.transparent = true;\n\n                    var bgGeometry = new THREE.PlaneBufferGeometry(geometry3d.to3d(_this2.columnWidth()), geometry3d.to3d(_this2.itemHeight()), 32);\n                    var bgMaterial = new THREE.MeshBasicMaterial({\n                        color: _this2.parseColor(0xffffff),\n                        side: THREE.DoubleSide,\n                        opacity: 0,\n                        transparent: true\n                    });\n                    var bgPlane = new THREE.Mesh(bgGeometry, bgMaterial);\n                    bgPlane.position.x = pos.x + geometry3d.to3d(_this2.columnWidth()) / 2;\n                    bgPlane.position.y = pos.y;\n\n                    group.add(bgPlane);\n                    _this2.addDestroy(bgPlane);\n\n                    var rectGeometry = new THREE.PlaneBufferGeometry(geometry3d.to3d(_this2.itemWidth()), geometry3d.to3d(_this2.itemHeight()), 32);\n                    var rectMaterial = new THREE.MeshBasicMaterial({\n                        color: color,\n                        side: THREE.DoubleSide,\n                        transparent: true\n                    });\n                    var rectPlane = new THREE.Mesh(rectGeometry, rectMaterial);\n                    rectPlane.position.x = pos.x;\n                    rectPlane.position.y = pos.y;\n                    group.add(rectPlane);\n                    _this2.addDestroy(rectPlane);\n\n                    var fontSize = geometry3d.to3d(22);\n                    var textSprite = _this2.createText(fontSize, { color: _this2.parseColor(_this2.textColor) }, {\n                        text: label,\n                        fontFamily: 'MicrosoftYaHei',\n                        fontSize: fontSize * 2,\n                        fontStyle: 'normal',\n                        transparent: true\n                    }, function (textSprite, textMaterial) {\n                        textSprite.position.x = pos.x + _this2.itemWidth() + geometry3d.to3d(_this2.iconSpace) + textSprite.scale.x / 2 - 3;\n                        textSprite.position.y = pos.y;\n                    }, group);\n                    _this2.scene.add(group);\n                    _this2.addDestroy(group);\n\n                    var data = {\n                        ele: group,\n                        item: item,\n                        disabled: false,\n                        rect: rectPlane,\n                        bg: bgPlane,\n                        text: textSprite\n                    };\n                    _this2.group.push(data);\n                    _this2.domEvents.bind(group, 'click', function () {\n                        data.disabled = !data.disabled;\n                        if (data.disabled) {\n                            //group.opacity( .6 );\n                            data.rect.material.opacity = .6;\n                            data.text.material.opacity = .6;\n                        } else {\n                            data.rect.material.opacity = 1;\n                            data.text.material.opacity = 1;\n                        }\n                        _this2.onChange && _this2.onChange(data);\n                    });\n                } else {\n                    var _item = _this2.group[key];\n\n                    var _bgPlane = _item.bg,\n                        _rectPlane = _item.rect,\n                        _group = _item.ele,\n                        _textSprite = _item.text;\n\n                    _bgPlane.position.x = pos.x + geometry3d.to3d(_this2.columnWidth()) / 2;\n                    _bgPlane.position.y = pos.y;\n\n                    var rectGeometry = new THREE.PlaneBufferGeometry(geometry3d.to3d(_this2.itemWidth()), geometry3d.to3d(_this2.itemHeight()), 32);\n                    _rectPlane.geometry = rectGeometry;\n                    _rectPlane.needsUpdate = true;\n\n                    _rectPlane.position.x = pos.x;\n                    _rectPlane.position.y = pos.y;\n\n                    _item.text.parent.remove(_item.text);\n                    var _fontSize = geometry3d.to3d(22);\n                    _textSprite = _this2.createText(_fontSize, { color: _this2.parseColor(_this2.textColor) }, {\n                        text: label,\n                        fontFamily: 'MicrosoftYaHei',\n                        fontSize: _fontSize * 5,\n                        fontStyle: 'normal',\n                        transparent: true\n                    }, function (textSprite, textMaterial) {\n                        textSprite.position.x = pos.x + _this2.itemWidth() + geometry3d.to3d(_this2.iconSpace) + textSprite.scale.x / 2 - 3;\n                        textSprite.position.y = pos.y;\n\n                        if (_item.disabled) {\n                            //group.opacity( .6 );\n                            textMaterial.opacity = .6;\n                        } else {\n                            textMaterial.opacity = 1;\n                        }\n                    }, _group);\n                    _item.text = _textSprite;\n                }\n            });\n            //this.stage.add( this.layer );\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            this.init();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.spaceY() * (this.row() - 1);\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            //return ( this.width - ( this.column() - 1 + 2 ) * this.space() ) / this.column();\n            var width = this.width;\n            return (width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 5;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 20;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this3 = this;\n\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'destroy', this).call(this);\n            //console.log( this.name, 'destroy', this.group.length );\n\n            this.group && this.group.length && this.group.map(function (item) {\n                //if( !item.ele ) return;\n                //item.ele.off( 'click' );\n                //item.ele.removeEventListener('click');\n                _this3.domEvents.unbind(item.ele, 'click');\n                //console.log( 'remove event', Date.now() );\n            });\n        }\n    }]);\n\n    return Legend;\n}(_base2.default);\n\nexports.default = Legend;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height, camera) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height, camera));\n\n        _this.name = 'Dount_' + Date.now();\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), '_setSize', this).call(this, width, height);\n\n            this.outPercent = .53;\n            this.inPercent = .37;\n\n            this.circleLinePercent = .34;\n            this.circlePercent = .31;\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.animationStep = 8;\n            this.angleStep = 5;\n\n            this.textHeight = 26;\n            this.lineOffset = 50;\n\n            this.path = [];\n            this.line = [];\n\n            this.textOffset = 4;\n\n            this.lineColor = 0x24a3ea;\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n            };\n\n            this.lineWidth = 32;\n            this.lineSpace = 10;\n            this.lineAngle = 35;\n            this.lineHeight = 15;\n            this.lineCurveLength = 30;\n\n            this.loopSort = [4, 8, 1, 2];\n\n            this.clearList = [];\n\n            this.outRadius = 73;\n            this.inRadius = 53;\n\n            this.lineLength = 25;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            geometry3d.screenWidth = this.width;\n            geometry3d.screenHeight = this.height;\n            geometry3d.camera = this.camera;\n\n            this.calcLayoutPosition();\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n            //console.log( THREE );\n\n            this.data = data;\n            this.allData = allData;\n\n            this.countAngle = 0;\n            this.isDone = 0;\n            this.lineLengthCount = 0;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.clearItems();\n            this.calcVal();\n            this.initText();\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLine.rotation.z -= .03;\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle -= this.animationStep;\n\n            if (!this.isSeriesAnimation()) {\n                this.countAngle = this.totalAngle;\n            }\n\n            if (this.countAngle <= this.totalAngle || !this.isAnimation()) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle <= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle > item.itemData.startAngle) continue;\n\n                var geometryx = new THREE.RingGeometry(this.inRadius, this.outRadius, 256, 1, geometry.radians(0), geometry.radians(tmpAngle));\n\n                item.arc.geometry.dispose();\n                item.arc.geometry = geometryx;\n            }\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = geometry3d.to3d(Math.ceil(this.circlePercent * this.min / 2));\n            //console.log( this.circleRadius );\n\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.scene.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = geometry3d.to3d(Math.ceil(this.circleLinePercent * this.min / 2));\n\n            var material = void 0,\n                geometryItem = void 0,\n                circle = void 0,\n                group = void 0,\n                line = void 0;\n\n            group = new THREE.Group();\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(90), geometry.radians(90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n            this.addDestroy(circle);\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(0), geometry.radians(-90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            group.position.y = this.fixCy();\n\n            group.add(circle);\n            this.addDestroy(circle);\n\n            this.circleLine = group;\n\n            this.scene.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.path = [];\n            this.line = [];\n\n            for (var ii = this.data.data.length - 1; ii >= 0; ii--) {\n                var val = this.data.data[ii],\n                    key = ii;\n                var pathindex = this.data.data.length - 1 - ii;\n\n                var color = this.colors[key % this.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n                color = this.parseColor(color);\n\n                var line = void 0,\n                    material = void 0,\n                    geometryx = void 0,\n                    mesh = void 0,\n                    arc = void 0,\n                    tmp = void 0;\n\n                line = new _three5.MeshLine();\n                material = new _three5.MeshLineMaterial({\n                    color: new THREE.Color(0xffffff),\n                    lineWidth: 2\n                });\n                geometryx = new THREE.Geometry();\n                line.setGeometry(geometryx);\n                mesh = new THREE.Mesh(line.geometry, material);\n                mesh.position.y = this.fixCy();\n\n                this.scene.add(mesh);\n                this.addDestroy(mesh);\n                this.line.push(mesh);\n\n                geometryx = new THREE.RingGeometry(this.inRadius, this.outRadius, 256, 1, geometry.radians(0), geometry.radians(-0.1));\n                material = new THREE.MeshBasicMaterial({ color: color, side: THREE.DoubleSide });\n                arc = new THREE.Mesh(geometryx, material);\n                arc.renderOrder = 1;\n\n                arc.position.y = this.fixCy();\n\n                this.scene.add(arc);\n                this.addDestroy(arc);\n\n                tmp = {\n                    arc: arc,\n                    pathData: [],\n                    itemData: val,\n                    line: mesh,\n                    mline: line,\n                    realIndex: ii\n                };\n\n                this.path.push(tmp);\n            };\n\n            return this;\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this4 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength || !this.isAnimation()) {\n                this.lineLengthCount = this.lineLength;\n            }\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.arcLayer;\n\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n\n                var meshline = new _three5.MeshLine();\n                var geometryx = new THREE.Geometry();\n                geometryx.vertices.push(new THREE.Vector3(path.itemData.lineStart.x, path.itemData.lineStart.y, 0), new THREE.Vector3(lineEnd.x, lineEnd.y, 0), new THREE.Vector3(lineExpend.x, lineExpend.y, 0));\n                meshline.setGeometry(geometryx);\n                line.geometry = meshline.geometry;\n\n                if (this.lineLengthCount >= this.lineLength) {\n                    this.addIcon(path, layer, path.realIndex);\n                    this.addText(path, layer, path.realIndex);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this4.animationLine();\n                    });\n                }\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer, key) {\n            if (!path.lineicon) {\n                var geometry = new THREE.CircleGeometry(3, 32);\n                var material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n                var circle = new THREE.Mesh(geometry, material);\n                path.lineicon = circle;\n                this.scene.add(circle);\n                this.addDestroy(circle);\n            }\n\n            path.lineicon.position.x = path.itemData.lineExpend.x;\n            path.lineicon.position.y = path.itemData.lineExpend.y + this.fixCy();\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer, key) {\n            if (!path.text) {\n                path.text = this.textar[key];\n                this.scene.add(path.text);\n                this.addDestroy(path.text);\n            }\n\n            var text = path.text;\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n\n            var textX = textPoint.x,\n                textY = textPoint.y + this.fixCy(),\n                direct = path.itemData.pointDirection.auto();\n            text.position.x = textX;\n            text.position.y = textY;\n\n            var position = new THREE.Vector3();\n            position.setFromMatrixPosition(text.matrixWorld);\n\n            text.position.y = textY + text.scale.y / 2 - geometry3d.to3d(3);\n\n            switch (angleDirect) {\n                case 8:\n                case 1:\n                    {\n                        text.position.x = textX - text.scale.x / 2 + 2;\n                        break;\n                    }\n                default:\n                    {\n                        text.position.x = textX + text.scale.x / 2 - 2;\n                        break;\n                    }\n            }\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            this.inRadius = geometry3d.to3d(Math.ceil(this.inPercent * this.min / 2));\n            this.outRadius = geometry3d.to3d(Math.ceil(this.outPercent * this.min / 2));\n\n            this.lineHeight = geometry3d.to3d(24);\n            this.lineWidth = geometry3d.to3d(50);\n            this.lineLength = geometry3d.to3d(22);\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.clearItems();\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n        }\n    }, {\n        key: 'clearItems',\n        value: function clearItems() {\n            var _this5 = this;\n\n            this.clearList.map(function (item, key) {\n                _this5.dispose(item);\n            });\n            this.clearList = [];\n        }\n    }, {\n        key: 'initText',\n        value: function initText() {\n            var _this6 = this;\n\n            this.textar = [];\n\n            this.realLineWidth = this.lineWidth;\n\n            this.data.data.map(function (val, key) {\n                var fontSize = geometry3d.to3d(25);\n                var sprite = _this6.createText(fontSize, { color: _this6.lineColor }, {\n                    //text: `${val.percent}%`,\n                    text: _this6.getLabel(val),\n                    fontFamily: 'MicrosoftYaHei',\n                    //fontSize: fontSize * 2,\n                    fontSize: fontSize * 2,\n                    fontStyle: 'italic'\n                }, function (sprite) {\n                    sprite.position.x = -10000;\n                });\n                _this6.clearList.push(sprite);\n                _this6.textar.push(sprite);\n            });\n        }\n    }, {\n        key: 'calcVal',\n        value: function calcVal() {\n            var _this7 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                //console.log( val );\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = val.value / total;\n\n                var precision = _this7.getPrecision(val) * 10;\n                val.percent = Math.round(Math.floor(val._percent * 100 * precision) / 10) / _this7.getPrecision(val);\n\n                val._percent = val.percent / 100;\n                tmp = tmp + val._percent;\n                val._totalPercent = tmp;\n\n                val.endAngle = _this7.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var val = this.data.data[this.data.data.length - 1];\n                val._totalPercent = 1;\n                val._percent = 1 - (tmp - val._percent);\n\n                var precision = this.getPrecision(val) * 10;\n                val.percent = Math.round(Math.floor(val._percent * 100 * precision) / 10) / this.getPrecision(val);\n                val.endAngle = this.totalAngle;\n            }\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this8 = this;\n\n            if (!this.data) return;\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this8.data.data[key - 1].endAngle;\n                }\n\n                //this.lineWidth = geometry3d.to3d( 80 );\n\n                var text = _this8.textar[key];\n                var textWidth = _this8.lineWidth;\n\n                if (text.scale.x >= textWidth) {\n                    textWidth = text.scale.x;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this8.outRadius - 2, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this8.outRadius + _this8.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this8.outRadius + _this8.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this8.fixWidth(), _this8.fixHeight(), geometry.pointPlus(val.textPoint, _this8.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                //console.log( 'lineAngle', lineAngle,  val.midAngle );\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this8.outRadius + _this8.lineSpace);\n\n                            var tmp = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (tmp > _this8.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this8.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - textWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this8.outRadius + _this8.lineSpace;\n                            var _tmp = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp > _this8.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this8.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + textWidth;\n                            break;\n                        }\n                }\n\n                _this8.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this8.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this8.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 4:\n                        {\n                            var tmpY = 0;\n                            for (var _i = item.length - 2; _i >= 0; _i--) {\n                                var _pre = item[_i + 1],\n                                    _cur = item[_i];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this8.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this8.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n\n                    case 1:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i2 = item.length - 2; _i2 >= 0; _i2--) {\n                                var _pre2 = item[_i2 + 1],\n                                    _cur2 = item[_i2];\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this8.lineHeight || _cur2.lineEnd.y >= _pre2.lineEnd.y) {\n                                    _tmpY = _pre2.lineEnd.y - _this8.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY2 = item[0].lineEnd.y;\n                            for (var _i3 = 1; _i3 < item.length; _i3++) {\n                                var _pre3 = item[_i3 - 1],\n                                    _cur3 = item[_i3],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre3.lineEnd.y + _this8.fixCy()) < _this8.lineHeight) {\n                                    _pre3.lineExpend.y = _pre3.lineEnd.y = _pre3.lineExpend.y + _this8.lineHeight;\n                                }\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this8.lineHeight || _cur3.lineEnd.y >= _pre3.lineEnd.y) {\n\n                                    _tmpY2 = _pre3.lineEnd.y - _this8.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n\n                            break;\n                        }\n\n                    case 8:\n                        {\n                            var _tmpY3 = 0;\n                            for (var _i4 = 1; _i4 < item.length; _i4++) {\n                                var _pre4 = item[_i4 - 1],\n                                    _cur4 = item[_i4];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this8.lineHeight || _cur4.lineEnd.y <= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y + _this8.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }]);\n\n    return Dount;\n}(_base2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height, camera) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height, camera));\n\n        _this.cx = 0;\n        _this.cy = 0;\n        _this.cpoint = { x: 0, y: 0 };\n\n        _this.name = 'Gauge' + Date.now();\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), '_setSize', this).call(this, width, height);\n\n            this.totalPostfix = '次/时';\n\n            this.offsetCy = 35;\n\n            this.curRate = 0;\n            this.totalNum = 0;\n            this.totalNumStep = 5;\n\n            this.animationStep = 30 * 1;\n\n            this.roundRadiusPercent = .070;\n\n            this.lineColor = 0x596ea7;\n\n            this.circleLinePercent = .22;\n            this.circlePercent = .24;\n\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.arcLinePercent = .34 / 2;\n\n            this.arcOutPercent = .33 / 2;\n            this.arcInPercent = .255 / 2;\n\n            this.arcLabelLength = 6;\n            this.arcTextLength = 15;\n\n            this.arcAngleOffset = -50;\n            this.arcAngle = 280;\n            this.part = 22;\n            this.arcTotal = 1100;\n\n            this.textOffset = 0;\n\n            this.arcOffset = this.arcAngleOffset;\n            this.arcOffsetPad = -5;\n            this.partLabel = this.part / 2;\n            this.partAngle = this.arcAngle / this.part;\n            this.partNum = this.arcTotal / this.part;\n\n            this.startAngle = this.arcAngle + this.arcAngleOffset + this.arcOffsetPad;\n\n            this.textOffsetX = -1;\n            this.textOffsetY = -8;\n            this.textLineLength = 6;\n\n            this.textRectWidthPercent = .5;\n            this.textRectHeightPercent = .11;\n\n            this.textRoundPercent = .33;\n            this.textRoundOffsetAngle = 160;\n            this.textRoundPlusAngle = 110;\n            this.textRoundMaxAngle = this.textRoundOffsetAngle + this.textRoundPlusAngle * 2;\n            this.roundStatusRaidus = 30;\n            this.textRoundAngle = [{\n                angle: this.textRoundOffsetAngle,\n                text: '低',\n                point: {},\n                min: 0,\n                max: 100,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle,\n                text: '中',\n                point: {},\n                min: 101,\n                max: 500,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle * 2,\n                text: '高',\n                point: {},\n                min: 501,\n                max: Math.pow(10, 10),\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }];\n\n            this.init();\n        }\n    }, {\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent * this.sizeRate;\n\n            this.roundRadius = this.width * this.roundRadiusPercent * this.sizeRate;\n\n            this.arcInRadius = geometry3d.to3d(this.width * this.arcInPercent * this.sizeRate);\n            this.arcOutRadius = geometry3d.to3d(this.width * this.arcOutPercent * this.sizeRate);\n\n            this.arcLineRaidus = geometry3d.to3d(Math.ceil(this.arcLinePercent * this.max) * this.sizeRate);\n            this.arcTextLength = geometry3d.to3d(this.arcTextLength);\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38 * this.sizeRate;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(geometry3d.to3d(_this3.textRoundRadius), -val.angle);\n                val.point = point;\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = (this.part - i) * this.partAngle + this.arcOffset;\n\n                if (true) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n                    this.arcPartLineAr.push({ start: start, end: end });\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push({ start: start, end: end });\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0,\n                        rotationOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n                    if (i) {\n                        angleOffset = 0;\n                    }\n\n                    if (i >= 19) {\n                        //angleOffset = 14;\n                        rotationOffset = -2;\n                        angleOffset = -2;\n                    }\n                    if (i >= 21) {\n                        //angleOffset = 18;\n                        angleOffset = -5;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset),\n                        rotationOffset: rotationOffset\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                if (!val.ins) {\n                    val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height, _this4.camera);\n                    val.ins.setOptions(Object.assign(val, {\n                        stage: _this4.stage,\n                        scene: _this4.scene,\n                        data: _this4.data,\n                        allData: _this4.allData,\n                        lineColor: _this4.lineColor\n                    }));\n                    val.ins.init();\n                }\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'setOptions',\n        value: function setOptions(json) {\n            if (json.stage) {\n                var group = new THREE.Group();\n                json.stage.add(group);\n                this.addDestroy(group);\n\n                json.stage = group;\n\n                json.stage.position.y += -geometry3d.to3d(20);\n            }\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'setOptions', this).call(this, json);\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this5 = this;\n\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'update', this).call(this, data, allData);\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this5.curRate = val.value;\n                    _this5.totalNum = val.total;\n                });\n            } else {\n                this.curRate = 0;\n                this.totalNum = 0;\n            }\n\n            this.initDataLayout();\n\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n\n            this.updateArrow();\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                this.angleStep = Math.abs(this.animationAngle) / this.animationStep;\n            }\n\n            !this.isRunAnimation && this.animation();\n\n            //console.log( 'this.totalNum', this.totalNum );\n\n            if (parseInt(this.totalNum)) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumStep < 1 && (this.totalNumStep = 1);\n                this.totalNumCount = 0;\n                this.animationText();\n            } else {}\n\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this6 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLine.rotation.z -= .03;\n\n            window.requestAnimationFrame(function () {\n                _this6.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this7 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.totalNumCount >= this.totalNum) {\n                return;\n            }\n            this.totalNumCount += this.totalNumStep;\n\n            if (this.totalNumCount >= this.totalNum || !this.isAnimation()) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalTextTexture.text = this.totalNumCount + '';\n            this.totalTextTexture.redraw();\n\n            window.requestAnimationFrame(function () {\n                _this7.animationText();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            var _this8 = this;\n\n            if (this.totalTextGroup) {\n                this.dispose(this.totalTextGroup);\n            }\n\n            this.totalTextGroup = new THREE.Group();\n            this.stage.add(this.totalTextGroup);\n            this.addDestroy(this.totalTextGroup);\n\n            var fontSize = geometry3d.to3d(36);\n            var fontSize1 = geometry3d.to3d(36);\n            var labelFontSize = geometry3d.to3d(22);\n            var params = {\n                text: 0 + '',\n                fontFamily: '\"Agency FB\",MicrosoftYaHei',\n                fontSize: fontSize * 2,\n                fontStyle: 'italic',\n                letterSpacing: 1.5\n                //, fontWeight: 'bold'\n            },\n                colorParams = {\n                color: this.textColor\n            },\n                tmpParams = _jsonUtilsx2.default.clone(params),\n                labelParams = _jsonUtilsx2.default.clone(params);\n\n            params.text = this.totalNum + '';\n            tmpParams.text = this.totalNum + '';\n\n            labelParams = Object.assign(labelParams, {\n                fontSize: labelFontSize,\n                fontFamily: 'MicrosoftYaHei',\n                text: this.totalPostfix,\n                fontWeight: 'normal'\n            });\n\n            this.tmpTotalText = this.createText(fontSize, colorParams, tmpParams, function (sprite) {\n                sprite.position.x = Math.pow(10, 10);\n            }, this.totalTextGroup);\n            this.tmpTotalText.matrixWorldNeedsUpdate = true;\n\n            this.render();\n\n            this.totalTextPostfix = this.createText(labelFontSize, colorParams, labelParams, function (sprite) {\n                sprite.position.x = _this8.tmpTotalText.scale.x / 2 + sprite.scale.x / 2 - geometry3d.to3d(5);\n            }, this.totalTextGroup);\n\n            this.totalText = this.createText(fontSize, colorParams, params, function (sprite, material, texture) {\n                sprite.position.x = _this8.totalTextPostfix.position.x - _this8.totalTextPostfix.scale.x / 2 - sprite.scale.x / 2 + geometry3d.to3d(5);\n                //console.log( 'texture', texture, sprite );\n                texture.text = '0';\n                _this8.totalTextTexture = texture;\n            }, this.totalTextGroup);\n\n            this.totalTextGroup.position.y = -(this.arcOutRadius + geometry3d.to3d(25));\n            this.totalTextGroup.position.x = -(this.totalTextPostfix.scale.x / 2);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n\n            var textWidth = (this.totalTextPostfix.position.x + this.totalTextPostfix.scale.x / 2) * 2 + 5,\n                heightPad = 0,\n                rectHeight = geometry3d.to3d(28),\n                textX = 0,\n                textY = -(this.arcOutRadius + geometry3d.to3d(25) + this.tmpTotalText.scale.y / 2 + .5);\n\n            //console.log( 'textWidth', textWidth, textX, textY );\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n\n            textWidth = geometry3d.to3d(textWidth);\n\n            var group = new THREE.Group();\n            group.transparent = true;\n\n            //console.log( textWidth, rectHeight, this.tmpTotalText.scale.y );\n\n            var bgGeometry = new THREE.PlaneGeometry(textWidth, rectHeight, 32, 32);\n            var bgMaterial = new THREE.MeshBasicMaterial({\n                color: this.parseColor(this.lineColor),\n                side: THREE.DoubleSide,\n                opacity: .2,\n                transparent: true\n            });\n            var bgPlane = new THREE.Mesh(bgGeometry, bgMaterial);\n\n            bgPlane.position.y = textY;\n\n            group.add(bgPlane);\n            this.addDestroy(bgPlane);\n\n            var partpoints = void 0,\n                geometryy = void 0,\n                line = void 0,\n                material = void 0,\n                part = void 0,\n                indices = void 0,\n                count = 0;\n            var vertices, positions, geometry, i;\n\n            partpoints = [], indices = [];\n\n            var height = -this.getBoxSize(bgPlane).y;\n            var top = this.getPosition(bgPlane.matrixWorld).y;\n            var arrowLength = geometry3d.to3d(6);\n\n            var points = [{\n                start: { x: -textWidth / 2 + arrowLength, y: top + arrowLength * 1 },\n                end: { x: -textWidth / 2, y: top + arrowLength * 1 }\n            }, {\n                start: { x: -textWidth / 2, y: top + arrowLength * 2 },\n                end: { x: -textWidth / 2, y: top + arrowLength }\n            }, {\n                start: { x: -textWidth / 2 + arrowLength, y: top - height + arrowLength },\n                end: { x: -textWidth / 2, y: top - height + arrowLength }\n            }, {\n                start: { x: -textWidth / 2, y: top - height + arrowLength },\n                end: { x: -textWidth / 2, y: top - height }\n            }, {\n                start: { x: textWidth / 2 - arrowLength, y: top + arrowLength },\n                end: { x: textWidth / 2, y: top + arrowLength }\n            }, {\n                start: { x: textWidth / 2, y: top + arrowLength * 2 },\n                end: { x: textWidth / 2, y: top + arrowLength }\n            }, {\n                start: { x: textWidth / 2 - arrowLength, y: top - height + arrowLength },\n                end: { x: textWidth / 2, y: top - height + arrowLength }\n            }, {\n                start: { x: textWidth / 2, y: top - height + arrowLength },\n                end: { x: textWidth / 2, y: top - height }\n            }];\n\n            points.map(function (item, key) {\n                partpoints.push(new THREE.Vector3(item.start.x, item.start.y, 1), new THREE.Vector3(item.end.x, item.end.y, 1));\n                indices.push(key);\n            });\n\n            material = new THREE.LineBasicMaterial({\n                color: this.lineColor\n            });\n\n            vertices = partpoints;\n            indices = [];\n            vertices.map(function (item, key) {\n                indices.push(key);\n            });\n\n            positions = new Float32Array(vertices.length * 3);\n\n            for (i = 0; i < vertices.length; i++) {\n                positions[i * 3] = vertices[i].x;\n                positions[i * 3 + 1] = vertices[i].y;\n                positions[i * 3 + 2] = vertices[i].z;\n            }\n\n            geometry = new THREE.BufferGeometry();\n            geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n            geometry.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n\n            line = new THREE.LineSegments(geometry, material);\n            this.stage.add(line);\n            this.addDestroy(line);\n\n            this.scene.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this9 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val) {\n\n                var fontSize = geometry3d.to3d(16);\n                _this9.createText(fontSize, {\n                    color: _this9.lineColor,\n                    rotation: geometry.radians(val.angle + 90 + (val.rotationOffset || 0) + 180)\n                }, {\n                    text: val.text + '',\n                    fontFamily: 'MicrosoftYaHei, \"Times New Roman\", Times, serif',\n                    fontSize: fontSize * 2\n                }, function (sprite) {\n                    sprite.position.x = val.point.x;\n                    sprite.position.y = val.point.y;\n                });\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var line = new _three5.MeshLine(),\n                points,\n                geometryy,\n                material,\n                circle,\n                curve;\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.arcLineRaidus, this.arcLineRaidus, geometry.radians(this.arcAngleOffset), geometry.radians(this.arcAngle + this.arcAngleOffset), false, // aClockwise\n            0 // aRotation\n            );\n\n            points = curve.getPoints(200);\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n\n            circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawArcPartLine',\n        value: function drawArcPartLine() {\n\n            var partpoints = void 0,\n                geometryy = void 0,\n                line = void 0,\n                material = void 0,\n                part = void 0,\n                indices = void 0,\n                count = 0;\n            var vertices, positions, geometry, i;\n\n            partpoints = [], indices = [];\n\n            this.arcPartLineAr.map(function (item, key) {\n                partpoints.push(new THREE.Vector3(item.start.x, item.start.y, 1), new THREE.Vector3(item.end.x, item.end.y, 1));\n                indices.push(key);\n            });\n            this.arcOutlinePartAr.map(function (item, key) {\n                partpoints.push(new THREE.Vector3(item.start.x, item.start.y, 1), new THREE.Vector3(item.end.x, item.end.y, 1));\n                indices.push(key);\n            });\n\n            material = new THREE.LineBasicMaterial({\n                color: this.lineColor\n            });\n\n            vertices = partpoints;\n            indices = [];\n            vertices.map(function (item, key) {\n                indices.push(key);\n            });\n\n            positions = new Float32Array(vertices.length * 3);\n\n            for (i = 0; i < vertices.length; i++) {\n\n                positions[i * 3] = vertices[i].x;\n                positions[i * 3 + 1] = vertices[i].y;\n                positions[i * 3 + 2] = vertices[i].z;\n            }\n\n            geometry = new THREE.BufferGeometry();\n            geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n            geometry.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n\n            line = new THREE.LineSegments(geometry, material);\n            this.stage.add(line);\n            this.addDestroy(line);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var line = void 0,\n                material = void 0,\n                geometryx = void 0,\n                mesh = void 0,\n                arc = void 0,\n                tmp = void 0,\n                color = void 0;\n\n            color = 0xffffff;\n\n            geometryx = new THREE.RingGeometry(this.arcInRadius, this.arcOutRadius, 256, 1, geometry.radians(this.arcAngleOffset), geometry.radians(this.arcAngle));\n\n            var texture = new THREE.Texture(this.generateGradientTexture());\n            texture.needsUpdate = true; // important!\n\n            material = new THREE.MeshBasicMaterial({ /*color: color,*/map: texture, side: THREE.DoubleSide, transparent: true });\n            arc = new THREE.Mesh(geometryx, material);\n\n            arc.position.y = this.fixCy();\n\n            this.stage.add(arc);\n            this.addDestroy(arc);\n        }\n    }, {\n        key: 'generateGradientTexture',\n        value: function generateGradientTexture() {\n\n            var size = geometry3d.resizeToBit(this.width * this.arcOutPercent * this.sizeRate * 2);\n\n            // create canvas\n            var canvas = document.createElement('canvas');\n            canvas.width = size;\n            canvas.height = size;\n\n            // get context\n            var context = canvas.getContext('2d');\n\n            // draw gradient\n            context.rect(-size / 2, -size / 2, size + size / 2, size + size / 2);\n            var gradient = context.createLinearGradient(0, 0, size, size);\n            gradient.addColorStop(0, '#5a78ca');\n            gradient.addColorStop(0.4, '#64b185');\n            gradient.addColorStop(1, '#ff9000');\n            context.fillStyle = gradient;\n            context.fill();\n            return canvas;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            this.drawText();\n            if (!this.inited) {\n                this.drawInnerText();\n                this.drawInnerCircle();\n                this.drawTextRect();\n                this.drawArcText();\n                this.drawArc();\n                this.drawArcLine();\n                this.drawCircle();\n                this.drawCircleLine();\n                this.drawArcPartLine();\n                this.initRoundText();\n            }\n            this.drawArrow();\n            this.updateArrow();\n        }\n    }, {\n        key: 'drawArrow',\n        value: function drawArrow() {\n\n            this.dispose(this.arrowIcon);\n            this.preAngle = 0;\n\n            var group = new THREE.Group();\n\n            var geo = void 0,\n                mat = void 0,\n                tri = void 0,\n                width = geometry3d.to3d(5),\n                top = geometry3d.to3d(14);\n\n            geo = new THREE.Geometry();\n            geo.vertices = [new THREE.Vector3(0, 0, 0), new THREE.Vector3(width, 0, 0), new THREE.Vector3(0, top, 0)];\n\n            geo.faces.push(new THREE.Face3(0, 1, 2));\n            geo.faces[0].color.setHex(0x973500);\n            geo.center();\n\n            mat = new THREE.MeshBasicMaterial({\n                color: 0x973500,\n                vertexColors: THREE.FaceColors\n                //, wireframe: true\n                //, wireframeLinewidth: 1\n            });\n            mat.depthTest = false;\n            tri = new THREE.Mesh(geo, mat);\n            tri.renderOrder = -3;\n            tri.position.x = width;\n            group.add(tri);\n            this.addDestroy(tri);\n\n            geo = new THREE.Geometry();\n            geo.vertices = [new THREE.Vector3(-width, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, top, 0)];\n\n            geo.faces.push(new THREE.Face3(0, 1, 2));\n            geo.faces[0].color.setHex(0xff5a00);\n            geo.center();\n\n            mat = new THREE.MeshBasicMaterial({\n                color: 0xff5a00,\n                vertexColors: THREE.FaceColors\n                //, wireframe: true\n                //, wireframeLinewidth: 1\n            });\n            mat.depthTest = false;\n            tri = new THREE.Mesh(geo, mat);\n            tri.renderOrder = -3;\n            group.add(tri);\n            this.addDestroy(tri);\n\n            //group.position.x = 100;\n\n            this.arrowIcon = group;\n\n            group.renderOrder = -3;\n\n            this.stage.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'updateArrow',\n        value: function updateArrow() {\n            if (isNaN(this.angle)) {\n                this.angle = -55;\n            }\n            var angle = -(-180 + this.angle);\n\n            if (this.preAngle === this.angle) return;\n            this.preAngle = this.angle;\n\n            var point = geometry.distanceAngleToPoint(this.innerCircleRadius + geometry3d.to3d(6), angle);\n\n            this.arrowIcon.position.x = point.x;\n            this.arrowIcon.position.y = point.y;\n\n            this.arrowIcon.rotation.z = geometry.radians(angle - 90);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this10 = this;\n\n            if (this.isDestroy) {\n                this.isRunAnimation = false;\n                return;\n            }\n            if (this.angle > this.animationAngle) {\n                this.isRunAnimation = false;\n                return;\n            }\n            this.isRunAnimation = true;\n\n            this.angle += this.angleStep;\n\n            if (this.angle >= this.animationAngle || !this.isAnimation()) {\n                this.angle = this.animationAngle;\n            };\n\n            this.updateArrow();\n\n            window.requestAnimationFrame(function () {\n                _this10.animation();\n            });\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer) {}\n    }, {\n        key: 'addText',\n        value: function addText(path, layer) {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }, {\n        key: 'drawInnerText',\n        value: function drawInnerText() {\n            if (!this.inited) {\n                var fontSize = geometry3d.to3d(46);\n                this.percentText = this.createText(fontSize, { color: 0xffffff }, {\n                    text: this.getAttackText(),\n                    fontFamily: 'HuXiaoBoKuHei, \"Times New Roman\", Times, serif',\n                    fontSize: fontSize * 2,\n                    fontStyle: 'italic'\n                });\n            }\n        }\n    }, {\n        key: 'drawInnerCircle',\n        value: function drawInnerCircle() {\n            this.innerCircleRadius = geometry3d.to3d(this.roundRadius);\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.innerCircleRadius, this.innerCircleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.innerCircleRadius, this.innerCircleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 3\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = geometry3d.to3d(Math.ceil(this.circlePercent * this.max / 2) * this.sizeRate);\n\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = geometry3d.to3d(Math.ceil(this.circleLinePercent * this.max / 2));\n\n            var material = void 0,\n                geometryItem = void 0,\n                circle = void 0,\n                group = void 0,\n                line = void 0;\n\n            group = new THREE.Group();\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(90), geometry.radians(90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n            this.addDestroy(circle);\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(0), geometry.radians(-90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            group.position.y = this.fixCy();\n\n            group.add(circle);\n            this.addDestroy(circle);\n\n            this.circleLine = group;\n\n            this.stage.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            return 0;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            return 0;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_base2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height, camera) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, box, width, height, camera));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = 0xdeaf5c;\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            //this.circleLine.rotation( this.circleLineRotation );\n            this.circleLine.rotation.z -= .03;\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(json) {\n            _get(RoundStateText.prototype.__proto__ || Object.getPrototypeOf(RoundStateText.prototype), 'setOptions', this).call(this, json);\n\n            this.stageBackup = this.stage;\n            this.stage = new THREE.Object3D();\n            this.stageBackup.add(this.stage);\n            this.addDestroy(this.stage);\n\n            this.stage.position.x = this.point.x;\n            this.stage.position.y = this.point.y;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRadius = geometry3d.to3d(this.radius - 5);\n            this.circleRadius *= this.sizeRate;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            //console.log( this.point.x, this.point.y );\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.material.color.set(color);\n            this.circle.material.uniforms.color.value.set(color);\n            this.linePartMaterial1.uniforms.color.value.set(color);\n            this.linePartMaterial2.uniforms.color.value.set(color);\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            var fontSize = geometry3d.to3d(38);\n            var texture = new _three2.default({\n                text: this.text,\n                fontFamily: 'HuXiaoBoKuHei, \"Times New Roman\", Times, serif',\n                fontSize: fontSize * 2,\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n            var material = new THREE.SpriteMaterial({ map: texture, color: 0xffffff });\n            var sprite = new THREE.Sprite(material);\n            sprite.scale.setX(texture.imageAspect).multiplyScalar(fontSize);\n            this.text = sprite;\n\n            this.stage.add(this.text);\n            this.addDestroy(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, 0, // ax, aY\n            this.circleRadius, this.circleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, 0, // ax, aY\n            this.circleRadius, this.circleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.circle = circle;\n            this.circleMaterial = material;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = geometry3d.to3d(this.radius - 1);\n            this.circleLineRadius *= this.sizeRate;\n\n            var material = void 0,\n                geometryItem = void 0,\n                circle = void 0,\n                group = void 0,\n                line = void 0;\n\n            group = new THREE.Group();\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(90), geometry.radians(90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n            this.addDestroy(circle);\n            this.linePartMaterial1 = material;\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(0), geometry.radians(-90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            group.position.y = this.fixCy();\n\n            group.add(circle);\n            this.addDestroy(circle);\n\n            this.circleLine = group;\n\n            this.stage.add(group);\n            this.addDestroy(group);\n            this.linePartMaterial2 = material;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_base2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\n// This THREEx helper makes it easy to handle the mouse events in your 3D scene\n//\n// * CHANGES NEEDED\n//   * handle drag/drop\n//   * notify events not object3D - like DOM\n//     * so single object with property\n//   * DONE bubling implement bubling/capturing\n//   * DONE implement event.stopPropagation()\n//   * DONE implement event.type = \"click\" and co\n//   * DONE implement event.target\n//\n// # Lets get started\n//\n// First you include it in your page\n//\n// ```<script src='threex.domevent.js'>< /script>```\n//\n// # use the object oriented api\n//\n// You bind an event like this\n// \n// ```mesh.on('click', function(object3d){ ... })```\n//\n// To unbind an event, just do\n//\n// ```mesh.off('click', function(object3d){ ... })```\n//\n// As an alternative, there is another naming closer DOM events.\n// Pick the one you like, they are doing the same thing\n//\n// ```mesh.addEventListener('click', function(object3d){ ... })```\n// ```mesh.removeEventListener('click', function(object3d){ ... })```\n//\n// # Supported Events\n//\n// Always in a effort to stay close to usual pratices, the events name are the same as in DOM.\n// The semantic is the same too.\n// Currently, the available events are\n// [click, dblclick, mouseup, mousedown](http://www.quirksmode.org/dom/events/click.html),\n// [mouseover and mouse out](http://www.quirksmode.org/dom/events/mouseover.html).\n//\n// # use the standalone api\n//\n// The object-oriented api modifies THREE.Object3D class.\n// It is a global class, so it may be legitimatly considered unclean by some people.\n// If this bother you, simply do ```THREEx.DomEvents.noConflict()``` and use the\n// standalone API. In fact, the object oriented API is just a thin wrapper\n// on top of the standalone API.\n//\n// First, you instanciate the object\n//\n// ```var domEvent = new THREEx.DomEvent();```\n// \n// Then you bind an event like this\n//\n// ```domEvent.bind(mesh, 'click', function(object3d){ object3d.scale.x *= 2; });```\n//\n// To unbind an event, just do\n//\n// ```domEvent.unbind(mesh, 'click', callback);```\n//\n// \n// # Code\n\n//\n\n/** @namespace */\nvar THREEx = THREEx || {};\n\n// # Constructor\nTHREEx.DomEvents = function (camera, domElement) {\n\tthis._camera = camera || null;\n\tthis._domElement = domElement || document;\n\tthis._raycaster = new THREE.Raycaster();\n\tthis._selected = null;\n\tthis._boundObjs = {};\n\t// Bind dom event for mouse and touch\n\tvar _this = this;\n\n\tthis._$onClick = function () {\n\t\t_this._onClick.apply(_this, arguments);\n\t};\n\tthis._$onDblClick = function () {\n\t\t_this._onDblClick.apply(_this, arguments);\n\t};\n\tthis._$onMouseMove = function () {\n\t\t_this._onMouseMove.apply(_this, arguments);\n\t};\n\tthis._$onMouseDown = function () {\n\t\t_this._onMouseDown.apply(_this, arguments);\n\t};\n\tthis._$onMouseUp = function () {\n\t\t_this._onMouseUp.apply(_this, arguments);\n\t};\n\tthis._$onTouchMove = function () {\n\t\t_this._onTouchMove.apply(_this, arguments);\n\t};\n\tthis._$onTouchStart = function () {\n\t\t_this._onTouchStart.apply(_this, arguments);\n\t};\n\tthis._$onTouchEnd = function () {\n\t\t_this._onTouchEnd.apply(_this, arguments);\n\t};\n\tthis._$onContextmenu = function () {\n\t\t_this._onContextmenu.apply(_this, arguments);\n\t};\n\tthis._domElement.addEventListener('click', this._$onClick, false);\n\tthis._domElement.addEventListener('dblclick', this._$onDblClick, false);\n\tthis._domElement.addEventListener('mousemove', this._$onMouseMove, false);\n\tthis._domElement.addEventListener('mousedown', this._$onMouseDown, false);\n\tthis._domElement.addEventListener('mouseup', this._$onMouseUp, false);\n\tthis._domElement.addEventListener('touchmove', this._$onTouchMove, false);\n\tthis._domElement.addEventListener('touchstart', this._$onTouchStart, false);\n\tthis._domElement.addEventListener('touchend', this._$onTouchEnd, false);\n\tthis._domElement.addEventListener('contextmenu', this._$onContextmenu, false);\n};\n\n// # Destructor\nTHREEx.DomEvents.prototype.destroy = function () {\n\t// unBind dom event for mouse and touch\n\tthis._domElement.removeEventListener('click', this._$onClick, false);\n\tthis._domElement.removeEventListener('dblclick', this._$onDblClick, false);\n\tthis._domElement.removeEventListener('mousemove', this._$onMouseMove, false);\n\tthis._domElement.removeEventListener('mousedown', this._$onMouseDown, false);\n\tthis._domElement.removeEventListener('mouseup', this._$onMouseUp, false);\n\tthis._domElement.removeEventListener('touchmove', this._$onTouchMove, false);\n\tthis._domElement.removeEventListener('touchstart', this._$onTouchStart, false);\n\tthis._domElement.removeEventListener('touchend', this._$onTouchEnd, false);\n\tthis._domElement.removeEventListener('contextmenu', this._$onContextmenu, false);\n};\n\nTHREEx.DomEvents.eventNames = [\"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"mousemove\", \"mousedown\", \"mouseup\", \"contextmenu\", \"touchstart\", \"touchend\"];\n\nTHREEx.DomEvents.prototype._getRelativeMouseXY = function (domEvent) {\n\tvar element = domEvent.target || domEvent.srcElement;\n\tif (element.nodeType === 3) {\n\t\telement = element.parentNode; // Safari fix -- see http://www.quirksmode.org/js/events_properties.html\n\t}\n\n\t//get the real position of an element relative to the page starting point (0, 0)\n\t//credits go to brainjam on answering http://stackoverflow.com/questions/5755312/getting-mouse-position-relative-to-content-area-of-an-element\n\tvar elPosition = { x: 0, y: 0 };\n\tvar tmpElement = element;\n\t//store padding\n\tvar style = getComputedStyle(tmpElement, null);\n\telPosition.y += parseInt(style.getPropertyValue(\"padding-top\"), 10);\n\telPosition.x += parseInt(style.getPropertyValue(\"padding-left\"), 10);\n\t//add positions\n\tdo {\n\t\telPosition.x += tmpElement.offsetLeft;\n\t\telPosition.y += tmpElement.offsetTop;\n\t\tstyle = getComputedStyle(tmpElement, null);\n\n\t\telPosition.x += parseInt(style.getPropertyValue(\"border-left-width\"), 10);\n\t\telPosition.y += parseInt(style.getPropertyValue(\"border-top-width\"), 10);\n\t} while (tmpElement = tmpElement.offsetParent);\n\n\tvar elDimension = {\n\t\twidth: element === window ? window.innerWidth : element.offsetWidth,\n\t\theight: element === window ? window.innerHeight : element.offsetHeight\n\t};\n\n\treturn {\n\t\tx: +((domEvent.pageX - elPosition.x) / elDimension.width) * 2 - 1,\n\t\ty: -((domEvent.pageY - elPosition.y) / elDimension.height) * 2 + 1\n\t};\n};\n\n/********************************************************************************/\n/*\t\tdomevent context\t\t\t\t\t\t*/\n/********************************************************************************/\n\n// handle domevent context in object3d instance\n\nTHREEx.DomEvents.prototype._objectCtxInit = function (object3d) {\n\tobject3d._3xDomEvent = {};\n};\nTHREEx.DomEvents.prototype._objectCtxDeinit = function (object3d) {\n\tdelete object3d._3xDomEvent;\n};\nTHREEx.DomEvents.prototype._objectCtxIsInit = function (object3d) {\n\treturn object3d._3xDomEvent ? true : false;\n};\nTHREEx.DomEvents.prototype._objectCtxGet = function (object3d) {\n\treturn object3d._3xDomEvent;\n};\n\n/********************************************************************************/\n/*\t\t\t\t\t\t\t\t\t\t*/\n/********************************************************************************/\n\n/**\n * Getter/Setter for camera\n*/\nTHREEx.DomEvents.prototype.camera = function (value) {\n\tif (value) this._camera = value;\n\treturn this._camera;\n};\n\nTHREEx.DomEvents.prototype.bind = function (object3d, eventName, callback, useCapture) {\n\tconsole.assert(THREEx.DomEvents.eventNames.indexOf(eventName) !== -1, \"not available events:\" + eventName);\n\n\tif (!this._objectCtxIsInit(object3d)) this._objectCtxInit(object3d);\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tif (!objectCtx[eventName + 'Handlers']) objectCtx[eventName + 'Handlers'] = [];\n\n\tobjectCtx[eventName + 'Handlers'].push({\n\t\tcallback: callback,\n\t\tuseCapture: useCapture\n\t});\n\n\t// add this object in this._boundObjs\n\tif (this._boundObjs[eventName] === undefined) {\n\t\tthis._boundObjs[eventName] = [];\n\t}\n\tthis._boundObjs[eventName].push(object3d);\n};\nTHREEx.DomEvents.prototype.addEventListener = THREEx.DomEvents.prototype.bind;\n\nTHREEx.DomEvents.prototype.unbind = function (object3d, eventName, callback, useCapture) {\n\tconsole.assert(THREEx.DomEvents.eventNames.indexOf(eventName) !== -1, \"not available events:\" + eventName);\n\n\tif (!this._objectCtxIsInit(object3d)) this._objectCtxInit(object3d);\n\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tif (!objectCtx[eventName + 'Handlers']) objectCtx[eventName + 'Handlers'] = [];\n\n\tvar handlers = objectCtx[eventName + 'Handlers'];\n\tfor (var i = 0; i < handlers.length; i++) {\n\t\tvar handler = handlers[i];\n\t\tif (callback != handler.callback) continue;\n\t\tif (useCapture != handler.useCapture) continue;\n\t\thandlers.splice(i, 1);\n\t\tbreak;\n\t}\n\t// from this object from this._boundObjs\n\tvar index = this._boundObjs[eventName].indexOf(object3d);\n\tconsole.assert(index !== -1);\n\tthis._boundObjs[eventName].splice(index, 1);\n};\nTHREEx.DomEvents.prototype.removeEventListener = THREEx.DomEvents.prototype.unbind;\n\nTHREEx.DomEvents.prototype._bound = function (eventName, object3d) {\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tif (!objectCtx) return false;\n\treturn objectCtx[eventName + 'Handlers'] ? true : false;\n};\n\n/********************************************************************************/\n/*\t\tonMove\t\t\t\t\t\t\t\t*/\n/********************************************************************************/\n\n// # handle mousemove kind of events\n\nTHREEx.DomEvents.prototype._onMove = function (eventName, mouseX, mouseY, origDomEvent) {\n\t//console.log('eventName', eventName, 'boundObjs', this._boundObjs[eventName])\n\t// get objects bound to this event\n\tvar boundObjs = this._boundObjs[eventName];\n\tif (boundObjs === undefined || boundObjs.length === 0) return;\n\t// compute the intersection\n\tvar vector = new THREE.Vector2();\n\n\t// update the picking ray with the camera and mouse position\n\tvector.set(mouseX, mouseY);\n\tthis._raycaster.setFromCamera(vector, this._camera);\n\n\tvar intersects = this._raycaster.intersectObjects(boundObjs);\n\n\tvar oldSelected = this._selected;\n\n\tif (intersects.length > 0) {\n\t\tvar notifyOver, notifyOut, notifyMove;\n\t\tvar intersect = intersects[0];\n\t\tvar newSelected = intersect.object;\n\t\tthis._selected = newSelected;\n\t\t// if newSelected bound mousemove, notify it\n\t\tnotifyMove = this._bound('mousemove', newSelected);\n\n\t\tif (oldSelected != newSelected) {\n\t\t\t// if newSelected bound mouseenter, notify it\n\t\t\tnotifyOver = this._bound('mouseover', newSelected);\n\t\t\t// if there is a oldSelect and oldSelected bound mouseleave, notify it\n\t\t\tnotifyOut = oldSelected && this._bound('mouseout', oldSelected);\n\t\t}\n\t} else {\n\t\t// if there is a oldSelect and oldSelected bound mouseleave, notify it\n\t\tnotifyOut = oldSelected && this._bound('mouseout', oldSelected);\n\t\tthis._selected = null;\n\t}\n\n\t// notify mouseMove - done at the end with a copy of the list to allow callback to remove handlers\n\tnotifyMove && this._notify('mousemove', newSelected, origDomEvent, intersect);\n\t// notify mouseEnter - done at the end with a copy of the list to allow callback to remove handlers\n\tnotifyOver && this._notify('mouseover', newSelected, origDomEvent, intersect);\n\t// notify mouseLeave - done at the end with a copy of the list to allow callback to remove handlers\n\tnotifyOut && this._notify('mouseout', oldSelected, origDomEvent, intersect);\n};\n\n/********************************************************************************/\n/*\t\tonEvent\t\t\t\t\t\t\t\t*/\n/********************************************************************************/\n\n// # handle click kind of events\n\nTHREEx.DomEvents.prototype._onEvent = function (eventName, mouseX, mouseY, origDomEvent) {\n\t//console.log('eventName', eventName, 'boundObjs', this._boundObjs[eventName])\n\t// get objects bound to this event\n\tvar boundObjs = this._boundObjs[eventName];\n\tif (boundObjs === undefined || boundObjs.length === 0) return;\n\t// compute the intersection\n\tvar vector = new THREE.Vector2();\n\n\t// update the picking ray with the camera and mouse position\n\tvector.set(mouseX, mouseY);\n\tthis._raycaster.setFromCamera(vector, this._camera);\n\n\tvar intersects = this._raycaster.intersectObjects(boundObjs, true);\n\t// if there are no intersections, return now\n\tif (intersects.length === 0) return;\n\n\t// init some variables\n\tvar intersect = intersects[0];\n\tvar object3d = intersect.object;\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tvar objectParent = object3d.parent;\n\n\twhile (typeof objectCtx == 'undefined' && objectParent) {\n\t\tobjectCtx = this._objectCtxGet(objectParent);\n\t\tobjectParent = objectParent.parent;\n\t}\n\tif (!objectCtx) return;\n\n\t// notify handlers\n\tthis._notify(eventName, object3d, origDomEvent, intersect);\n};\n\nTHREEx.DomEvents.prototype._notify = function (eventName, object3d, origDomEvent, intersect) {\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tvar handlers = objectCtx ? objectCtx[eventName + 'Handlers'] : null;\n\n\t// parameter check\n\tconsole.assert(arguments.length === 4);\n\n\t// do bubbling\n\tif (!objectCtx || !handlers || handlers.length === 0) {\n\t\tobject3d.parent && this._notify(eventName, object3d.parent, origDomEvent, intersect);\n\t\treturn;\n\t}\n\n\t// notify all handlers\n\tvar handlers = objectCtx[eventName + 'Handlers'];\n\tfor (var i = 0; i < handlers.length; i++) {\n\t\tvar handler = handlers[i];\n\t\tvar toPropagate = true;\n\t\thandler.callback({\n\t\t\ttype: eventName,\n\t\t\ttarget: object3d,\n\t\t\torigDomEvent: origDomEvent,\n\t\t\tintersect: intersect,\n\t\t\tstopPropagation: function stopPropagation() {\n\t\t\t\ttoPropagate = false;\n\t\t\t}\n\t\t});\n\t\tif (!toPropagate) continue;\n\t\t// do bubbling\n\t\tif (handler.useCapture === false) {\n\t\t\tobject3d.parent && this._notify(eventName, object3d.parent, origDomEvent, intersect);\n\t\t}\n\t}\n};\n\n/********************************************************************************/\n/*\t\thandle mouse events\t\t\t\t\t\t*/\n/********************************************************************************/\n// # handle mouse events\n\nTHREEx.DomEvents.prototype._onMouseDown = function (event) {\n\treturn this._onMouseEvent('mousedown', event);\n};\nTHREEx.DomEvents.prototype._onMouseUp = function (event) {\n\treturn this._onMouseEvent('mouseup', event);\n};\n\nTHREEx.DomEvents.prototype._onMouseEvent = function (eventName, domEvent) {\n\tvar mouseCoords = this._getRelativeMouseXY(domEvent);\n\tthis._onEvent(eventName, mouseCoords.x, mouseCoords.y, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onMouseMove = function (domEvent) {\n\tvar mouseCoords = this._getRelativeMouseXY(domEvent);\n\tthis._onMove('mousemove', mouseCoords.x, mouseCoords.y, domEvent);\n\tthis._onMove('mouseover', mouseCoords.x, mouseCoords.y, domEvent);\n\tthis._onMove('mouseout', mouseCoords.x, mouseCoords.y, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onClick = function (event) {\n\t// TODO handle touch ?\n\tthis._onMouseEvent('click', event);\n};\nTHREEx.DomEvents.prototype._onDblClick = function (event) {\n\t// TODO handle touch ?\n\tthis._onMouseEvent('dblclick', event);\n};\n\nTHREEx.DomEvents.prototype._onContextmenu = function (event) {\n\t//TODO don't have a clue about how this should work with touch..\n\tthis._onMouseEvent('contextmenu', event);\n};\n\n/********************************************************************************/\n/*\t\thandle touch events\t\t\t\t\t\t*/\n/********************************************************************************/\n// # handle touch events\n\n\nTHREEx.DomEvents.prototype._onTouchStart = function (event) {\n\treturn this._onTouchEvent('touchstart', event);\n};\nTHREEx.DomEvents.prototype._onTouchEnd = function (event) {\n\treturn this._onTouchEvent('touchend', event);\n};\n\nTHREEx.DomEvents.prototype._onTouchMove = function (domEvent) {\n\tif (domEvent.touches.length != 1) return undefined;\n\n\tdomEvent.preventDefault();\n\n\tvar mouseX = +(domEvent.touches[0].pageX / window.innerWidth) * 2 - 1;\n\tvar mouseY = -(domEvent.touches[0].pageY / window.innerHeight) * 2 + 1;\n\tthis._onMove('mousemove', mouseX, mouseY, domEvent);\n\tthis._onMove('mouseover', mouseX, mouseY, domEvent);\n\tthis._onMove('mouseout', mouseX, mouseY, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onTouchEvent = function (eventName, domEvent) {\n\tif (domEvent.touches.length != 1) return undefined;\n\n\tdomEvent.preventDefault();\n\n\tvar mouseX = +(domEvent.touches[0].pageX / window.innerWidth) * 2 - 1;\n\tvar mouseY = -(domEvent.touches[0].pageY / window.innerHeight) * 2 + 1;\n\tthis._onEvent(eventName, mouseX, mouseY, domEvent);\n};\n\nmodule.exports = THREEx;","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\r\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\r\\n<svg width=\\\"118pt\\\" height=\\\"117pt\\\" viewBox=\\\"0 0 118 117\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n<g id=\\\"#24a3eaff\\\">\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 29.73 41.56 C 29.80 36.62 33.97 33.42 38.18 31.78 C 37.89 36.44 35.22 42.02 29.73 41.56 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 81.81 31.73 C 86.01 33.24 90.14 36.40 90.24 41.27 C 84.74 42.06 82.18 36.26 81.81 31.73 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 26.03 46.26 C 23.20 42.61 24.59 37.59 26.99 34.11 C 28.14 36.26 29.36 38.51 29.23 41.02 C 29.32 43.13 28.59 46.16 26.03 46.26 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 59.54 34.34 C 67.98 36.22 77.69 38.40 82.86 45.98 C 85.03 62.07 74.96 78.49 59.97 84.42 L 59.58 83.86 C 59.95 76.38 59.51 68.89 59.88 61.41 C 65.39 61.49 70.90 61.46 76.41 61.49 L 76.31 59.74 C 71.90 59.73 67.49 59.73 63.09 59.73 C 63.64 57.12 63.56 54.17 64.96 51.87 C 69.09 51.32 73.33 52.23 77.42 51.46 C 77.76 51.14 78.43 50.51 78.76 50.19 C 73.01 49.83 67.25 50.05 61.50 50.00 C 61.03 52.68 60.52 55.36 59.94 58.02 C 59.87 55.36 59.86 52.70 59.81 50.04 C 59.58 44.81 59.64 39.57 59.54 34.34 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 93.92 46.49 C 88.84 44.22 90.78 37.38 93.12 33.72 C 95.41 37.55 96.69 42.53 93.92 46.49 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 83.69 40.88 C 88.03 42.03 92.61 44.91 92.70 49.94 C 87.67 50.19 83.87 45.64 83.69 40.88 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 27.26 49.86 C 27.56 44.94 32.02 42.10 36.35 41.02 C 36.07 45.70 32.40 50.53 27.26 49.86 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 21.54 44.25 C 22.83 43.18 23.36 45.24 24.08 45.99 C 25.89 48.65 26.95 53.25 24.09 55.52 C 20.07 53.42 20.39 47.97 21.54 44.25 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 95.17 55.03 C 92.79 51.00 94.98 46.10 98.19 43.26 C 99.11 46.46 99.93 50.08 98.20 53.17 C 97.57 54.13 96.53 55.70 95.17 55.03 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 24.73 59.86 C 24.67 55.16 27.72 50.96 32.10 49.37 C 32.05 53.79 30.34 60.21 24.73 59.86 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 87.90 49.29 C 92.14 50.83 95.48 54.87 95.09 59.55 C 89.48 59.92 88.02 53.65 87.90 49.29 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 17.87 53.65 C 22.26 55.21 25.92 59.33 25.05 64.26 C 19.78 63.92 18.17 58.02 17.87 53.65 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 95.08 64.30 C 93.90 59.34 97.67 55.07 102.12 53.56 C 101.87 57.99 100.23 63.60 95.08 64.30 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 88.41 57.19 C 92.21 59.83 94.66 65.04 92.25 69.42 C 87.70 67.12 87.06 61.62 88.41 57.19 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 27.41 68.72 C 25.40 64.51 28.22 59.87 31.49 57.23 C 32.33 60.55 32.81 64.55 30.42 67.38 C 29.63 68.00 28.49 69.71 27.41 68.72 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 16.80 63.80 C 21.46 63.31 26.97 65.94 27.26 71.14 C 22.35 71.65 18.76 67.84 16.80 63.80 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 92.94 71.00 C 92.82 65.64 98.66 63.37 103.19 63.52 C 101.45 67.70 97.77 71.36 92.94 71.00 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 30.66 78.39 C 27.77 74.07 30.14 69.02 33.11 65.51 C 35.02 69.79 35.23 75.72 30.66 78.39 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 89.12 77.66 C 84.44 75.57 85.21 69.34 86.85 65.46 C 89.62 68.58 92.65 74.04 89.12 77.66 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 18.27 70.95 C 22.74 70.63 28.71 72.06 29.36 77.35 C 24.55 78.44 20.31 75.03 18.27 70.95 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 36.06 82.86 C 33.12 79.21 34.80 74.28 36.81 70.63 C 38.47 73.68 40.13 77.26 38.86 80.77 C 38.39 81.89 37.62 83.67 36.06 82.86 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 90.70 77.25 C 91.15 71.92 97.28 70.50 101.69 70.96 C 99.70 75.08 95.41 78.09 90.70 77.25 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 83.71 83.44 C 78.97 80.73 80.65 74.26 83.20 70.56 C 85.60 74.43 86.55 79.51 83.71 83.44 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 40.78 75.57 C 43.36 77.72 46.02 80.46 46.03 84.06 C 45.83 85.31 45.87 87.10 44.20 87.25 C 40.00 85.03 40.16 79.63 40.78 75.57 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 74.97 87.12 C 72.28 82.90 75.76 77.99 79.19 75.45 C 79.86 79.44 80.04 86.17 74.97 87.12 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 85.45 82.27 C 87.17 77.54 93.13 77.81 97.20 78.46 C 94.95 82.02 88.90 85.53 85.45 82.27 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 22.77 78.85 C 26.97 78.37 33.72 77.62 34.65 83.27 C 30.15 84.73 25.59 82.31 22.77 78.85 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 46.62 81.81 C 51.13 82.19 56.56 84.92 56.20 90.20 C 51.37 90.30 47.74 86.19 46.62 81.81 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 63.81 89.92 C 63.53 84.72 68.88 82.02 73.37 81.80 C 72.13 86.07 68.69 90.31 63.81 89.92 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 28.66 85.63 C 32.62 83.82 39.84 82.45 41.35 87.98 C 37.02 90.05 32.25 88.37 28.66 85.63 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 78.35 87.17 C 81.22 82.72 87.12 83.71 91.32 85.37 C 87.78 88.26 82.37 90.37 78.35 87.17 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 57.27 90.27 C 58.30 89.80 59.19 89.12 59.93 88.27 C 60.73 89.01 61.52 89.74 62.33 90.46 C 61.98 91.34 61.64 92.23 61.32 93.13 C 60.63 93.09 59.25 93.00 58.56 92.96 C 58.16 92.05 57.73 91.15 57.27 90.27 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 73.52 88.33 C 77.18 87.13 80.67 89.45 83.55 91.45 C 79.79 93.44 74.58 93.85 71.35 90.63 C 70.54 89.05 72.45 88.79 73.52 88.33 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 36.45 91.85 C 39.54 88.58 44.60 87.59 48.71 89.40 C 48.95 90.45 48.56 91.20 47.55 91.66 C 44.28 93.97 39.98 93.01 36.45 91.85 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 44.73 95.44 C 47.80 91.87 52.97 89.59 57.40 92.15 C 55.18 97.06 49.06 96.30 44.73 95.44 Z\\\" />\\r\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 62.56 91.98 C 67.07 89.57 72.03 91.83 75.36 95.12 C 71.05 96.45 64.75 96.88 62.56 91.98 Z\\\" />\\r\\n</g>\\r\\n<g id=\\\"#1d8bc9ff\\\">\\r\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 36.50 45.40 C 42.01 38.43 51.06 36.17 59.33 34.42 C 59.37 39.63 59.36 44.84 59.55 50.04 C 54.18 49.98 48.81 49.98 43.44 50.03 C 42.83 53.88 42.16 57.71 41.48 61.54 C 42.32 61.49 44.01 61.39 44.85 61.34 C 45.10 59.80 45.36 58.27 45.62 56.73 C 49.64 56.78 53.65 56.77 57.66 56.53 C 58.35 57.07 59.04 57.63 59.72 58.19 C 58.97 66.67 59.33 75.17 59.26 83.67 C 58.85 83.73 58.02 83.85 57.61 83.91 C 49.23 79.46 41.74 72.57 38.51 63.44 C 36.53 57.73 35.06 51.36 36.50 45.40 Z\\\" />\\r\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 46.36 51.85 C 50.74 51.67 55.12 51.70 59.49 51.79 C 59.52 52.70 59.59 54.52 59.63 55.43 C 55.10 54.76 50.52 55.02 45.97 55.01 C 46.07 54.22 46.27 52.64 46.36 51.85 Z\\\" />\\r\\n</g>\\r\\n<g id=\\\"#1b2132ff\\\">\\r\\n<path fill=\\\"#1b2132\\\" opacity=\\\"1.00\\\" d=\\\" M 43.44 50.03 C 48.81 49.98 54.18 49.98 59.55 50.04 L 59.81 50.04 C 59.86 52.70 59.87 55.36 59.94 58.02 C 60.52 55.36 61.03 52.68 61.50 50.00 C 67.25 50.05 73.01 49.83 78.76 50.19 C 78.43 50.51 77.76 51.14 77.42 51.46 C 73.33 52.23 69.09 51.32 64.96 51.87 C 63.56 54.17 63.64 57.12 63.09 59.73 C 67.49 59.73 71.90 59.73 76.31 59.74 L 76.41 61.49 C 70.90 61.46 65.39 61.49 59.88 61.41 C 59.51 68.89 59.95 76.38 59.58 83.86 L 59.26 83.67 C 59.33 75.17 58.97 66.67 59.72 58.19 C 59.04 57.63 58.35 57.07 57.66 56.53 C 53.65 56.77 49.64 56.78 45.62 56.73 C 45.36 58.27 45.10 59.80 44.85 61.34 C 44.01 61.39 42.32 61.49 41.48 61.54 C 42.16 57.71 42.83 53.88 43.44 50.03 M 46.36 51.85 C 46.27 52.64 46.07 54.22 45.97 55.01 C 50.52 55.02 55.10 54.76 59.63 55.43 C 59.59 54.52 59.52 52.70 59.49 51.79 C 55.12 51.70 50.74 51.67 46.36 51.85 Z\\\" />\\r\\n</g>\\r\\n</svg>\\r\\n\"","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\r\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\r\\n<svg width=\\\"250pt\\\" height=\\\"248pt\\\" viewBox=\\\"0 0 250 248\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n<g id=\\\"#12162235\\\">\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 124.99 0.99 C 150.84 0.57 176.62 9.21 197.45 24.41 C 228.84 47.04 248.69 85.20 248.01 124.00 C 247.51 124.01 246.52 124.01 246.02 124.01 C 245.68 94.72 234.95 65.53 215.21 43.76 C 196.05 22.03 168.81 7.60 140.03 4.13 C 135.03 3.57 130.02 3.07 125.00 2.98 C 125.00 2.48 124.99 1.49 124.99 0.99 Z\\\" />\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 87.75 14.85 C 100.31 10.31 113.66 8.04 127.01 8.03 C 127.01 8.50 127.00 9.43 127.00 9.90 C 101.63 10.02 76.36 18.65 56.49 34.48 C 34.52 51.72 19.17 77.25 14.61 104.84 C 10.40 129.25 14.42 155.03 26.05 176.93 C 38.57 200.90 59.92 220.10 85.08 230.01 C 98.38 235.37 112.70 237.88 127.00 238.11 C 127.00 238.57 127.01 239.51 127.01 239.97 C 100.41 240.06 73.91 230.60 53.43 213.63 C 32.40 196.49 17.75 171.72 12.94 145.02 C 7.92 118.05 12.84 89.33 26.76 65.67 C 40.31 42.28 62.30 23.95 87.75 14.85 Z\\\" />\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 127.00 18.02 C 152.65 17.95 178.15 27.61 197.28 44.69 C 214.39 59.84 226.48 80.61 230.88 103.06 C 235.76 127.08 232.01 152.78 220.27 174.31 C 208.30 196.63 188.04 214.36 164.30 223.21 C 152.42 227.73 139.70 229.94 127.00 229.98 C 127.00 229.51 127.00 228.57 127.00 228.10 C 150.94 228.00 174.77 219.55 193.18 204.19 C 210.94 189.53 223.70 168.90 228.58 146.37 C 233.77 123.02 230.59 97.88 219.57 76.62 C 206.84 51.62 183.60 32.23 156.67 24.31 C 147.07 21.32 137.02 20.15 127.00 19.89 C 127.00 19.42 127.00 18.48 127.00 18.02 Z\\\" />\\r\\n<path fill=\\\"#121622\\\" opacity=\\\"0.21\\\" d=\\\" M 1.99 123.99 C 2.49 123.99 3.49 124.00 3.98 124.00 C 4.31 153.04 14.87 181.98 34.30 203.70 C 53.50 225.70 80.92 240.40 109.94 243.87 C 114.94 244.43 119.96 244.94 125.01 245.02 C 125.01 245.51 125.01 246.51 125.01 247.01 C 99.60 247.46 74.27 239.05 53.62 224.36 C 21.62 201.82 1.29 163.26 1.99 123.99 Z\\\" />\\r\\n</g>\\r\\n</svg>\\r\\n\"","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\n<svg width=\\\"250pt\\\" height=\\\"248pt\\\" viewBox=\\\"0 0 250 248\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\n<g id=\\\"#161c2b42\\\">\\n<path fill=\\\"#161c2b\\\" opacity=\\\"0.26\\\" d=\\\" M 125.00 0.98 C 152.79 0.75 180.49 10.58 202.08 28.06 C 230.84 50.94 248.45 87.25 248.01 124.05 C 247.51 124.04 246.51 124.03 246.01 124.02 C 245.92 98.96 237.95 73.95 223.25 53.63 C 207.25 31.19 183.34 14.50 156.72 7.34 C 146.37 4.50 135.66 3.08 124.94 2.99 C 124.96 2.48 124.99 1.48 125.00 0.98 Z\\\" />\\n<path fill=\\\"#161c2b\\\" opacity=\\\"0.26\\\" d=\\\" M 1.98 123.98 C 2.48 123.99 3.49 123.99 3.99 124.00 C 4.10 149.28 12.18 174.51 27.16 194.92 C 44.88 219.52 72.18 237.04 101.99 242.70 C 109.58 244.25 117.31 244.89 125.05 245.01 C 125.04 245.51 125.03 246.52 125.03 247.02 C 96.79 247.29 68.65 237.09 46.91 219.11 C 18.72 196.23 1.57 160.33 1.98 123.98 Z\\\" />\\n</g>\\n<g id=\\\"#0f131c2c\\\">\\n<path fill=\\\"#0f131c\\\" opacity=\\\"0.17\\\" d=\\\" M 42.96 43.96 C 64.51 21.11 95.72 7.60 127.18 7.97 C 127.11 8.46 126.99 9.45 126.93 9.94 C 113.23 10.39 99.38 12.35 86.61 17.56 C 55.55 29.15 30.33 55.10 19.47 86.41 C 10.60 111.66 10.94 140.15 20.80 165.07 C 31.82 193.89 55.16 217.70 83.74 229.32 C 97.41 235.10 112.26 237.78 127.06 238.00 C 127.05 238.52 127.02 239.56 127.00 240.08 C 100.59 240.20 74.31 230.84 53.86 214.14 C 23.95 190.24 7.34 150.77 11.51 112.66 C 13.83 87.08 25.19 62.49 42.96 43.96 Z\\\" />\\n<path fill=\\\"#0f131c\\\" opacity=\\\"0.17\\\" d=\\\" M 126.96 17.92 C 150.52 17.82 173.97 25.97 192.49 40.53 C 206.15 51.45 217.37 65.55 224.28 81.66 C 233.32 102.40 235.58 126.10 230.28 148.12 C 222.71 182.08 197.01 211.27 164.38 223.27 C 152.44 227.73 139.70 230.20 126.95 230.03 C 126.96 229.51 126.98 228.48 126.99 227.96 C 149.25 227.92 171.41 220.57 189.19 207.16 C 206.03 194.48 219.04 176.71 225.63 156.66 C 232.86 134.90 232.68 110.72 224.87 89.14 C 215.63 63.10 195.52 41.12 170.37 29.64 C 156.87 23.22 141.90 20.30 127.00 19.98 C 126.99 19.47 126.97 18.44 126.96 17.92 Z\\\" />\\n</g>\\n<g id=\\\"#24a3eaff\\\">\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 128.76 67.04 C 142.78 66.98 156.69 72.43 167.05 81.86 C 178.62 92.25 185.70 107.51 185.97 123.08 C 186.08 124.21 185.53 124.83 184.33 124.92 C 183.68 115.54 181.90 106.06 177.15 97.82 C 168.27 81.44 150.71 70.12 132.07 69.15 C 130.72 69.06 127.06 69.41 128.76 67.04 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 119.59 72.76 C 132.59 70.50 146.40 73.35 157.38 80.66 C 169.75 88.75 178.41 102.27 180.45 116.93 C 182.51 130.71 178.78 145.25 170.27 156.30 C 161.87 167.40 148.91 174.93 135.08 176.58 C 122.53 178.19 109.44 175.09 99.01 167.93 C 87.21 159.94 78.86 146.99 76.68 132.89 C 74.14 117.71 78.73 101.49 88.99 89.99 C 96.79 80.93 107.82 74.76 119.59 72.76 M 119.65 74.82 C 108.59 76.69 98.30 82.53 90.85 90.89 C 82.34 100.41 77.56 113.22 78.03 126.01 C 78.38 141.39 86.34 156.32 98.80 165.31 C 109.10 172.92 122.39 176.25 135.07 174.56 C 146.73 173.09 157.75 167.31 165.67 158.65 C 174.51 149.08 179.44 135.99 178.97 122.96 C 178.61 108.12 171.21 93.67 159.45 84.63 C 148.36 75.92 133.51 72.22 119.65 74.82 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 98.79 108.45 C 98.78 103.59 102.97 100.41 107.10 98.85 C 106.96 103.40 104.19 109.13 98.79 108.45 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 150.90 98.80 C 154.99 100.24 159.25 103.39 159.11 108.19 C 153.76 109.12 151.10 103.21 150.90 98.80 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 94.11 111.79 C 92.62 108.27 93.79 104.19 95.99 101.23 C 98.20 104.52 99.39 109.29 96.80 112.69 C 95.54 113.51 94.64 113.21 94.11 111.79 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 128.57 101.35 C 136.92 103.11 146.00 105.41 151.62 112.37 C 153.03 118.95 151.44 125.95 148.93 132.11 C 145.17 141.14 137.26 147.67 128.64 151.87 C 128.64 144.06 128.50 136.25 128.74 128.45 C 134.46 128.47 140.18 128.48 145.90 128.46 L 145.30 126.83 C 140.97 126.56 136.62 126.83 132.28 126.71 C 132.74 124.03 133.28 121.37 133.86 118.72 C 138.67 118.39 143.72 119.57 148.37 117.93 C 142.75 115.93 136.55 117.48 130.69 117.00 C 130.26 120.22 129.61 123.40 128.93 126.58 C 127.93 124.43 128.98 122.03 128.70 119.76 C 128.71 119.08 128.72 117.72 128.73 117.04 C 128.51 111.81 128.70 106.58 128.57 101.35 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 161.98 113.15 C 158.14 110.14 159.80 104.27 162.17 100.83 C 164.21 104.29 166.51 111.02 161.98 113.15 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 152.78 107.94 C 157.04 109.01 161.64 111.92 161.63 116.85 C 156.71 117.26 152.77 112.61 152.78 107.94 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 96.35 116.79 C 96.52 112.05 100.98 108.83 105.34 108.27 C 104.97 112.77 101.33 117.59 96.35 116.79 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 90.51 111.20 C 92.11 110.41 92.63 112.63 93.44 113.58 C 94.96 116.10 95.83 120.59 93.05 122.46 C 89.01 120.38 89.45 114.91 90.51 111.20 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 166.43 110.79 C 168.42 110.96 167.70 113.65 168.20 115.01 C 168.40 117.61 167.49 122.41 164.07 122.03 C 162.03 118.22 163.76 113.79 166.43 110.79 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 93.80 126.65 C 93.70 122.16 96.72 117.76 101.08 116.53 C 101.06 120.75 99.24 127.48 93.80 126.65 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 156.93 116.42 C 161.17 117.68 164.37 121.88 164.11 126.36 C 158.55 127.20 157.01 120.62 156.93 116.42 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 86.92 120.78 C 91.26 122.11 94.97 126.35 93.97 131.12 C 88.81 131.07 87.15 125.00 86.92 120.78 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 164.09 131.11 C 162.94 126.33 166.67 121.95 171.08 120.68 C 170.86 124.92 169.23 130.87 164.09 131.11 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 71.04 124.76 L 72.03 124.27 L 72.91 124.79 C 73.15 137.78 77.79 150.70 86.33 160.54 C 95.91 171.79 110.13 179.04 124.91 179.85 C 126.37 180.00 128.04 179.77 129.14 180.95 C 128.16 182.38 126.39 181.92 124.92 181.89 C 111.54 181.09 98.53 175.42 88.87 166.14 C 77.63 155.54 70.95 140.23 71.04 124.76 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 157.29 124.46 C 161.26 126.38 163.79 132.29 161.11 136.22 C 156.63 134.12 156.21 128.69 157.29 124.46 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 96.46 135.78 C 94.37 131.68 97.13 127.01 100.30 124.36 C 101.62 127.54 101.68 131.64 99.39 134.41 C 98.63 135.15 97.67 136.42 96.46 135.78 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 85.87 130.85 C 90.38 130.27 96.11 132.93 96.12 138.06 C 91.32 138.70 87.72 134.81 85.87 130.85 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 162.07 137.93 C 161.64 132.69 167.69 130.39 172.02 130.54 C 170.57 134.71 166.76 138.39 162.07 137.93 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 99.83 145.20 C 96.54 141.27 99.15 135.91 102.12 132.68 C 104.03 136.76 104.24 142.64 99.83 145.20 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 157.94 144.49 C 153.50 142.50 154.12 136.30 155.89 132.64 C 158.75 135.44 161.75 141.65 157.94 144.49 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 87.42 137.99 C 91.67 137.62 97.91 139.06 98.15 144.26 C 93.56 145.48 89.17 142.01 87.42 137.99 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 104.30 148.64 C 102.57 145.19 103.72 140.82 105.95 137.87 C 107.81 141.18 109.48 145.53 107.20 149.05 C 106.63 150.68 104.59 150.11 104.30 148.64 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 159.87 144.21 C 159.96 138.95 166.30 137.49 170.53 137.99 C 168.84 142.12 164.39 145.07 159.87 144.21 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 152.77 150.21 C 147.87 148.05 149.63 141.11 152.21 137.68 C 154.58 141.38 155.61 146.46 152.77 150.21 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 109.83 142.75 C 113.53 145.16 116.52 150.05 114.11 154.37 C 109.13 153.12 108.97 146.85 109.83 142.75 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 143.92 154.25 C 141.50 150.02 144.48 144.95 148.18 142.62 C 148.96 146.67 148.90 153.08 143.92 154.25 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 154.62 150.22 C 154.83 144.68 161.95 144.72 165.97 145.41 C 164.11 149.39 158.81 151.33 154.62 150.22 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 92.06 145.76 C 96.00 145.42 103.10 144.64 103.40 150.26 C 99.19 151.67 94.29 149.43 92.06 145.76 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 115.76 148.88 C 120.14 149.16 125.64 151.95 125.09 157.09 C 120.41 157.38 116.62 153.18 115.76 148.88 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 133.00 156.88 C 132.30 151.80 137.93 148.92 142.26 148.92 C 141.16 153.08 137.70 157.27 133.00 156.88 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 97.92 152.39 C 101.34 151.30 105.44 150.04 108.71 152.27 C 110.03 152.80 110.97 155.07 108.90 155.41 C 105.11 156.86 100.64 155.21 97.92 152.39 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 147.54 154.06 C 150.21 149.67 156.09 150.77 160.14 152.29 C 156.99 155.38 151.15 157.46 147.54 154.06 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 126.01 157.42 C 127.24 157.00 128.26 156.25 128.97 155.16 C 129.43 156.26 130.47 156.79 131.49 157.30 C 130.93 158.08 130.61 158.95 130.52 159.91 C 129.46 159.92 128.41 159.94 127.35 159.96 C 127.02 159.32 126.35 158.05 126.01 157.42 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 143.18 155.15 C 146.53 154.61 150.29 156.17 152.32 158.86 C 148.41 160.16 143.52 160.88 140.32 157.63 C 139.62 155.81 141.97 155.59 143.18 155.15 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 105.83 159.03 C 108.20 155.15 114.63 154.37 118.18 157.01 C 115.36 161.01 109.90 160.36 105.83 159.03 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 113.85 162.15 C 117.00 158.97 121.94 156.52 126.20 159.13 C 124.46 163.99 117.81 163.65 113.85 162.15 Z\\\" />\\n<path fill=\\\"#24a3ea\\\" opacity=\\\"1.00\\\" d=\\\" M 131.75 159.00 C 135.90 156.65 141.46 158.55 144.01 162.35 C 139.90 163.29 133.53 163.90 131.75 159.00 Z\\\" />\\n</g>\\n<g id=\\\"#1d8bc9ff\\\">\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 107.86 109.91 C 113.46 104.71 121.15 103.00 128.38 101.42 C 128.42 106.62 128.28 111.83 128.48 117.03 C 123.20 116.99 117.91 116.91 112.62 117.11 C 112.09 120.91 111.40 124.68 110.77 128.47 C 111.58 128.44 113.19 128.39 114.00 128.37 C 114.32 126.82 114.63 125.28 114.96 123.73 C 119.31 123.74 123.66 123.70 128.02 123.77 C 129.00 133.05 128.01 142.47 128.40 151.81 C 121.38 148.25 114.69 143.45 110.54 136.60 C 106.43 129.86 104.43 121.78 105.09 113.90 C 105.07 112.10 106.74 111.05 107.86 109.91 Z\\\" />\\n<path fill=\\\"#1d8bc9\\\" opacity=\\\"1.00\\\" d=\\\" M 115.04 121.89 C 115.32 120.84 115.59 119.78 115.87 118.73 C 119.86 118.68 123.88 119.01 127.84 118.34 L 128.16 119.09 C 128.17 119.86 128.18 121.39 128.18 122.16 C 123.81 121.92 119.42 122.07 115.04 121.89 Z\\\" />\\n</g>\\n<g id=\\\"#1b2132ff\\\">\\n<path fill=\\\"#1b2132\\\" opacity=\\\"1.00\\\" d=\\\" M 112.62 117.11 C 117.91 116.91 123.20 116.99 128.48 117.03 L 128.73 117.04 C 128.72 117.72 128.71 119.08 128.70 119.76 L 128.16 119.09 L 127.84 118.34 C 123.88 119.01 119.86 118.68 115.87 118.73 C 115.59 119.78 115.32 120.84 115.04 121.89 C 119.42 122.07 123.81 121.92 128.18 122.16 C 128.14 122.56 128.06 123.37 128.02 123.77 C 123.66 123.70 119.31 123.74 114.96 123.73 C 114.63 125.28 114.32 126.82 114.00 128.37 C 113.19 128.39 111.58 128.44 110.77 128.47 C 111.40 124.68 112.09 120.91 112.62 117.11 Z\\\" />\\n<path fill=\\\"#1b2132\\\" opacity=\\\"1.00\\\" d=\\\" M 130.69 117.00 C 136.55 117.48 142.75 115.93 148.37 117.93 C 143.72 119.57 138.67 118.39 133.86 118.72 C 133.28 121.37 132.74 124.03 132.28 126.71 C 136.62 126.83 140.97 126.56 145.30 126.83 L 145.90 128.46 C 140.18 128.48 134.46 128.47 128.74 128.45 C 128.78 127.99 128.88 127.05 128.93 126.58 C 129.61 123.40 130.26 120.22 130.69 117.00 Z\\\" />\\n</g>\\n</svg>\\n\"","\n\nimport Vis3Chart from 'vis3chart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\nimport * as base64img from './data/base64img.js';\n\nimport * as common from './common.js';\n\nimport svgDountBigAll from './data-3d/svg/dount-big-all.txt';\nimport svgDountIn from './data-3d/svg/dount-in.txt';\nimport svgDountBig from './data-3d/svg/dount-big.txt';\n\nimport * as dat from 'dat.gui';\n\nlet background = [\n    { \n        //\"url\": \"./img/dount-in.png\"\n        \"url\":svgDountIn\n        , \"issvgstring\": true\n        , \"width\": 120\n        , \"height\": 120\n        , \"offsetX\": 9\n        , \"offsetY\": 0\n        , \"rotation\": 1\n        , \"rotationAttr\": 'y'\n        , \"scaleOffset\": -.08\n    }\n    ,\n    { \n        //\"url\": \"./img/dount-big.png\"\n        \"url\": svgDountBig\n        , \"issvgstring\": true\n        , \"width\": 250\n        , \"height\": 248\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n        , \"rotation\": 1\n        , \"rotationAttr\": 'z'\n        , \"scaleOffset\": -.05\n    }\n];\n\n//console.log( background );\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    let config = {\n        scene: {\n            position: { x: 0, y: 0, z: 0 }\n        }\n        , camera: {\n            position: { x: 0, y: 0, z: 0 }\n        }\n    }\n\n    let gui = new dat.GUI();\n    let scene = gui.addFolder( 'scene position' );\n        scene.add( config.scene.position, 'x' );\n        scene.add( config.scene.position, 'y' );\n        scene.add( config.scene.position, 'z' );\n\n    let camera = gui.addFolder( 'camera position' );\n        camera.add( config.camera.position, 'x' );\n        camera.add( config.camera.position, 'y' );\n        camera.add( config.camera.position, 'z' );\n\n\n    //let data = require( './data/dount.json' );\n    //let data = require( './data/dount-tight1.json' );\n    //let data = require( './data/dount-tight2.json' );\n    let data = require( './data/dount-tight4.json' );\n    //let data = require( './data/dount-tight8.json' );\n    //let data = require( './data/dount-real1.json' );\n    //let data = require( './data/dount-disable-animation.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n    common.setColor( data );\n\n\n    let size = 500;\n\n    let box = document.querySelector('#twoBox');\n        \n    let dmins = new Vis3Chart( box );\n        dmins.updateThreeConfig( {\n            camera: {\n                fov: 40\n            }\n            , cameraPosition: {\n                //z: 300\n            }\n        });\n        dmins.update( data, true ); \n\n    window.addEventListener( 'resize', ()=>{\n\n        window.tmpTimeout && clearTimeout( window.tmpTimeout );\n\n        window.tmpTimeout = setTimeout( ()=>{\n            let size = Math.min( window.innerHeight, window.innerWidth ) * .6;\n            dmins.resize( size, size );\n        }, 1000 );\n    });\n\n    /*setInterval( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-2.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        //dmins.resize( 500, 500, data );\n        //dmins.update( data, true );\n        dmins.update( data, true );\n\n    }, 5000 );*/\n    /*\n    setTimeout( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        dmins.resize( 500, 500 );\n\n    }, 3000 );\n\n    setTimeout( ()=>{\n        //let data = require( './data/dount-tight8-1.json' );\n        let data = require( './data/dount-tight4-1.json' );\n        //let data = require( './data/dount-real1.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        dmins.update( data, true, 0 ); \n\n    }, 4000 );*/\n\n\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n"],"sourceRoot":""}