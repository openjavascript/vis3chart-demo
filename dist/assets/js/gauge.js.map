{"version":3,"sources":["webpack:///./src/assets/js/utils/three.js","webpack:///../vis3chart/dist/geometry/geometry.js","webpack:///../vis3chart/dist/3d/common/base.js","webpack:///../vis3chart/dist/geometry/geometry3d.js","webpack:///../vis3chart/dist/common/utils.js","webpack:///./src/assets/js/common.js","webpack:///../vis3chart/dist/3d/common/pointat.js","webpack:///../vis3chart/dist/index.js","webpack:///../vis3chart/dist/common/SVGLoader.js","webpack:///../vis3chart/dist/3d/common/legend.js","webpack:///../vis3chart/dist/3d/dount/index.js","webpack:///../vis3chart/dist/3d/gauge/index.js","webpack:///../vis3chart/dist/3d/icon/roundstatetext.js","webpack:///../vis3chart/dist/common/constant.js","webpack:///../vis3chart/dist/common/threex.domevents.js","webpack:///./src/assets/js/data-3d/svg/rate-out.txt","webpack:///./src/assets/js/gauge.js"],"names":["module","exports","window","THREE","Object","defineProperty","value","pointRectangleIntersection","p","r","x","x2","y","y2","pointDistance","_p1","_p2","_dx","_dy","Math","sqrt","pointAngle","angle","atan2","PI","distanceAngleToPoint","_distance","_angle","_radian","cos","sin","radians","degree","_radians","intersectRect","r1","r2","width","height","fixEndAngle","startAngle","endAngle","pointPlus","p1","p2","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","Constructor","protoProps","staticProps","prototype","_vischartbase2","_interopRequireDefault","__webpack_require__","geometry3d","obj","__esModule","newObj","hasOwnProperty","call","default","_interopRequireWildcard","_jsonUtilsx2","_three2","ThreeBase","_VisChartBase","box","camera","instance","TypeError","_classCallCheck","this","_this","self","ReferenceError","_possibleConstructorReturn","__proto__","getPrototypeOf","textColor","screenWidth","screenHeight","subClass","superClass","create","constructor","setPrototypeOf","_inherits","size","arguments","undefined","textureParams","params","callback","parent","texture","map","material","SpriteMaterial","sprite","Sprite","scale","setX","imageAspect","multiplyScalar","stage","add","addDestroy","val","redraw","mesh","Box3","setFromObject","getBox","getSize","Vector3","matrixWorld","setFromMatrixPosition","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","getter","_get","totalAngle","deep","sizeRate","renderer","scene","render","jsonInData","config","cameraPosition","z","_this2","images","iconLayer","remove","_images","rotationBg","data","background","addImage","url","offsetX","offsetY","rotation","isbase64","item","opt","issvgstring","svgLoader","initSVGBackground","parse","_svgloader","SVGLoader","paths","group","Group","path","MeshBasicMaterial","color","side","DoubleSide","depthWrite","shapes","toShapes","j","shape","geometry","ShapeBufferGeometry","Mesh","max","min","position","pivot","Object3D","to3d","scaleOffset","set","fixCy","ele","push","animationBg","_this3","isDestroy","isAnimation","requestAnimationFrame","animate","_this4","getRotationAttr","getRotationStep","rotationAttr","rotationStep","_this5","setDestroy","destroyList","dispose","toString","indexOf","parseInt","replace","cx","cy","legend","direction","outerHeight","_this6","children","sitem","ex","pos2dto3d","size2dto3d","pos0","pos","clone","abs","posx","to3dx","vec","unproject","sub","normalize","distance","copy","to3dy","resizeToBit","rangeCount","cur","next","parseFinance","_i","_dot","parseFloat","toFixed","COLORS","setColor","colors","textStyle","series","skey","itemStyle","_jsonUtilsx","PointAt","point","cpoint","init","rects","fill","leftTop","rightTop","leftBottom","rightBottom","isLeftTop","isRightTop","isRightBottom","isLeftBottom","DIRE_NAME","topCenter","rightMid","bottomCenter","leftMid","DIRE_NUM","1","2","4","8","3","6","9","12","_base2","_legend2","_index2","_index4","constant","_threexDomevents2","_lodash2","VisThree","ins","fov","near","far","resize","update","tmpredraw","ignoreLegend","aspect","updateProjectionMatrix","Scene","PerspectiveCamera","nera","WebGLRenderer","antialias","alpha","setPixelRatio","devicePixelRatio","sortObjects","innerHTML","appendChild","domElement","cameraHelper","CameraHelper","visible","domEvents","DomEvents","setSize","customWidth","style","customHeight","merge","setThreeConfig","realIndex","clearUpdate","emptyblock","destroy","legent","setOptions","onChange","initChart","type","CHART_TYPE","dount","gauge","setLegend","options","srcData","fillData","getLegendData","tmp","disabled","manager","DefaultLoadingManager","load","onLoad","onProgress","onError","scope","FileLoader","text","parseArcCommand","rx","ry","x_axis_rotation","large_arc_flag","sweep_flag","start","end","dx2","dy2","x1p","y1p","rxs","rys","x1ps","y1ps","cr","s","dq","pq","q","cxp","cyp","theta","svgAngle","delta","currentPath","absellipse","ux","uy","vx","vy","dot","len","ang","acos","parseStyle","node","assign","hasAttribute","getAttribute","isVisible","getReflection","a","b","parseFloats","string","array","split","number","lastIndexOf","splice","parseNode","nodeType","nodeName","ShapePath","setStyle","Vector2","control","commands","match","l","command","charAt","substr","trim","numbers","jl","moveTo","lineTo","bezierCurveTo","quadraticCurveTo","autoClose","parsePathNode","w","h","parseRectNode","index","parsePolygonNode","parsePolylineNode","subpath","Path","absarc","subPaths","parseCircleNode","parseEllipseNode","x1","y1","parseLineNode","nodes","childNodes","DOMParser","parseFromString","documentElement","Legend","name","Date","now","iconSpace","icon","allData","curRow","floor","column","space","columnWidth","row","spaceY","rowHeight","label","parseColor","inited","_item","_bgPlane","bg","_rectPlane","rect","_group","_textSprite","rectGeometry","PlaneBufferGeometry","itemWidth","itemHeight","needsUpdate","_fontSize","createText","fontFamily","fontSize","fontStyle","transparent","textSprite","textMaterial","opacity","bgGeometry","bgMaterial","bgPlane","rectMaterial","rectPlane","bind","ceil","bottom","left","right","unbind","_pointat2","_three5","_toConsumableArray","arr","Array","isArray","arr2","from","Dount","outPercent","inPercent","circleLinePercent","circlePercent","circleLineRotation","circleLineRotationStep","animationStep","angleStep","textHeight","lineOffset","line","textOffset","lineColor","lineRange","lineWidth","lineSpace","lineAngle","lineHeight","lineCurveLength","loopSort","clearList","outRadius","inRadius","lineLength","lineLengthCount","lineLengthStep","lineLeft","fixCx","lineRight","calcLayoutPosition","countAngle","isDone","clearItems","calcVal","initText","calcDataPosition","initDataLayout","animation","animationCircleLine","pathData","circleLine","isSeriesAnimation","reset","tmpAngle","itemData","geometryx","RingGeometry","arc","animationLine","circleRadius","MeshLine","curve","EllipseCurve","points","getPoints","geometryy","Geometry","setFromPoints","concat","setGeometry","MeshLineMaterial","Color","circle","renderOrder","depthTest","circleLineRadius","geometryItem","CircleGeometry","vertices","shift","Line","drawCircle","drawCircleLine","ii","mline","layer","arcLayer","lineEnd","lineExpend","meshline","lineStart","addIcon","addText","lineicon","textar","textPoint","angleDirect","pointDirection","autoAngle","textX","textY","auto","realLineWidth","getLabel","_this7","total","_percent","precision","getPrecision","percent","round","_totalPercent","_this8","textWidth","midAngle","fixWidth","fixHeight","tmpPoint","_tmpAngle","_tmpPoint","pre","tmpY","_pre","_cur","_tmpY","_i2","_pre2","_cur2","_tmpY2","_i3","_pre3","_cur3","_tmpY3","_i4","_pre4","_cur4","_roundstatetext2","Gauge","clearTextList","totalPostfix","offsetCy","curRate","totalNum","totalNumStep","roundRadiusPercent","arcLinePercent","arcOutPercent","arcInPercent","arcLabelLength","arcTextLength","arcAngleOffset","arcAngle","part","arcTotal","arcOffset","arcOffsetPad","partLabel","partAngle","partNum","textOffsetX","textOffsetY","textLineLength","textRectWidthPercent","textRectHeightPercent","textRoundPercent","textRoundOffsetAngle","textRoundPlusAngle","textRoundMaxAngle","roundStatusRaidus","textRoundAngle","radius","pow","getAttackRatePercent","textRoundRadius","roundRadius","arcInRadius","arcOutRadius","arcLineRaidus","arcPartLineAr","arcOutlinePartAr","textAr","angleOffset","rotationOffset","json","clearText","animationAngle","getAttackRateAngle","updateArrow","rateStep","isRunAnimation","totalNumCount","animationText","totalTextTexture","_this9","totalTextGroup","labelFontSize","letterSpacing","colorParams","tmpParams","labelParams","fontWeight","tmpTotalText","matrixWorldNeedsUpdate","totalTextPostfix","totalText","textReatGroupIns","rectHeight","PlaneGeometry","getPosition","positions","partpoints","indices","getBoxSize","top","arrowLength","LineBasicMaterial","Float32Array","BufferGeometry","addAttribute","BufferAttribute","setIndex","Uint16Array","LineSegments","_this10","Texture","generateGradientTexture","canvas","document","createElement","context","getContext","gradient","createLinearGradient","addColorStop","fillStyle","drawArcText","drawInnerText","drawInnerCircle","drawArc","drawArcLine","drawArcPartLine","initRoundText","drawText","drawTextRect","drawArrow","arrowIcon","preAngle","geo","mat","tri","faces","Face3","setHex","center","vertexColors","FaceColors","isNaN","innerCircleRadius","_this11","percentText","getAttackText","RoundStateText","curColor","stageBackup","rate","uniforms","linePartMaterial1","linePartMaterial2","circleMaterial","THREEx","_camera","_domElement","_raycaster","Raycaster","_selected","_boundObjs","_$onClick","_onClick","apply","_$onDblClick","_onDblClick","_$onMouseMove","_onMouseMove","_$onMouseDown","_onMouseDown","_$onMouseUp","_onMouseUp","_$onTouchMove","_onTouchMove","_$onTouchStart","_onTouchStart","_$onTouchEnd","_onTouchEnd","_$onContextmenu","_onContextmenu","addEventListener","removeEventListener","eventNames","_getRelativeMouseXY","domEvent","element","srcElement","parentNode","elPosition","tmpElement","getComputedStyle","getPropertyValue","offsetLeft","offsetTop","offsetParent","elDimension","innerWidth","offsetWidth","innerHeight","offsetHeight","pageX","pageY","_objectCtxInit","object3d","_3xDomEvent","_objectCtxDeinit","_objectCtxIsInit","_objectCtxGet","eventName","useCapture","objectCtx","handlers","handler","_bound","_onMove","mouseX","mouseY","origDomEvent","boundObjs","vector","setFromCamera","intersects","intersectObjects","oldSelected","notifyOver","notifyOut","notifyMove","intersect","newSelected","_notify","_onEvent","objectParent","toPropagate","stopPropagation","event","_onMouseEvent","mouseCoords","_onTouchEvent","touches","preventDefault","_data_3d_svg_rate_out_txt__WEBPACK_IMPORTED_MODULE_3___default","fontfaceobserver__WEBPACK_IMPORTED_MODULE_1___default","then","gui","dat_gui__WEBPACK_IMPORTED_MODULE_4__","addFolder","_common_js__WEBPACK_IMPORTED_MODULE_2__","querySelector","dmins","vis3chart__WEBPACK_IMPORTED_MODULE_0___default","updateThreeConfig","tmpTimeout","clearTimeout","setTimeout"],"mappings":"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","file":"assets/js/gauge.js","sourcesContent":["\nmodule.exports = window.THREE;\n","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pointRectangleIntersection = pointRectangleIntersection;\nexports.pointDistance = pointDistance;\nexports.pointAngle = pointAngle;\nexports.distanceAngleToPoint = distanceAngleToPoint;\nexports.radians = radians;\nexports.degree = degree;\nexports.intersectRect = intersectRect;\nexports.fixEndAngle = fixEndAngle;\nexports.pointPlus = pointPlus;\n\n/**\n * 判断一个点是否在矩形里面\n * @method  pointRectangleIntersection\n * @param   {point} _p\n * @param   {rect}  _r\n * @return  Boolean\n * @static\n */\nfunction pointRectangleIntersection(p, r) {\n    return p.x >= r.x && p.x <= r.x2 && p.y >= r.y && p.y <= r.y2;\n}\n/**\n * 计算两个坐标点之间的距离\n * @method pointDistance\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointDistance(_p1, _p2) {\n    var _dx = _p2.x - _p1.x,\n        _dy = _p2.y - _p1.y,\n        _dist = Math.sqrt(_dx * _dx + _dy * _dy);\n    ;\n    return _dist;\n}\n/**\n * 计算两个坐标点之间的角度\n * @method pointAngle\n * @param   {point} _p1\n * @param   {point} _p2\n * @return  Boolean\n * @static\n */\nfunction pointAngle(_p1, _p2) {\n    var angle = Math.atan2(_p2.y - _p1.y, _p2.x - _p1.x) * 180 / Math.PI;\n    if (angle < 0) {\n        angle = 360 + angle;\n    }\n\n    return angle;\n}\n\n/**\n * 从长度和角度求坐标点\n * @method  distanceAngleToPoint\n * @param  {Number} _distance\n * @param  {Number} _angle\n * @return Point\n * @static\n */\nfunction distanceAngleToPoint(_distance, _angle) {\n    var _radian = _angle * Math.PI / 180;\n    return {\n        x: Math.cos(_radian) * _distance,\n        y: Math.sin(_radian) * _distance\n    };\n}\n/**\n * 从角度获取弧度\n * @method  radians\n * @param   {Number} _angle\n * @return  {Number}\n * @static\n */\nfunction radians(_angle) {\n    return _angle * Math.PI / 180;\n}\n/**\n * 从弧度获取角度\n * @method  degree\n * @param   {Number} _radians\n * @return  {Number}\n * @static\n */\nfunction degree(_radians) {\n    return _radians / Math.PI * 180;\n}\n/**\n * 判断两个矩形是否有交集\n * @method intersectRect\n * @param   {rect_Object}   r1\n * @param   {rect_Object}   r2\n * @return  {Boolean}\n */\nfunction intersectRect(r1, r2) {\n    return !(r2.x > r1.x + r1.width || r2.x + r2.width < r1.x || r2.y > r1.y + r1.height || r2.y + r2.height < r1.y);\n}\n\nfunction fixEndAngle(startAngle, endAngle) {\n    if (endAngle < startAngle) {\n        endAngle += 360;\n    }\n    return endAngle;\n}\n\nfunction pointPlus(p1, p2) {\n    return {\n        x: p1.x + p2.x,\n        y: p1.y + p2.y\n    };\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _vischartbase = require('vischartbase');\n\nvar _vischartbase2 = _interopRequireDefault(_vischartbase);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nrequire('../../common/SVGLoader.js');\n\nvar ThreeBase = function (_VisChartBase) {\n    _inherits(ThreeBase, _VisChartBase);\n\n    function ThreeBase(box, width, height, camera) {\n        _classCallCheck(this, ThreeBase);\n\n        var _this = _possibleConstructorReturn(this, (ThreeBase.__proto__ || Object.getPrototypeOf(ThreeBase)).call(this, box, width, height, camera));\n\n        camera && (_this.camera = camera);\n\n        _this.textColor = 0xffffff;\n        //this.lineColor = 0x596ea7;\n\n        geometry3d.screenWidth = _this.width;\n        geometry3d.screenHeight = _this.height;\n        geometry3d.camera = _this.camera;\n        return _this;\n    }\n    /*\n        let fontSize = geometry3d.to3d( 16 );\n        this.createText(\n            fontSize\n            , {\n                color: this.lineColor \n                , rotation: geometry.radians( \n                    val.angle + 90 + ( val.rotationOffset || 0 ) + 180\n                )\n            }\n            , {\n              text: val.text + '',\n              fontFamily: 'MicrosoftYaHei, \"Times New Roman\", Times, serif',\n              fontSize: fontSize * 2,\n            }\n            , ( sprite ) => {\n                sprite.position.x = val.point.x\n                sprite.position.y = val.point.y\n            }\n        );\n    */\n\n\n    _createClass(ThreeBase, [{\n        key: 'createText',\n        value: function createText() {\n            var size = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 44;\n            var textureParams = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n            var params = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n            var callback = arguments[3];\n            var parent = arguments[4];\n\n            var texture = new _three2.default(params);\n            textureParams.map = texture;\n            var material = new THREE.SpriteMaterial(textureParams);\n            var sprite = new THREE.Sprite(material);\n            sprite.scale.setX(texture.imageAspect).multiplyScalar(size);\n\n            callback && callback(sprite, material, texture, textureParams, params);\n\n            parent = parent || this.stage;\n\n            parent.add(sprite);\n            this.addDestroy(sprite);\n\n            return sprite;\n        }\n    }, {\n        key: 'setRedraw',\n        value: function setRedraw(val) {\n            this.redraw = val;\n            return this;\n        }\n    }, {\n        key: 'getBox',\n        value: function getBox(mesh) {\n            var box = new THREE.Box3().setFromObject(mesh);\n            /*\n            let size = box.getSize( new THREE.Vector3 );\n            return size;\n            */\n            return box;\n        }\n    }, {\n        key: 'getBoxSize',\n        value: function getBoxSize(mesh) {\n            return this.getBox(mesh).getSize(new THREE.Vector3());\n        }\n    }, {\n        key: 'getPosition',\n        value: function getPosition(matrixWorld) {\n            var position = new THREE.Vector3();\n            return position.setFromMatrixPosition(matrixWorld);\n        }\n    }, {\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(ThreeBase.prototype.__proto__ || Object.getPrototypeOf(ThreeBase.prototype), '_setSize', this).call(this, width, height);\n\n            this.totalAngle = -360;\n            this.deep = 0;\n\n            this.sizeRate = 1;\n        }\n    }, {\n        key: 'render',\n        value: function render() {\n            this.renderer && this.scene && this.camera && this.renderer.render(this.scene, this.camera);\n\n            return this;\n        }\n    }, {\n        key: 'getWidth',\n        value: function getWidth() {\n            var r = this.width;\n\n            if (_jsonUtilsx2.default.jsonInData(this, 'config.cameraPosition.z')) {\n                r = this.config.cameraPosition.z;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'getHeight',\n        value: function getHeight() {\n            var r = this.height;\n\n            if (_jsonUtilsx2.default.jsonInData(this, 'config.cameraPosition.z')) {\n                r = this.config.cameraPosition.z;\n            }\n\n            return r;\n        }\n    }, {\n        key: 'getDeepWidth',\n        value: function getDeepWidth() {\n            var r = this.deep;\n            if (_jsonUtilsx2.default.jsonInData(this, 'config.cameraPosition.z')) {\n                r = this.config.cameraPosition.z / this.width * this.config.cameraPosition.z;\n            }\n            return r;\n        }\n    }, {\n        key: 'loadImage',\n        value: function loadImage() {\n            var _this2 = this;\n\n            if (this.images.length) return;\n\n            if (this.iconLayer) this.iconLayer.remove();\n\n            this.images = [];\n            this._images = [];\n            this.rotationBg = [];\n\n            if (this.data && this.data.background && this.data.background.length) {\n\n                this.data.background.map(function (val) {\n                    _this2.addImage(val.url, val.width, val.height, val.offsetX || 0, val.offsetY || 0, val.rotation || 0, val.isbase64, val);\n                });\n            }\n\n            this.images.map(function (item, key) {\n                item.opt = item.opt || {};\n                if (item.opt.issvgstring) {\n                    if (!_this2.svgLoader()) return;\n                    _this2.initSVGBackground(_this2.svgLoader().parse(item.url), item, key);\n                    return;\n                }\n            });\n\n            return this;\n        }\n    }, {\n        key: 'svgLoader',\n        value: function svgLoader() {\n            if (!this._svgloader && THREE.SVGLoader) {\n                this._svgloader = new THREE.SVGLoader();\n            }\n\n            return this._svgloader;\n        }\n    }, {\n        key: 'initSVGBackground',\n        value: function initSVGBackground(paths, item, key) {\n            if (!(paths && paths.length)) return;\n\n            var group = new THREE.Group();\n            group.scale.y *= -1;\n            for (var i = 0; i < paths.length; i++) {\n                var path = paths[i];\n                var material = new THREE.MeshBasicMaterial({\n                    color: path.color,\n                    side: THREE.DoubleSide,\n                    depthWrite: false\n                });\n                var shapes = path.toShapes(true);\n                for (var j = 0; j < shapes.length; j++) {\n                    var shape = shapes[j];\n                    var geometry = new THREE.ShapeBufferGeometry(shape);\n                    var mesh = new THREE.Mesh(geometry, material);\n                    group.add(mesh);\n                    this.addDestroy(mesh);\n                }\n            }\n\n            var box = new THREE.Box3().setFromObject(group);\n            var size = box.getSize(new THREE.Vector3());\n\n            var x = -box.max.x / 2 - box.min.x / 2,\n                y = -box.max.y / 2 - box.min.y / 2;\n\n            group.position.x = x;\n            group.position.y = y;\n\n            var pivot = new THREE.Object3D();\n            pivot.add(group);\n            this.addDestroy(group);\n\n            var scale = geometry3d.to3d(Math.max(item.width, item.height)) / Math.max(box.max.x, size.x);\n            if (item.opt.scaleOffset) {\n                scale += item.opt.scaleOffset;\n            }\n\n            pivot.scale.set(scale, scale, scale);\n\n            pivot.position.y = this.fixCy();\n\n            this.stage.add(pivot);\n            this.addDestroy(pivot);\n\n            var data = { ele: pivot, item: item };\n\n            this._images.push(data);\n\n            item.rotation && this.rotationBg.push(data);\n\n            this.render();\n            this.animationBg();\n        }\n    }, {\n        key: 'animate',\n        value: function animate() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n\n            requestAnimationFrame(function () {\n                _this3.animate();\n            });\n        }\n    }, {\n        key: 'animationBg',\n        value: function animationBg() {\n            var _this4 = this;\n\n            if (this.isDestroy) return;\n            if (!this.rotationBg.length) return;\n            if (!this.isAnimation()) return;\n            //return;\n            if (this._images && this._images.length) {\n                this._images.map(function (item) {\n                    item.ele.rotation[_this4.getRotationAttr(item)] += _this4.getRotationStep(item);\n                });\n                this.render();\n            };\n\n            window.requestAnimationFrame(function () {\n                _this4.animationBg();\n            });\n        }\n    }, {\n        key: 'getRotationAttr',\n        value: function getRotationAttr(item) {\n            var r = 'y';\n            if (_jsonUtilsx2.default.jsonInData(item, 'item.opt.rotationAttr')) {\n                r = item.item.opt.rotationAttr;\n            }\n            return r;\n        }\n    }, {\n        key: 'getRotationStep',\n        value: function getRotationStep(item) {\n            var r = 0.03;\n            if (_jsonUtilsx2.default.jsonInData(item, 'item.opt.rotationStep')) {\n                r = item.item.opt.rotationStep;\n            }\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this5 = this;\n\n            this.setDestroy();\n\n            this.destroyList.map(function (item) {\n                _this5.dispose(item);\n            });\n        }\n    }, {\n        key: 'parseColor',\n        value: function parseColor(color) {\n            if (color.toString().indexOf('#') > -1) {\n                color = parseInt(color.replace('#', ''), 16);\n            }\n\n            return color;\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            var r = this.cx;\n            return r;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            var r = this.cy;\n\n            if (this.legend) {\n                switch (this.legend.direction()) {\n                    case 'bottom':\n                        {\n                            r = (this.height - this.legend.outerHeight() / 2) / 2 - 5;\n                            break;\n                        }\n                }\n            }\n\n            return geometry3d.to3d(this.cy - r);\n        }\n    }, {\n        key: 'fixWidth',\n        value: function fixWidth() {\n            var r = this.width;\n            return r;\n        }\n    }, {\n        key: 'fixHeight',\n        value: function fixHeight() {\n            var r = this.height;\n            return r;\n        }\n    }, {\n        key: 'dispose',\n        value: function dispose(item) {\n            var _this6 = this;\n\n            if (!item) return this;\n\n            if (item.children && item.children.length) {\n                item.children.map(function (sitem) {\n                    _this6.dispose(sitem);\n                });\n            }\n\n            try {\n                item.geometry && item.parent && item.geometry.dispose && item.geometry.dispose();\n\n                item.material && item.parent && item.material.dispose && item.material.dispose();\n\n                item.texture && item.parent && item.texture.dispose && item.texture.dispose();\n            } catch (ex) {};\n\n            item.parent && item.parent.remove && item.parent.remove(item);\n\n            return this;\n        }\n    }]);\n\n    return ThreeBase;\n}(_vischartbase2.default);\n\nexports.default = ThreeBase;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nexports.pos2dto3d = pos2dto3d;\nexports.size2dto3d = size2dto3d;\nexports.to3d = to3d;\nexports.to3dx = to3dx;\nexports.to3dy = to3dy;\nexports.resizeToBit = resizeToBit;\n\nvar THREE = require('three');\n\nfunction pos2dto3d(x, y, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var vec = new THREE.Vector3(); // create once and reuse\n    var pos = new THREE.Vector3(); // create once and reuse\n    vec.set(x / screenWidth * 2 - 1, -(y / screenHeight) * 2 + 1, 0.5);\n\n    vec.unproject(camera);\n    vec.sub(camera.position).normalize();\n    var distance = -camera.position.z / vec.z;\n    pos.copy(camera.position).add(vec.multiplyScalar(distance));\n    return pos;\n}\n\nfunction size2dto3d(x, y, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var pos0 = pos2dto3d(0, 0, screenWidth, screenHeight, camera);\n    var posx = pos2dto3d(x, y, screenWidth, screenHeight, camera);\n    var pos = posx.clone();\n    pos.x = Math.abs(pos.x - pos0.x);\n    pos.y = Math.abs(pos.y - pos0.y);\n    pos.z = Math.abs(pos.z - pos0.z);\n    return pos;\n}\n\nfunction to3d(x, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var y = 0;\n    var pos0 = pos2dto3d(0, 0, screenWidth, screenHeight, camera);\n    var posx = pos2dto3d(x, y, screenWidth, screenHeight, camera);\n    return Math.abs(posx.x - pos0.x);\n}\n\nfunction to3dx(x, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var y = 0;\n\n    var vec = new THREE.Vector3(); // create once and reuse\n    var pos = new THREE.Vector3(); // create once and reuse\n    vec.set(x / screenWidth * 2 - 1, -(y / screenHeight) * 2 + 1, 0.5);\n\n    vec.unproject(camera);\n    vec.sub(camera.position).normalize();\n    var distance = -camera.position.z / vec.z;\n    pos.copy(camera.position).add(vec.multiplyScalar(distance));\n    return pos.x;\n}\n\nfunction to3dy(y, screenWidth, screenHeight, camera) {\n    screenWidth = screenWidth || this.screenWidth;\n    screenHeight = screenHeight || this.screenHeight;\n    camera = camera || this.camera;\n\n    var x = 0;\n\n    var vec = new THREE.Vector3(); // create once and reuse\n    var pos = new THREE.Vector3(); // create once and reuse\n    vec.set(x / screenWidth * 2 - 1, -(y / screenHeight) * 2 + 1, 0.5);\n\n    vec.unproject(camera);\n    vec.sub(camera.position).normalize();\n    var distance = -camera.position.z / vec.z;\n    pos.copy(camera.position).add(vec.multiplyScalar(distance));\n    return pos.x;\n}\n\nfunction resizeToBit(size) {\n    var max = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 15;\n\n    var r = size;\n    var rangeCount = 1;\n    for (var i = 0; i < max; i++) {\n        var cur = rangeCount,\n            next = rangeCount * 2;\n\n        if (size >= cur && size <= next) {\n            if (size >= cur + cur / 2) {\n                r = next;\n            } else {\n                r = cur;\n            }\n            break;\n        }\n\n        rangeCount *= 2;\n    }\n\n    return r;\n}","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.parseFinance = parseFinance;\n\n\n/**\n * 取小数点的N位\n * <br />JS 解析 浮点数的时候，经常出现各种不可预知情况，这个函数就是为了解决这个问题\n * @method  parseFinance\n * @static\n * @param   {number}    _i\n * @param   {int}       _dot  default = 2\n * @return  number\n */\nfunction parseFinance(_i, _dot) {\n  _i = parseFloat(_i) || 0;\n  typeof _dot == 'undefined' && (_dot = 2);\n  _i && (_i = parseFloat(_i.toFixed(_dot)));\n  return _i;\n}","\n\nlet COLORS = [\n    '#da432e',\n    '#f3a42d',\n    '#b56be8',\n    '#207dd3',\n    '#50d275',\n    '#4aabd6',\n    '#f12575',\n    '#da432e',\n    '#19af89'\n];\n\n\nexport function setColor( data, colors ){\n    colors = colors || COLORS;\n\n\n    if( data && data.legend && data.legend.data ){\n        data.legend.data.map( ( item, key ) => {\n            if( !item.textStyle ) return;\n\n            item.textStyle.color = colors[ key % colors.length ];\n        });\n    }\n\n    if( data && data.series  ){\n        data.series.map( ( item, key ) => {\n            if( !item.data ) return;\n\n            item.data.map( ( sitem, skey ) => {\n                if( !sitem.itemStyle ) return;\n                sitem.itemStyle.color = colors[ skey % colors.length ];\n            });\n        });\n    }\n\n}\n","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar PointAt = function () {\n    function PointAt(width, height, point) {\n        _classCallCheck(this, PointAt);\n\n        this.width = width;\n        this.height = height;\n        this.point = point;\n\n        this.cx = this.width / 2;\n        this.cy = this.height / 2;\n\n        this.cpoint = { x: this.cx, y: this.cy };\n\n        this.offsetX = 20;\n        this.offsetY = 20;\n\n        this.colors = ['#f12575', '#da432e', '#f3a42d', '#19af89', '#24a3ea', '#b56be8'];\n\n        this.init();\n    }\n\n    _createClass(PointAt, [{\n        key: 'setDebug',\n        value: function setDebug(stage) {\n            this.stage = stage;\n            var i = 0;\n\n            for (var key in this.rects) {\n\n                var item = this.rects[key];\n                var params = _jsonUtilsx2.default.clone(item);\n                params.fill = this.colors[i % this.colors.length];\n                i++;\n            }\n            //this.stage.add( this.layer );\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            this.leftTop = {\n                x: 0,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftTop.x2 = this.leftTop.x + this.leftTop.width;\n            this.leftTop.y2 = this.leftTop.y + this.leftTop.height;\n\n            this.rightTop = {\n                x: this.cx - this.offsetX,\n                y: 0,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightTop.x2 = this.rightTop.x + this.rightTop.width;\n            this.rightTop.y2 = this.rightTop.y + this.rightTop.height;\n\n            this.leftBottom = {\n                x: 0,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.leftBottom.x2 = this.leftBottom.x + this.leftBottom.width;\n            this.leftBottom.y2 = this.leftBottom.y + this.leftBottom.height;\n\n            this.rightBottom = {\n                x: this.cx - this.offsetX,\n                y: this.cy - this.offsetY,\n                width: this.cx + this.offsetX,\n                height: this.cy + this.offsetY\n            };\n            this.rightBottom.x2 = this.rightBottom.x + this.rightBottom.width;\n            this.rightBottom.y2 = this.rightBottom.y + this.rightBottom.height;\n\n            this.rects = {\n                leftTop: this.leftTop,\n                rightTop: this.rightTop,\n                leftBottom: this.leftBottom,\n                rightBottom: this.rightBottom\n            };\n        }\n    }, {\n        key: 'isLeftTop',\n        value: function isLeftTop() {\n            return geometry.pointRectangleIntersection(this.point, this.leftTop) ? 1 : 0;\n        }\n    }, {\n        key: 'isRightTop',\n        value: function isRightTop() {\n            return geometry.pointRectangleIntersection(this.point, this.rightTop) ? 2 : 0;\n        }\n    }, {\n        key: 'isRightBottom',\n        value: function isRightBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.rightBottom) ? 4 : 0;\n        }\n    }, {\n        key: 'isLeftBottom',\n        value: function isLeftBottom() {\n            return geometry.pointRectangleIntersection(this.point, this.leftBottom) ? 8 : 0;\n        }\n    }, {\n        key: 'auto',\n        value: function auto() {\n            var r = this.isLeftTop() + this.isRightTop() + this.isRightBottom() + this.isLeftBottom();\n            return r;\n        }\n    }, {\n        key: 'autoAngle',\n        value: function autoAngle() {\n            var angle = geometry.pointAngle(this.cpoint, this.point),\n                r = '';\n\n            if (angle >= 0 && angle <= 90) {\n                r = PointAt.DIRE_NAME.rightTop;\n            } else if (angle > 90 && angle <= 180) {\n                r = PointAt.DIRE_NAME.leftTop;\n            } else if (angle > 180 && angle <= 270) {\n                r = PointAt.DIRE_NAME.leftBottom;\n            } else {\n                r = PointAt.DIRE_NAME.rightBottom;\n            }\n\n            //console.log( 'autoAngle', angle, r );\n\n            return r;\n        }\n    }]);\n\n    return PointAt;\n}();\n\nexports.default = PointAt;\n\n\nPointAt.DIRE_NAME = {\n    leftTop: 1,\n    rightTop: 2,\n    rightBottom: 4,\n    leftBottom: 8,\n\n    topCenter: 3,\n    rightMid: 6,\n    bottomCenter: 12,\n    leftMid: 9\n};\n\nPointAt.DIRE_NUM = {\n    '1': 'leftTop',\n    '2': 'rightTop',\n    '4': 'rightBottom',\n    '8': 'leftBottom',\n\n    '3': 'topCenter',\n    '6': 'rightMid',\n    '9': 'leftMid',\n    '12': 'bottomCenter'\n};","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('./3d/common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _legend = require('./3d/common/legend.js');\n\nvar _legend2 = _interopRequireDefault(_legend);\n\nvar _index = require('./3d/dount/index.js');\n\nvar _index2 = _interopRequireDefault(_index);\n\nvar _index3 = require('./3d/gauge/index.js');\n\nvar _index4 = _interopRequireDefault(_index3);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _constant = require('./common/constant.js');\n\nvar constant = _interopRequireWildcard(_constant);\n\nvar _threexDomevents = require('./common/threex.domevents.js');\n\nvar _threexDomevents2 = _interopRequireDefault(_threexDomevents);\n\nvar _geometry = require('./geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _lodash = require('lodash');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar VisThree = function (_VisChartBase) {\n    _inherits(VisThree, _VisChartBase);\n\n    function VisThree(box, width, height) {\n        _classCallCheck(this, VisThree);\n\n        var _this = _possibleConstructorReturn(this, (VisThree.__proto__ || Object.getPrototypeOf(VisThree)).call(this, box, width, height));\n\n        _this.ins = [];\n        _this.legend = null;\n        return _this;\n    }\n\n    _createClass(VisThree, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n\n            this.config = this.config || {\n                camera: {\n                    fov: 40,\n                    near: 1,\n                    far: 1000\n                },\n\n                cameraPosition: { x: 0, y: 0, z: 350 }\n            };\n\n            _get(VisThree.prototype.__proto__ || Object.getPrototypeOf(VisThree.prototype), '_setSize', this).call(this, width, height);\n\n            this.init();\n\n            if (this.legend && this.data && this.data.legend) {\n                this.legend.resize(this.width, this.height);\n\n                this.legend.update(this.data.legend);\n            }\n\n            if (this.data) {\n                var tmpredraw = this.redraw;\n                this.update(this.data, this.ignoreLegend);\n                this.redraw = tmpredraw;\n            }\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            if (!this.box) return;\n\n            if (!this.stage) {\n                this.stage = this.scene = new THREE.Scene();\n\n                //console.log( this, this.config );\n\n                this.camera = new THREE.PerspectiveCamera(this.config.camera.fov, this.width / this.height, this.config.camera.nera, this.config.camera.far);\n                this.camera.position.set(this.config.cameraPosition.x, this.config.cameraPosition.y, this.config.cameraPosition.z);\n                this.renderer = new THREE.WebGLRenderer({ antialias: true, alpha: true });\n                this.renderer.setPixelRatio(window.devicePixelRatio);\n                //this.renderer.setClearColor( 0xffffff, .2 );\n                this.renderer.sortObjects = true;\n                this.box.innerHTML = '';\n                this.box.appendChild(this.renderer.domElement);\n\n                //this.scene.rotation.x = geometry.radians( 45 );\n                //this.scene.rotation.y = geometry.radians( 290 );\n\n                this.cameraHelper = new THREE.CameraHelper(this.camera);\n                this.cameraHelper.visible = false;\n                this.scene.add(this.cameraHelper);\n\n                this.domEvents = new _threexDomevents2.default.DomEvents(this.camera, this.renderer.domElement);\n\n                //console.log( this.scene, this.camera );\n            } else {\n                this.camera.aspect = this.width / this.height;\n                this.camera.updateProjectionMatrix();\n            }\n            this.renderer.setSize(this.width, this.height);\n\n            this.customWidth && (this.box.style.width = this.customWidth + 'px');\n            this.customHeight && (this.box.style.height = this.customHeight + 'px');\n\n            this.render();\n\n            return this;\n        }\n    }, {\n        key: 'setThreeConfig',\n        value: function setThreeConfig(config) {\n            config = config || {};\n\n            this.config = _lodash2.default.merge(this.config, config);\n\n            return this;\n        }\n    }, {\n        key: 'updateThreeConfig',\n        value: function updateThreeConfig(config) {\n            this.setThreeConfig(config);\n\n            this.camera.position.x = this.config.cameraPosition.x;\n            this.camera.position.y = this.config.cameraPosition.y;\n            this.camera.position.z = this.config.cameraPosition.z;\n\n            this.camera.fov = this.config.camera.fov;\n            this.camera.near = this.config.camera.near;\n            this.camera.far = this.config.camera.far;\n\n            this.camera.updateProjectionMatrix();\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, ignoreLegend) {\n            var _this2 = this;\n\n            var redraw = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n\n            this.data = data;\n            this.ignoreLegend = ignoreLegend;\n            this.redraw = redraw;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'series')) return;\n\n            this.data && this.data.legend && this.data.legend.data && this.data.legend.data.legend && this.data.legend.data.map(function (item, key) {\n                item.realIndex = key;\n            });\n\n            this.data && this.data.series && this.data.series.length && this.data.series.map(function (sitem) {\n                sitem.data && sitem.data.length && sitem.data.map(function (item, key) {\n                    item.realIndex = key;\n                });\n            });\n\n            this.clearUpdate();\n\n            if (_jsonUtilsx2.default.jsonInData(this.data, 'legend.data') && this.data.legend.data.length) {\n                if (this.legend && ignoreLegend) {\n                    this.emptyblock = 'kao';\n                } else {\n                    this.legend && this.legend.destroy() && (this.legent = null);\n                    this.legend = new _legend2.default(this.box, this.width, this.height, this.camera);\n                    this.legend.setOptions({\n                        renderer: this.renderer,\n                        scene: this.scene,\n                        camera: this.camera,\n                        stage: this.stage,\n                        config: this.config,\n                        domEvents: this.domEvents,\n                        onChange: function onChange(group) {\n                            _this2.initChart();\n                        }\n                    });\n                    this.legend.update(this.data.legend);\n                }\n            }\n            this.initChart();\n            return this;\n        }\n    }, {\n        key: 'initChart',\n        value: function initChart() {\n            var _this3 = this;\n\n            //console.log( 'initChart', Date.now() );\n            this.redraw = 0;\n\n            if (this.ins && this.ins.length && !this.redraw) {\n                this.emptyblock = 'kao';\n            } else {\n                this.ins.map(function (item) {\n                    item.destroy();\n                });\n                this.ins = [];\n            }\n\n            this.data.series.map(function (val, key) {\n                //console.log( val, constant );\n                var ins = void 0;\n\n                if (_this3.ins && _this3.ins.length && _this3.ins[key] && !_this3.redraw) {\n                    ins = _this3.ins[key];\n                    ins.width = _this3.width;\n                    ins.height = _this3.height;\n                } else {\n                    switch (val.type) {\n                        case constant.CHART_TYPE.dount:\n                            {\n                                ins = new _index2.default(_this3.box, _this3.width, _this3.height, _this3.camera);\n                                break;\n                            }\n                        case constant.CHART_TYPE.gauge:\n                            {\n                                //console.log( 'gauge 1', Date.now() );\n                                ins = new _index4.default(_this3.box, _this3.width, _this3.height, _this3.camera);\n                                break;\n                            }\n                    }\n                    if (ins) {\n                        //console.log( 'gauge 2', Date.now() );\n                        _this3.legend && ins.setLegend(_this3.legend);\n                        ins.setOptions({\n                            renderer: _this3.renderer,\n                            scene: _this3.scene,\n                            camera: _this3.camera,\n                            stage: _this3.stage,\n                            config: _this3.config,\n                            domEvents: _this3.domEvents\n                        });\n                    }\n                }\n\n                if (ins) {\n                    //console.log( 'gauge 3', Date.now() );\n                    _this3.options = _this3.options || {};\n                    _this3.options.srcData = val;\n                    ins.setOptions(_this3.options);\n\n                    var fillData = _this3.getLegendData(val);\n                    ins.update(fillData, _jsonUtilsx2.default.clone(_this3.data));\n\n                    if (!_this3.ins[key]) {\n                        _this3.ins[key] = ins;\n                    }\n                }\n            });\n        }\n    }, {\n        key: 'getLegendData',\n        value: function getLegendData(data) {\n            data = _jsonUtilsx2.default.clone(data);\n\n            var tmp = [];\n\n            if (this.legend && this.legend.group && this.legend.group.length) {\n                this.legend.group.map(function (item, key) {\n                    //console.log( key, item.disabled, item );\n                    if (!item.disabled) {\n                        tmp.push(data.data[key]);\n                    }\n                });\n                data.data = tmp;\n            }\n\n            return data;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(VisThree.prototype.__proto__ || Object.getPrototypeOf(VisThree.prototype), 'destroy', this).call(this);\n\n            //this.clearUpdate();\n            this.ins.map(function (item) {\n                item.destroy();\n            });\n            //this.legend && this.legend.destroy();\n\n            this.stage && this.stage.destroy();\n            this.stage = null;\n        }\n    }, {\n        key: 'clearUpdate',\n        value: function clearUpdate() {\n            //this.legend && !this.ignoreLegend && this.legend.destroy();\n        }\n    }]);\n\n    return VisThree;\n}(_base2.default);\n\nexports.default = VisThree;","'use strict';\n\n/**\n * @author mrdoob / http://mrdoob.com/\n * @author zz85 / http://joshuakoo.com/\n */\n\nTHREE.SVGLoader = function (manager) {\n\n\tthis.manager = manager !== undefined ? manager : THREE.DefaultLoadingManager;\n};\n\nTHREE.SVGLoader.prototype = {\n\n\tconstructor: THREE.SVGLoader,\n\n\tload: function load(url, onLoad, onProgress, onError) {\n\n\t\tvar scope = this;\n\n\t\tvar loader = new THREE.FileLoader(scope.manager);\n\t\tloader.load(url, function (text) {\n\n\t\t\tonLoad(scope.parse(text));\n\t\t}, onProgress, onError);\n\t},\n\n\tparse: function parse(text) {\n\n\t\tfunction parseNode(node, style) {\n\n\t\t\tif (node.nodeType !== 1) return;\n\n\t\t\tswitch (node.nodeName) {\n\n\t\t\t\tcase 'svg':\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'g':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'path':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (node.hasAttribute('d') && isVisible(style)) paths.push(parsePathNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'rect':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseRectNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polygon':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parsePolygonNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'polyline':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parsePolylineNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'circle':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseCircleNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ellipse':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseEllipseNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'line':\n\t\t\t\t\tstyle = parseStyle(node, style);\n\t\t\t\t\tif (isVisible(style)) paths.push(parseLineNode(node, style));\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\t//console.log( node );\n\t\t\t\t\tbreak;\n\n\t\t\t}\n\n\t\t\tvar nodes = node.childNodes;\n\n\t\t\tfor (var i = 0; i < nodes.length; i++) {\n\n\t\t\t\tparseNode(nodes[i], style);\n\t\t\t}\n\t\t}\n\n\t\tfunction parsePathNode(node, style) {\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\n\t\t\tvar point = new THREE.Vector2();\n\t\t\tvar control = new THREE.Vector2();\n\n\t\t\tvar d = node.getAttribute('d');\n\n\t\t\t// console.log( d );\n\n\t\t\tvar commands = d.match(/[a-df-z][^a-df-z]*/ig);\n\n\t\t\tfor (var i = 0, l = commands.length; i < l; i++) {\n\n\t\t\t\tvar command = commands[i];\n\n\t\t\t\tvar type = command.charAt(0);\n\t\t\t\tvar data = command.substr(1).trim();\n\n\t\t\t\tswitch (type) {\n\n\t\t\t\t\tcase 'M':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x = numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.moveTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'H':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.x = numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'V':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.y = numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'L':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x = numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'C':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 6) {\n\t\t\t\t\t\t\tpath.bezierCurveTo(numbers[j + 0], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], numbers[j + 5]);\n\t\t\t\t\t\t\tcontrol.x = numbers[j + 2];\n\t\t\t\t\t\t\tcontrol.y = numbers[j + 3];\n\t\t\t\t\t\t\tpoint.x = numbers[j + 4];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 5];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'S':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.bezierCurveTo(getReflection(point.x, control.x), getReflection(point.y, control.y), numbers[0], numbers[1], numbers[2], numbers[3]);\n\t\t\t\t\t\tcontrol.x = numbers[0];\n\t\t\t\t\t\tcontrol.y = numbers[1];\n\t\t\t\t\t\tpoint.x = numbers[2];\n\t\t\t\t\t\tpoint.y = numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'Q':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.quadraticCurveTo(numbers[0], numbers[1], numbers[2], numbers[3]);\n\t\t\t\t\t\tcontrol.x = numbers[0];\n\t\t\t\t\t\tcontrol.y = numbers[1];\n\t\t\t\t\t\tpoint.x = numbers[2];\n\t\t\t\t\t\tpoint.y = numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'T':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tvar rx = getReflection(point.x, control.x);\n\t\t\t\t\t\tvar ry = getReflection(point.y, control.y);\n\t\t\t\t\t\tpath.quadraticCurveTo(rx, ry, numbers[0], numbers[1]);\n\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\tpoint.x = numbers[0];\n\t\t\t\t\t\tpoint.y = numbers[1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'A':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 7) {\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x = numbers[j + 5];\n\t\t\t\t\t\t\tpoint.y = numbers[j + 6];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(path, numbers[j], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], start, point);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t//\n\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x += numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.moveTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'h':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.x += numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'v':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j++) {\n\t\t\t\t\t\t\tpoint.y += numbers[j];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 2) {\n\t\t\t\t\t\t\tpoint.x += numbers[j + 0];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 1];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tpath.lineTo(point.x, point.y);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'c':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 6) {\n\t\t\t\t\t\t\tpath.bezierCurveTo(point.x + numbers[j + 0], point.y + numbers[j + 1], point.x + numbers[j + 2], point.y + numbers[j + 3], point.x + numbers[j + 4], point.y + numbers[j + 5]);\n\t\t\t\t\t\t\tcontrol.x = point.x + numbers[j + 2];\n\t\t\t\t\t\t\tcontrol.y = point.y + numbers[j + 3];\n\t\t\t\t\t\t\tpoint.x += numbers[j + 4];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 5];\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.bezierCurveTo(getReflection(point.x, control.x), getReflection(point.y, control.y), point.x + numbers[0], point.y + numbers[1], point.x + numbers[2], point.y + numbers[3]);\n\t\t\t\t\t\tcontrol.x = point.x + numbers[0];\n\t\t\t\t\t\tcontrol.y = point.y + numbers[1];\n\t\t\t\t\t\tpoint.x += numbers[2];\n\t\t\t\t\t\tpoint.y += numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tpath.quadraticCurveTo(point.x + numbers[0], point.y + numbers[1], point.x + numbers[2], point.y + numbers[3]);\n\t\t\t\t\t\tcontrol.x = point.x + numbers[0];\n\t\t\t\t\t\tcontrol.y = point.y + numbers[1];\n\t\t\t\t\t\tpoint.x += numbers[2];\n\t\t\t\t\t\tpoint.y += numbers[3];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 't':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tvar rx = getReflection(point.x, control.x);\n\t\t\t\t\t\tvar ry = getReflection(point.y, control.y);\n\t\t\t\t\t\tpath.quadraticCurveTo(rx, ry, point.x + numbers[0], point.y + numbers[1]);\n\t\t\t\t\t\tcontrol.x = rx;\n\t\t\t\t\t\tcontrol.y = ry;\n\t\t\t\t\t\tpoint.x = point.x + numbers[0];\n\t\t\t\t\t\tpoint.y = point.y + numbers[1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'a':\n\t\t\t\t\t\tvar numbers = parseFloats(data);\n\t\t\t\t\t\tfor (var j = 0, jl = numbers.length; j < jl; j += 7) {\n\t\t\t\t\t\t\tvar start = point.clone();\n\t\t\t\t\t\t\tpoint.x += numbers[j + 5];\n\t\t\t\t\t\t\tpoint.y += numbers[j + 6];\n\t\t\t\t\t\t\tcontrol.x = point.x;\n\t\t\t\t\t\t\tcontrol.y = point.y;\n\t\t\t\t\t\t\tparseArcCommand(path, numbers[j], numbers[j + 1], numbers[j + 2], numbers[j + 3], numbers[j + 4], start, point);\n\t\t\t\t\t\t}\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t//\n\n\t\t\t\t\tcase 'Z':\n\t\t\t\t\tcase 'z':\n\t\t\t\t\t\tpath.currentPath.autoClose = true;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t//console.warn( command );\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t}\n\n\t\t\t\t// console.log( type, parseFloats( data ), parseFloats( data ).length  )\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\t/**\n   * https://www.w3.org/TR/SVG/implnote.html#ArcImplementationNotes\n   * https://mortoray.com/2017/02/16/rendering-an-svg-elliptical-arc-as-bezier-curves/ Appendix: Endpoint to center arc conversion\n   * From\n   * rx ry x-axis-rotation large-arc-flag sweep-flag x y\n   * To\n   * aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation\n   */\n\n\t\tfunction parseArcCommand(path, rx, ry, x_axis_rotation, large_arc_flag, sweep_flag, start, end) {\n\n\t\t\tx_axis_rotation = x_axis_rotation * Math.PI / 180;\n\n\t\t\t// Ensure radii are positive\n\t\t\trx = Math.abs(rx);\n\t\t\try = Math.abs(ry);\n\n\t\t\t// Compute (x1′, y1′)\n\t\t\tvar dx2 = (start.x - end.x) / 2.0;\n\t\t\tvar dy2 = (start.y - end.y) / 2.0;\n\t\t\tvar x1p = Math.cos(x_axis_rotation) * dx2 + Math.sin(x_axis_rotation) * dy2;\n\t\t\tvar y1p = -Math.sin(x_axis_rotation) * dx2 + Math.cos(x_axis_rotation) * dy2;\n\n\t\t\t// Compute (cx′, cy′)\n\t\t\tvar rxs = rx * rx;\n\t\t\tvar rys = ry * ry;\n\t\t\tvar x1ps = x1p * x1p;\n\t\t\tvar y1ps = y1p * y1p;\n\n\t\t\t// Ensure radii are large enough\n\t\t\tvar cr = x1ps / rxs + y1ps / rys;\n\n\t\t\tif (cr > 1) {\n\n\t\t\t\t// scale up rx,ry equally so cr == 1\n\t\t\t\tvar s = Math.sqrt(cr);\n\t\t\t\trx = s * rx;\n\t\t\t\try = s * ry;\n\t\t\t\trxs = rx * rx;\n\t\t\t\trys = ry * ry;\n\t\t\t}\n\n\t\t\tvar dq = rxs * y1ps + rys * x1ps;\n\t\t\tvar pq = (rxs * rys - dq) / dq;\n\t\t\tvar q = Math.sqrt(Math.max(0, pq));\n\t\t\tif (large_arc_flag === sweep_flag) q = -q;\n\t\t\tvar cxp = q * rx * y1p / ry;\n\t\t\tvar cyp = -q * ry * x1p / rx;\n\n\t\t\t// Step 3: Compute (cx, cy) from (cx′, cy′)\n\t\t\tvar cx = Math.cos(x_axis_rotation) * cxp - Math.sin(x_axis_rotation) * cyp + (start.x + end.x) / 2;\n\t\t\tvar cy = Math.sin(x_axis_rotation) * cxp + Math.cos(x_axis_rotation) * cyp + (start.y + end.y) / 2;\n\n\t\t\t// Step 4: Compute θ1 and Δθ\n\t\t\tvar theta = svgAngle(1, 0, (x1p - cxp) / rx, (y1p - cyp) / ry);\n\t\t\tvar delta = svgAngle((x1p - cxp) / rx, (y1p - cyp) / ry, (-x1p - cxp) / rx, (-y1p - cyp) / ry) % (Math.PI * 2);\n\n\t\t\tpath.currentPath.absellipse(cx, cy, rx, ry, theta, theta + delta, sweep_flag === 0, x_axis_rotation);\n\t\t}\n\n\t\tfunction svgAngle(ux, uy, vx, vy) {\n\n\t\t\tvar dot = ux * vx + uy * vy;\n\t\t\tvar len = Math.sqrt(ux * ux + uy * uy) * Math.sqrt(vx * vx + vy * vy);\n\t\t\tvar ang = Math.acos(Math.max(-1, Math.min(1, dot / len))); // floating point precision, slightly over values appear\n\t\t\tif (ux * vy - uy * vx < 0) ang = -ang;\n\t\t\treturn ang;\n\t\t}\n\n\t\t/*\n  * According to https://www.w3.org/TR/SVG/shapes.html#RectElementRXAttribute\n  * rounded corner should be rendered to elliptical arc, but bezier curve does the job well enough\n  */\n\t\tfunction parseRectNode(node, style) {\n\n\t\t\tvar x = parseFloat(node.getAttribute('x') || 0);\n\t\t\tvar y = parseFloat(node.getAttribute('y') || 0);\n\t\t\tvar rx = parseFloat(node.getAttribute('rx') || 0);\n\t\t\tvar ry = parseFloat(node.getAttribute('ry') || 0);\n\t\t\tvar w = parseFloat(node.getAttribute('width'));\n\t\t\tvar h = parseFloat(node.getAttribute('height'));\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\t\t\tpath.moveTo(x + 2 * rx, y);\n\t\t\tpath.lineTo(x + w - 2 * rx, y);\n\t\t\tif (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y, x + w, y, x + w, y + 2 * ry);\n\t\t\tpath.lineTo(x + w, y + h - 2 * ry);\n\t\t\tif (rx !== 0 || ry !== 0) path.bezierCurveTo(x + w, y + h, x + w, y + h, x + w - 2 * rx, y + h);\n\t\t\tpath.lineTo(x + 2 * rx, y + h);\n\n\t\t\tif (rx !== 0 || ry !== 0) {\n\n\t\t\t\tpath.bezierCurveTo(x, y + h, x, y + h, x, y + h - 2 * ry);\n\t\t\t\tpath.lineTo(x, y + 2 * ry);\n\t\t\t\tpath.bezierCurveTo(x, y, x, y, x + 2 * rx, y);\n\t\t\t}\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parsePolygonNode(node, style) {\n\n\t\t\tfunction iterator(match, a, b) {\n\n\t\t\t\tvar x = parseFloat(a);\n\t\t\t\tvar y = parseFloat(b);\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t} else {\n\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute('points').replace(regex, iterator);\n\n\t\t\tpath.currentPath.autoClose = true;\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parsePolylineNode(node, style) {\n\n\t\t\tfunction iterator(match, a, b) {\n\n\t\t\t\tvar x = parseFloat(a);\n\t\t\t\tvar y = parseFloat(b);\n\n\t\t\t\tif (index === 0) {\n\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t} else {\n\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t}\n\n\t\t\t\tindex++;\n\t\t\t}\n\n\t\t\tvar regex = /(-?[\\d\\.?]+)[,|\\s](-?[\\d\\.?]+)/g;\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\n\t\t\tvar index = 0;\n\n\t\t\tnode.getAttribute('points').replace(regex, iterator);\n\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parseCircleNode(node, style) {\n\n\t\t\tvar x = parseFloat(node.getAttribute('cx'));\n\t\t\tvar y = parseFloat(node.getAttribute('cy'));\n\t\t\tvar r = parseFloat(node.getAttribute('r'));\n\n\t\t\tvar subpath = new THREE.Path();\n\t\t\tsubpath.absarc(x, y, r, 0, Math.PI * 2);\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\t\t\tpath.subPaths.push(subpath);\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parseEllipseNode(node, style) {\n\n\t\t\tvar x = parseFloat(node.getAttribute('cx'));\n\t\t\tvar y = parseFloat(node.getAttribute('cy'));\n\t\t\tvar rx = parseFloat(node.getAttribute('rx'));\n\t\t\tvar ry = parseFloat(node.getAttribute('ry'));\n\n\t\t\tvar subpath = new THREE.Path();\n\t\t\tsubpath.absellipse(x, y, rx, ry, 0, Math.PI * 2);\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.color.setStyle(style.fill);\n\t\t\tpath.subPaths.push(subpath);\n\n\t\t\treturn path;\n\t\t}\n\n\t\tfunction parseLineNode(node, style) {\n\n\t\t\tvar x1 = parseFloat(node.getAttribute('x1'));\n\t\t\tvar y1 = parseFloat(node.getAttribute('y1'));\n\t\t\tvar x2 = parseFloat(node.getAttribute('x2'));\n\t\t\tvar y2 = parseFloat(node.getAttribute('y2'));\n\n\t\t\tvar path = new THREE.ShapePath();\n\t\t\tpath.moveTo(x1, y1);\n\t\t\tpath.lineTo(x2, y2);\n\t\t\tpath.currentPath.autoClose = false;\n\n\t\t\treturn path;\n\t\t}\n\n\t\t//\n\n\t\tfunction parseStyle(node, style) {\n\n\t\t\tstyle = Object.assign({}, style); // clone style\n\n\t\t\tif (node.hasAttribute('fill')) style.fill = node.getAttribute('fill');\n\t\t\tif (node.style.fill !== '') style.fill = node.style.fill;\n\n\t\t\treturn style;\n\t\t}\n\n\t\tfunction isVisible(style) {\n\n\t\t\treturn style.fill !== 'none' && style.fill !== 'transparent';\n\t\t}\n\n\t\t// http://www.w3.org/TR/SVG11/implnote.html#PathElementImplementationNotes\n\n\t\tfunction getReflection(a, b) {\n\n\t\t\treturn a - (b - a);\n\t\t}\n\n\t\tfunction parseFloats(string) {\n\n\t\t\tvar array = string.split(/[\\s,]+|(?=\\s?[+\\-])/);\n\n\t\t\tfor (var i = 0; i < array.length; i++) {\n\n\t\t\t\tvar number = array[i];\n\n\t\t\t\t// Handle values like 48.6037.7\n\t\t\t\t// TODO Find a regex for this\n\n\t\t\t\tif (number.indexOf('.') !== number.lastIndexOf('.')) {\n\n\t\t\t\t\tarray.splice(i + 1, 0, '0.' + number.split('.')[2]);\n\t\t\t\t}\n\n\t\t\t\tarray[i] = parseFloat(number);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t}\n\n\t\t//\n\n\t\t//console.log( 'THREE.SVGLoader' );\n\n\t\tvar paths = [];\n\n\t\t//console.time( 'THREE.SVGLoader: DOMParser' );\n\n\t\tvar xml = new DOMParser().parseFromString(text, 'image/svg+xml'); // application/xml\n\n\t\t//console.timeEnd( 'THREE.SVGLoader: DOMParser' );\n\n\t\t//console.time( 'THREE.SVGLoader: Parse' );\n\n\t\tparseNode(xml.documentElement, { fill: '#000' });\n\n\t\t// console.log( paths );\n\n\t\t//console.timeEnd( 'THREE.SVGLoader: Parse' );\n\n\t\treturn paths;\n\t}\n\n};\n\nmodule.exports = THREE.SVGLoader;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('./base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar Legend = function (_VisChartBase) {\n    _inherits(Legend, _VisChartBase);\n\n    function Legend(box, width, height, camera) {\n        _classCallCheck(this, Legend);\n\n        var _this = _possibleConstructorReturn(this, (Legend.__proto__ || Object.getPrototypeOf(Legend)).call(this, box, width, height, camera));\n\n        _this.name = 'Legend_' + Date.now();\n\n        _this.textColor = 0x24a3ea;\n\n        _this.iconSpace = 5;\n\n        _this.text = [];\n        _this.icon = [];\n        _this.group = [];\n\n        _this.destroyList = [];\n        return _this;\n    }\n\n    _createClass(Legend, [{\n        key: 'setStage',\n        value: function setStage(stage) {\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'setStage', this).call(this, stage);\n        }\n    }, {\n        key: 'resize',\n        value: function resize(width, height) {\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var allData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'resize', this).call(this, width, height, data, allData);\n\n            geometry3d.screenWidth = this.width;\n            geometry3d.screenHeight = this.height;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this2 = this;\n\n            geometry3d.screenWidth = this.width;\n            geometry3d.screenHeight = this.height;\n            geometry3d.camera = this.camera;\n\n            //console.log( 'text size', geometry3d.to3d( 20 ) );\n\n            this.data.data.map(function (item, key) {\n                var x = 0,\n                    y = 0,\n                    count = key + 1,\n                    curRow = Math.floor(key / _this2.column());\n\n                switch (_this2.direction()) {\n                    case 'bottom':\n                        {\n                            x = _this2.space() + (_this2.space() + _this2.columnWidth()) * (key % _this2.column());\n                            y = _this2.height - (_this2.row() - curRow) * (_this2.spaceY() + _this2.rowHeight());\n                            break;\n                        }\n                }\n\n                y += 4;\n\n                var label = item.name || key + '';\n\n                var color = _this2.colors[key % _this2.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(item, 'textStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = item.textStyle.color;\n                }\n\n                color = _this2.parseColor(color);\n                var pos = geometry3d.pos2dto3d(x, y);\n\n                if (!_this2.inited) {\n\n                    //console.log( 'x', x, 'y', y, 'pos.x', pos.x, 'pos.y', pos.y );\n\n                    var group = new THREE.Group();\n                    group.transparent = true;\n\n                    var bgGeometry = new THREE.PlaneBufferGeometry(geometry3d.to3d(_this2.columnWidth()), geometry3d.to3d(_this2.itemHeight()), 32);\n                    var bgMaterial = new THREE.MeshBasicMaterial({\n                        color: _this2.parseColor(0xffffff),\n                        side: THREE.DoubleSide,\n                        opacity: 0,\n                        transparent: true\n                    });\n                    var bgPlane = new THREE.Mesh(bgGeometry, bgMaterial);\n                    bgPlane.position.x = pos.x + geometry3d.to3d(_this2.columnWidth()) / 2;\n                    bgPlane.position.y = pos.y;\n\n                    group.add(bgPlane);\n                    _this2.addDestroy(bgPlane);\n\n                    var rectGeometry = new THREE.PlaneBufferGeometry(geometry3d.to3d(_this2.itemWidth()), geometry3d.to3d(_this2.itemHeight()), 32);\n                    var rectMaterial = new THREE.MeshBasicMaterial({\n                        color: color,\n                        side: THREE.DoubleSide,\n                        transparent: true\n                    });\n                    var rectPlane = new THREE.Mesh(rectGeometry, rectMaterial);\n                    rectPlane.position.x = pos.x;\n                    rectPlane.position.y = pos.y;\n                    group.add(rectPlane);\n                    _this2.addDestroy(rectPlane);\n\n                    var fontSize = geometry3d.to3d(22);\n                    var textSprite = _this2.createText(fontSize, { color: _this2.parseColor(_this2.textColor) }, {\n                        text: label,\n                        fontFamily: 'MicrosoftYaHei',\n                        fontSize: fontSize * 2,\n                        fontStyle: 'normal',\n                        transparent: true\n                    }, function (textSprite, textMaterial) {\n                        textSprite.position.x = pos.x + _this2.itemWidth() + geometry3d.to3d(_this2.iconSpace) + textSprite.scale.x / 2 - 3;\n                        textSprite.position.y = pos.y;\n                    }, group);\n                    _this2.scene.add(group);\n                    _this2.addDestroy(group);\n\n                    var data = {\n                        ele: group,\n                        item: item,\n                        disabled: false,\n                        rect: rectPlane,\n                        bg: bgPlane,\n                        text: textSprite\n                    };\n                    _this2.group.push(data);\n                    _this2.domEvents.bind(group, 'click', function () {\n                        data.disabled = !data.disabled;\n                        if (data.disabled) {\n                            //group.opacity( .6 );\n                            data.rect.material.opacity = .6;\n                            data.text.material.opacity = .6;\n                        } else {\n                            data.rect.material.opacity = 1;\n                            data.text.material.opacity = 1;\n                        }\n                        _this2.onChange && _this2.onChange(data);\n                    });\n                } else {\n                    var _item = _this2.group[key];\n\n                    var _bgPlane = _item.bg,\n                        _rectPlane = _item.rect,\n                        _group = _item.ele,\n                        _textSprite = _item.text;\n\n                    _bgPlane.position.x = pos.x + geometry3d.to3d(_this2.columnWidth()) / 2;\n                    _bgPlane.position.y = pos.y;\n\n                    var rectGeometry = new THREE.PlaneBufferGeometry(geometry3d.to3d(_this2.itemWidth()), geometry3d.to3d(_this2.itemHeight()), 32);\n                    _rectPlane.geometry = rectGeometry;\n                    _rectPlane.needsUpdate = true;\n\n                    _rectPlane.position.x = pos.x;\n                    _rectPlane.position.y = pos.y;\n\n                    _item.text.parent.remove(_item.text);\n                    var _fontSize = geometry3d.to3d(22);\n                    _textSprite = _this2.createText(_fontSize, { color: _this2.parseColor(_this2.textColor) }, {\n                        text: label,\n                        fontFamily: 'MicrosoftYaHei',\n                        fontSize: _fontSize * 5,\n                        fontStyle: 'normal',\n                        transparent: true\n                    }, function (textSprite, textMaterial) {\n                        textSprite.position.x = pos.x + _this2.itemWidth() + geometry3d.to3d(_this2.iconSpace) + textSprite.scale.x / 2 - 3;\n                        textSprite.position.y = pos.y;\n\n                        if (_item.disabled) {\n                            //group.opacity( .6 );\n                            textMaterial.opacity = .6;\n                        } else {\n                            textMaterial.opacity = 1;\n                        }\n                    }, _group);\n                    _item.text = _textSprite;\n                }\n            });\n            //this.stage.add( this.layer );\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data) {\n            this.data = data || {};\n            if (!(this.data && this.data.data && this.data.data.length)) return;\n\n            this.init();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'outerHeight',\n        value: function outerHeight() {\n            return this.rowHeight() * this.row() + this.spaceY() * (this.row() - 1);\n        }\n    }, {\n        key: 'total',\n        value: function total() {\n            var r = 0;\n\n            return r;\n        }\n    }, {\n        key: 'itemWidth',\n        value: function itemWidth() {\n            return this.data.itemWidth || 5;\n        }\n    }, {\n        key: 'itemHeight',\n        value: function itemHeight() {\n            return this.data.itemHeight || 5;\n        }\n    }, {\n        key: 'columnWidth',\n        value: function columnWidth() {\n            //return ( this.width - ( this.column() - 1 + 2 ) * this.space() ) / this.column();\n            var width = this.width;\n            return (width - (this.column() - 1 + 2) * this.space()) / this.column();\n        }\n    }, {\n        key: 'column',\n        value: function column() {\n            return this.data.column || 1;\n        }\n    }, {\n        key: 'space',\n        value: function space() {\n            return this.data.space || 15;\n        }\n    }, {\n        key: 'spaceY',\n        value: function spaceY() {\n            return this.data.space || 5;\n        }\n    }, {\n        key: 'rowHeight',\n        value: function rowHeight() {\n            return this.data.rowHeight || 20;\n        }\n    }, {\n        key: 'row',\n        value: function row() {\n            return Math.ceil(this.data.data.length / this.column());\n        }\n    }, {\n        key: 'direction',\n        value: function direction() {\n            var r = 'top';\n\n            if (this.data.bottom) {\n                r = 'bottom';\n            } else if (this.data.left) {\n                r = 'left';\n            } else if (this.data.right) {\n                r = 'right';\n            }\n\n            return r;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            var _this3 = this;\n\n            _get(Legend.prototype.__proto__ || Object.getPrototypeOf(Legend.prototype), 'destroy', this).call(this);\n            //console.log( this.name, 'destroy', this.group.length );\n\n            this.group && this.group.length && this.group.map(function (item) {\n                //if( !item.ele ) return;\n                //item.ele.off( 'click' );\n                //item.ele.removeEventListener('click');\n                _this3.domEvents.unbind(item.ele, 'click');\n                //console.log( 'remove event', Date.now() );\n            });\n        }\n    }]);\n\n    return Legend;\n}(_base2.default);\n\nexports.default = Legend;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar Dount = function (_VisChartBase) {\n    _inherits(Dount, _VisChartBase);\n\n    function Dount(box, width, height, camera) {\n        _classCallCheck(this, Dount);\n\n        var _this = _possibleConstructorReturn(this, (Dount.__proto__ || Object.getPrototypeOf(Dount)).call(this, box, width, height, camera));\n\n        _this.name = 'Dount_' + Date.now();\n        return _this;\n    }\n\n    _createClass(Dount, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), '_setSize', this).call(this, width, height);\n\n            this.outPercent = .53;\n            this.inPercent = .37;\n\n            this.circleLinePercent = .34;\n            this.circlePercent = .31;\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.animationStep = 8;\n            this.angleStep = 5;\n\n            this.textHeight = 26;\n            this.lineOffset = 50;\n\n            this.path = [];\n            this.line = [];\n\n            this.textOffset = 4;\n\n            this.lineColor = 0x24a3ea;\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n            };\n\n            this.lineWidth = 32;\n            this.lineSpace = 10;\n            this.lineAngle = 35;\n            this.lineHeight = 15;\n            this.lineCurveLength = 30;\n\n            this.loopSort = [4, 8, 1, 2];\n\n            this.clearList = [];\n\n            this.outRadius = 73;\n            this.inRadius = 53;\n\n            this.lineLength = 25;\n            this.lineLengthCount = 1;\n            this.lineLengthStep = .5;\n\n            this.lineLeft = this.fixCx() - this.outRadius - this.lineSpace;\n            this.lineRight = this.fixCx() + this.outRadius + this.lineSpace;\n\n            this.init();\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            geometry3d.screenWidth = this.width;\n            geometry3d.screenHeight = this.height;\n            geometry3d.camera = this.camera;\n\n            this.calcLayoutPosition();\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'update', this).call(this, data, allData);\n            //console.log( THREE );\n\n            this.data = data;\n            this.allData = allData;\n\n            this.countAngle = 0;\n            this.isDone = 0;\n            this.lineLengthCount = 0;\n\n            if (!_jsonUtilsx2.default.jsonInData(this.data, 'data')) return;\n\n            this.clearItems();\n            this.calcVal();\n            this.initText();\n            this.calcDataPosition();\n            this.initDataLayout();\n\n            //console.log( 'dount update', this.data, this, utils );\n\n            this.animation();\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n\n            return this;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {\n            this.path.map(function (val) {\n                val.pathData = [];\n            });\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLine.rotation.z -= .03;\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this3 = this;\n\n            if (this.isDestroy) return;\n            if (this.isDone) return;\n\n            var tmp = void 0,\n                tmppoint = void 0,\n                step = this.angleStep;\n\n            this.countAngle -= this.animationStep;\n\n            if (!this.isSeriesAnimation()) {\n                this.countAngle = this.totalAngle;\n            }\n\n            if (this.countAngle <= this.totalAngle || !this.isAnimation()) {\n                this.countAngle = this.totalAngle;\n                this.isDone = 1;\n            }\n\n            this.reset();\n\n            for (var i = this.path.length - 1; i >= 0; i--) {\n                //for( let i = 0; i < this.path.length; i++ ){\n                //let i = 2;\n                var item = this.path[i];\n\n                var tmpAngle = this.countAngle;\n\n                if (tmpAngle <= item.itemData.endAngle) {\n                    tmpAngle = item.itemData.endAngle;\n                }\n\n                if (tmpAngle > item.itemData.startAngle) continue;\n\n                var geometryx = new THREE.RingGeometry(this.inRadius, this.outRadius, 256, 1, geometry.radians(0), geometry.radians(tmpAngle));\n\n                item.arc.geometry.dispose();\n                item.arc.geometry = geometryx;\n            }\n\n            window.requestAnimationFrame(function () {\n                _this3.animation();\n            });\n\n            if (this.isDone) {\n                window.requestAnimationFrame(function () {\n                    _this3.animationLine();\n                });\n            }\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = geometry3d.to3d(Math.ceil(this.circlePercent * this.min / 2));\n            //console.log( this.circleRadius );\n\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.scene.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = geometry3d.to3d(Math.ceil(this.circleLinePercent * this.min / 2));\n\n            var material = void 0,\n                geometryItem = void 0,\n                circle = void 0,\n                group = void 0,\n                line = void 0;\n\n            group = new THREE.Group();\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(90), geometry.radians(90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n            this.addDestroy(circle);\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(0), geometry.radians(-90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            group.position.y = this.fixCy();\n\n            group.add(circle);\n            this.addDestroy(circle);\n\n            this.circleLine = group;\n\n            this.scene.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            this.drawCircle();\n            this.drawCircleLine();\n\n            this.path = [];\n            this.line = [];\n\n            for (var ii = this.data.data.length - 1; ii >= 0; ii--) {\n                var val = this.data.data[ii],\n                    key = ii;\n                var pathindex = this.data.data.length - 1 - ii;\n\n                var color = this.colors[key % this.colors.length];\n\n                if (_jsonUtilsx2.default.jsonInData(val, 'itemStyle.color')) {\n                    //path.fill( val.itemStyle.color );\n                    color = val.itemStyle.color;\n                }\n                color = this.parseColor(color);\n\n                var line = void 0,\n                    material = void 0,\n                    geometryx = void 0,\n                    mesh = void 0,\n                    arc = void 0,\n                    tmp = void 0;\n\n                line = new _three5.MeshLine();\n                material = new _three5.MeshLineMaterial({\n                    color: new THREE.Color(0xffffff),\n                    lineWidth: 2\n                });\n                geometryx = new THREE.Geometry();\n                line.setGeometry(geometryx);\n                mesh = new THREE.Mesh(line.geometry, material);\n                mesh.position.y = this.fixCy();\n\n                this.scene.add(mesh);\n                this.addDestroy(mesh);\n                this.line.push(mesh);\n\n                geometryx = new THREE.RingGeometry(this.inRadius, this.outRadius, 256, 1, geometry.radians(0), geometry.radians(-0.1));\n                material = new THREE.MeshBasicMaterial({ color: color, side: THREE.DoubleSide });\n                arc = new THREE.Mesh(geometryx, material);\n                arc.renderOrder = 1;\n\n                arc.position.y = this.fixCy();\n\n                this.scene.add(arc);\n                this.addDestroy(arc);\n\n                tmp = {\n                    arc: arc,\n                    pathData: [],\n                    itemData: val,\n                    line: mesh,\n                    mline: line,\n                    realIndex: ii\n                };\n\n                this.path.push(tmp);\n            };\n\n            return this;\n        }\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {\n            var _this4 = this;\n\n            if (this.lineLengthCount >= this.lineLength) {\n                return;\n            }\n            this.lineLengthCount = this.lineLength;\n\n            this.lineLengthCount += this.lineLengthStep;\n\n            if (this.lineLengthCount >= this.lineLength || !this.isAnimation()) {\n                this.lineLengthCount = this.lineLength;\n            }\n            for (var i = 0; i < this.path.length; i++) {\n                var path = this.path[i];\n                var layer = this.arcLayer;\n\n                var lineEnd = path.itemData.lineEnd;\n                var lineExpend = path.itemData.lineExpend;\n\n                var line = this.line[i];\n\n                var meshline = new _three5.MeshLine();\n                var geometryx = new THREE.Geometry();\n                geometryx.vertices.push(new THREE.Vector3(path.itemData.lineStart.x, path.itemData.lineStart.y, 0), new THREE.Vector3(lineEnd.x, lineEnd.y, 0), new THREE.Vector3(lineExpend.x, lineExpend.y, 0));\n                meshline.setGeometry(geometryx);\n                line.geometry = meshline.geometry;\n\n                if (this.lineLengthCount >= this.lineLength) {\n                    this.addIcon(path, layer, path.realIndex);\n                    this.addText(path, layer, path.realIndex);\n                } else {\n                    window.requestAnimationFrame(function () {\n                        _this4.animationLine();\n                    });\n                }\n            }\n        }\n    }, {\n        key: 'addIcon',\n        value: function addIcon(path, layer, key) {\n            if (!path.lineicon) {\n                var geometry = new THREE.CircleGeometry(3, 32);\n                var material = new THREE.MeshBasicMaterial({ color: 0xffffff });\n                var circle = new THREE.Mesh(geometry, material);\n                path.lineicon = circle;\n                this.scene.add(circle);\n                this.addDestroy(circle);\n            }\n\n            path.lineicon.position.x = path.itemData.lineExpend.x;\n            path.lineicon.position.y = path.itemData.lineExpend.y + this.fixCy();\n        }\n    }, {\n        key: 'addText',\n        value: function addText(path, layer, key) {\n            if (!path.text) {\n                path.text = this.textar[key];\n                this.scene.add(path.text);\n                this.addDestroy(path.text);\n            }\n\n            var text = path.text;\n\n            var textPoint = path.itemData.textPoint,\n                angleDirect = path.itemData.pointDirection.autoAngle();\n\n            textPoint = _jsonUtilsx2.default.clone(path.itemData.lineEnd);\n\n            var textX = textPoint.x,\n                textY = textPoint.y + this.fixCy(),\n                direct = path.itemData.pointDirection.auto();\n            text.position.x = textX;\n            text.position.y = textY;\n\n            var position = new THREE.Vector3();\n            position.setFromMatrixPosition(text.matrixWorld);\n\n            text.position.y = textY + text.scale.y / 2 - geometry3d.to3d(3);\n\n            switch (angleDirect) {\n                case 8:\n                case 1:\n                    {\n                        text.position.x = textX - text.scale.x / 2 + 2;\n                        break;\n                    }\n                default:\n                    {\n                        text.position.x = textX + text.scale.x / 2 - 2;\n                        break;\n                    }\n            }\n        }\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {\n            this.inRadius = geometry3d.to3d(Math.ceil(this.inPercent * this.min / 2));\n            this.outRadius = geometry3d.to3d(Math.ceil(this.outPercent * this.min / 2));\n\n            this.lineHeight = geometry3d.to3d(24);\n            this.lineWidth = geometry3d.to3d(50);\n            this.lineLength = geometry3d.to3d(22);\n\n            return this;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            this.clearItems();\n            _get(Dount.prototype.__proto__ || Object.getPrototypeOf(Dount.prototype), 'destroy', this).call(this);\n        }\n    }, {\n        key: 'clearItems',\n        value: function clearItems() {\n            var _this5 = this;\n\n            this.clearList.map(function (item, key) {\n                _this5.dispose(item);\n            });\n            this.clearList = [];\n        }\n    }, {\n        key: 'initText',\n        value: function initText() {\n            var _this6 = this;\n\n            this.textar = [];\n\n            this.realLineWidth = this.lineWidth;\n\n            this.data.data.map(function (val, key) {\n                var fontSize = geometry3d.to3d(25);\n                var sprite = _this6.createText(fontSize, { color: _this6.lineColor }, {\n                    //text: `${val.percent}%`,\n                    text: _this6.getLabel(val),\n                    fontFamily: 'MicrosoftYaHei',\n                    //fontSize: fontSize * 2,\n                    fontSize: fontSize * 2,\n                    fontStyle: 'italic'\n                }, function (sprite) {\n                    sprite.position.x = -10000;\n                });\n                _this6.clearList.push(sprite);\n                _this6.textar.push(sprite);\n            });\n        }\n    }, {\n        key: 'calcVal',\n        value: function calcVal() {\n            var _this7 = this;\n\n            if (!this.data) return;\n\n            var total = 0,\n                tmp = 0;\n\n            this.data.data.map(function (val) {\n                //console.log( val );\n                total += val.value;\n            });\n            this.total = total;\n\n            this.data.data.map(function (val) {\n                val._percent = val.value / total;\n\n                var precision = _this7.getPrecision(val) * 10;\n                val.percent = Math.round(Math.floor(val._percent * 100 * precision) / 10) / _this7.getPrecision(val);\n\n                val._percent = val.percent / 100;\n                tmp = tmp + val._percent;\n                val._totalPercent = tmp;\n\n                val.endAngle = _this7.totalAngle * val._totalPercent;\n            });\n\n            //修正浮点数精确度\n            if (this.data.data.length) {\n                var val = this.data.data[this.data.data.length - 1];\n                val._totalPercent = 1;\n                val._percent = 1 - (tmp - val._percent);\n\n                var precision = this.getPrecision(val) * 10;\n                val.percent = Math.round(Math.floor(val._percent * 100 * precision) / 10) / this.getPrecision(val);\n                val.endAngle = this.totalAngle;\n            }\n        }\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {\n            var _this8 = this;\n\n            if (!this.data) return;\n\n            this.lineRange = {\n                \"1\": [],\n                \"2\": [],\n                \"4\": [],\n                \"8\": []\n                //计算开始角度, 计算指示线的2端\n            };this.data.data.map(function (val, key) {\n                if (!key) {\n                    val.startAngle = 0;\n                } else {\n                    val.startAngle = _this8.data.data[key - 1].endAngle;\n                }\n\n                //this.lineWidth = geometry3d.to3d( 80 );\n\n                var text = _this8.textar[key];\n                var textWidth = _this8.lineWidth;\n\n                if (text.scale.x >= textWidth) {\n                    textWidth = text.scale.x;\n                }\n\n                val.midAngle = val.startAngle + (val.endAngle - val.startAngle) / 2;\n\n                val.lineStart = geometry.distanceAngleToPoint(_this8.outRadius - 2, val.midAngle);\n                val.lineEnd = geometry.distanceAngleToPoint(_this8.outRadius + _this8.lineLength, val.midAngle);\n\n                val.textPoint = geometry.distanceAngleToPoint(_this8.outRadius + _this8.lineLength, val.midAngle);\n\n                val.pointDirection = new _pointat2.default(_this8.fixWidth(), _this8.fixHeight(), geometry.pointPlus(val.textPoint, _this8.cpoint));\n                var lineAngle = val.pointDirection.autoAngle();\n                val.lineExpend = _jsonUtilsx2.default.clone(val.lineEnd);\n\n                //console.log( 'lineAngle', lineAngle,  val.midAngle );\n\n                switch (lineAngle) {\n                    case 1:\n                    case 8:\n                        {\n                            //val.lineEnd.x = this.lineLeft;\n                            val.lineEnd.x = -(_this8.outRadius + _this8.lineSpace);\n\n                            var tmp = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (tmp > _this8.lineCurveLength) {\n                                var tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    tmpPoint = geometry.distanceAngleToPoint(_this8.lineCurveLength, tmpAngle);\n                                tmpPoint = geometry.pointPlus(tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x - textWidth;\n\n                            break;\n                        }\n                    default:\n                        {\n                            val.lineEnd.x = _this8.outRadius + _this8.lineSpace;\n                            var _tmp = geometry.pointDistance(val.lineStart, val.lineEnd);\n                            if (_tmp > _this8.lineCurveLength) {\n                                var _tmpAngle = geometry.pointAngle(val.lineStart, val.lineEnd),\n                                    _tmpPoint = geometry.distanceAngleToPoint(_this8.lineCurveLength, _tmpAngle);\n                                _tmpPoint = geometry.pointPlus(_tmpPoint, val.lineStart);\n\n                                val.lineEnd.x = _tmpPoint.x;\n                            }\n\n                            val.lineExpend.x = val.lineEnd.x + textWidth;\n                            break;\n                        }\n                }\n\n                _this8.lineRange[lineAngle].push(val);\n            });\n\n            this.loopSort.map(function (key) {\n                var item = _this8.lineRange[key];\n                if (!(item && item.length && item.length > 1)) return;\n                var needFix = void 0;\n                for (var i = 1; i < item.length; i++) {\n                    var pre = item[i - 1],\n                        cur = item[i];\n                    if (Math.abs(cur.lineEnd.y - pre.lineEnd.y) < _this8.lineHeight) {\n                        needFix = 1;\n                        break;\n                    }\n                }\n                switch (key) {\n                    case 4:\n                        {\n                            var tmpY = 0;\n                            for (var _i = item.length - 2; _i >= 0; _i--) {\n                                var _pre = item[_i + 1],\n                                    _cur = item[_i];\n                                if (Math.abs(_pre.lineEnd.y - _cur.lineEnd.y) < _this8.lineHeight || _cur.lineEnd.y <= _pre.lineEnd.y) {\n                                    tmpY = _pre.lineEnd.y + _this8.lineHeight;\n                                    _cur.lineEnd.y = tmpY;\n                                    _cur.lineExpend.y = tmpY;\n                                }\n                            }\n                            break;\n                        }\n\n                    case 1:\n                        {\n                            var _tmpY = item[0].lineEnd.y;\n                            for (var _i2 = item.length - 2; _i2 >= 0; _i2--) {\n                                var _pre2 = item[_i2 + 1],\n                                    _cur2 = item[_i2];\n                                if (Math.abs(_pre2.lineEnd.y - _cur2.lineEnd.y) < _this8.lineHeight || _cur2.lineEnd.y >= _pre2.lineEnd.y) {\n                                    _tmpY = _pre2.lineEnd.y - _this8.lineHeight;\n                                    _cur2.lineEnd.y = _tmpY;\n                                    _cur2.lineExpend.y = _tmpY;\n                                }\n                            }\n                            break;\n                        }\n                    case 2:\n                        {\n                            var _tmpY2 = item[0].lineEnd.y;\n                            for (var _i3 = 1; _i3 < item.length; _i3++) {\n                                var _pre3 = item[_i3 - 1],\n                                    _cur3 = item[_i3],\n                                    zero = item[0];\n\n                                if (Math.abs(_pre3.lineEnd.y + _this8.fixCy()) < _this8.lineHeight) {\n                                    _pre3.lineExpend.y = _pre3.lineEnd.y = _pre3.lineExpend.y + _this8.lineHeight;\n                                }\n                                if (Math.abs(_pre3.lineEnd.y - _cur3.lineEnd.y) < _this8.lineHeight || _cur3.lineEnd.y >= _pre3.lineEnd.y) {\n\n                                    _tmpY2 = _pre3.lineEnd.y - _this8.lineHeight;\n                                    _cur3.lineEnd.y = _tmpY2;\n                                    _cur3.lineExpend.y = _tmpY2;\n                                }\n                            }\n\n                            break;\n                        }\n\n                    case 8:\n                        {\n                            var _tmpY3 = 0;\n                            for (var _i4 = 1; _i4 < item.length; _i4++) {\n                                var _pre4 = item[_i4 - 1],\n                                    _cur4 = item[_i4];\n                                if (Math.abs(_pre4.lineEnd.y - _cur4.lineEnd.y) < _this8.lineHeight || _cur4.lineEnd.y <= _pre4.lineEnd.y) {\n                                    _tmpY3 = _pre4.lineEnd.y + _this8.lineHeight;\n                                    _cur4.lineEnd.y = _tmpY3;\n                                    _cur4.lineExpend.y = _cur4.lineEnd.y;\n                                }\n                            }\n\n                            break;\n                        }\n                }\n            });\n        }\n    }]);\n\n    return Dount;\n}(_base2.default);\n\nexports.default = Dount;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _pointat = require('../common/pointat.js');\n\nvar _pointat2 = _interopRequireDefault(_pointat);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nvar _roundstatetext = require('../icon/roundstatetext.js');\n\nvar _roundstatetext2 = _interopRequireDefault(_roundstatetext);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar Gauge = function (_VisChartBase) {\n    _inherits(Gauge, _VisChartBase);\n\n    function Gauge(box, width, height, camera) {\n        _classCallCheck(this, Gauge);\n\n        var _this = _possibleConstructorReturn(this, (Gauge.__proto__ || Object.getPrototypeOf(Gauge)).call(this, box, width, height, camera));\n\n        _this.cx = 0;\n        _this.cy = 0;\n        _this.cpoint = { x: 0, y: 0 };\n\n        _this.name = 'Gauge' + Date.now();\n\n        _this.clearTextList = [];\n        return _this;\n    }\n\n    _createClass(Gauge, [{\n        key: '_setSize',\n        value: function _setSize(width, height) {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), '_setSize', this).call(this, width, height);\n\n            this.totalPostfix = '次/时';\n\n            this.offsetCy = 35;\n\n            this.curRate = 0;\n            this.totalNum = 0;\n            this.totalNumStep = 5;\n\n            this.animationStep = 30 * 1;\n\n            this.roundRadiusPercent = .070;\n\n            this.lineColor = 0x596ea7;\n\n            this.circleLinePercent = .22;\n            this.circlePercent = .24;\n\n            this.circleLineRotation = 0;\n            this.circleLineRotationStep = 4;\n\n            this.arcLinePercent = .34 / 2;\n\n            this.arcOutPercent = .33 / 2;\n            this.arcInPercent = .255 / 2;\n\n            this.arcLabelLength = 6;\n            this.arcTextLength = 15;\n\n            this.arcAngleOffset = -50;\n            this.arcAngle = 280;\n            this.part = 22;\n            this.arcTotal = 1100;\n\n            this.textOffset = 0;\n\n            this.arcOffset = this.arcAngleOffset;\n            this.arcOffsetPad = -5;\n            this.partLabel = this.part / 2;\n            this.partAngle = this.arcAngle / this.part;\n            this.partNum = this.arcTotal / this.part;\n\n            this.startAngle = this.arcAngle + this.arcAngleOffset + this.arcOffsetPad;\n\n            this.textOffsetX = -1;\n            this.textOffsetY = -8;\n            this.textLineLength = 6;\n\n            this.textRectWidthPercent = .5;\n            this.textRectHeightPercent = .11;\n\n            this.textRoundPercent = .33;\n            this.textRoundOffsetAngle = 160;\n            this.textRoundPlusAngle = 110;\n            this.textRoundMaxAngle = this.textRoundOffsetAngle + this.textRoundPlusAngle * 2;\n            this.roundStatusRaidus = 30;\n            this.textRoundAngle = [{\n                angle: this.textRoundOffsetAngle,\n                text: '低',\n                point: {},\n                min: 0,\n                max: 100,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle,\n                text: '中',\n                point: {},\n                min: 101,\n                max: 500,\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }, {\n                angle: this.textRoundOffsetAngle + this.textRoundPlusAngle * 2,\n                text: '高',\n                point: {},\n                min: 501,\n                max: Math.pow(10, 10),\n                radius: this.roundStatusRaidus,\n                lineColor: this.lineColor\n            }];\n\n            this.init();\n        }\n    }, {\n        key: 'getAttackRateAngle',\n        value: function getAttackRateAngle() {\n            var r = 0;\n\n            r = this.arcOffset + this.arcAngle * this.getAttackRatePercent();\n\n            return r;\n        }\n    }, {\n        key: 'getAttackRatePercent',\n        value: function getAttackRatePercent() {\n            var r = 0,\n                tmp = void 0;\n            if (this.curRate) {\n                tmp = this.curRate;\n                if (tmp > this.arcTotal) {\n                    tmp = this.arcTotal;\n                }\n\n                r = tmp / this.arcTotal;\n            }\n            return r;\n        }\n    }, {\n        key: 'getAttackText',\n        value: function getAttackText() {\n            var _this2 = this;\n\n            var text = '低';\n\n            if (this.curRate) {\n                this.textRoundAngle.map(function (val) {\n                    if (_this2.curRate >= val.min && _this2.curRate <= val.max) {\n                        text = val.text;\n                    }\n                });\n            }\n\n            return text + '\\u9891\\n\\u653B\\u51FB';\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            var _this3 = this;\n\n            this.textRoundRadius = this.width * this.textRoundPercent * this.sizeRate;\n\n            this.roundRadius = this.width * this.roundRadiusPercent * this.sizeRate;\n\n            this.arcInRadius = geometry3d.to3d(this.width * this.arcInPercent * this.sizeRate);\n            this.arcOutRadius = geometry3d.to3d(this.width * this.arcOutPercent * this.sizeRate);\n\n            this.arcLineRaidus = geometry3d.to3d(Math.ceil(this.arcLinePercent * this.max) * this.sizeRate);\n            this.arcTextLength = geometry3d.to3d(this.arcTextLength);\n\n            this.textWidth = this.textRectWidthPercent * this.width;\n            this.textHeight = 38 * this.sizeRate;\n            this.textX = this.cx - this.textWidth / 2;\n            this.textY = this.cy + this.arcLineRaidus + this.arcTextLength / 2 + 2;\n\n            this.textRoundAngle.map(function (val, key) {\n                var point = geometry.distanceAngleToPoint(geometry3d.to3d(_this3.textRoundRadius), -val.angle);\n                val.point = point;\n            });\n\n            this.arcPartLineAr = [];\n            this.arcOutlinePartAr = [];\n            this.textAr = [];\n\n            for (var i = 0; i <= this.part; i++) {\n                var start = void 0,\n                    end = void 0,\n                    angle = void 0;\n                angle = (this.part - i) * this.partAngle + this.arcOffset;\n\n                if (true) {\n                    start = geometry.distanceAngleToPoint(this.arcInRadius, angle);\n                    end = geometry.distanceAngleToPoint(this.arcOutRadius, angle);\n                    this.arcPartLineAr.push({ start: start, end: end });\n                }\n\n                start = geometry.distanceAngleToPoint(this.arcLineRaidus, angle);\n                end = geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcLabelLength, angle);\n\n                this.arcOutlinePartAr.push({ start: start, end: end });\n\n                if (!(i * this.partNum % 100) || i === 0) {\n                    var angleOffset = 8,\n                        lengthOffset = 0,\n                        rotationOffset = 0;\n\n                    if (i === 0) {\n                        angleOffset = 1;\n                    }\n                    if (i) {\n                        angleOffset = 0;\n                    }\n\n                    if (i >= 19) {\n                        //angleOffset = 14;\n                        rotationOffset = -2;\n                        angleOffset = -2;\n                    }\n                    if (i >= 21) {\n                        //angleOffset = 18;\n                        angleOffset = -5;\n                    }\n                    var text = {\n                        text: i * this.partNum,\n                        angle: angle - angleOffset,\n                        point: geometry.distanceAngleToPoint(this.arcLineRaidus + this.arcTextLength + lengthOffset, angle - angleOffset),\n                        rotationOffset: rotationOffset\n                    };\n                    text.textPoint = new _pointat2.default(this.width, this.height, geometry.pointPlus(text.point, this.cpoint));\n\n                    this.textAr.push(text);\n                }\n            }\n        }\n    }, {\n        key: 'initRoundText',\n        value: function initRoundText() {\n            var _this4 = this;\n\n            this.textRoundAngle.map(function (val) {\n\n                if (!val.ins) {\n                    val.ins = new _roundstatetext2.default(_this4.box, _this4.width, _this4.height, _this4.camera);\n                    val.ins.setOptions(Object.assign(val, {\n                        stage: _this4.stage,\n                        scene: _this4.scene,\n                        data: _this4.data,\n                        allData: _this4.allData,\n                        lineColor: _this4.lineColor\n                    }));\n                    val.ins.init();\n                }\n                val.ins.update(_this4.curRate);\n            });\n        }\n        /*\n        {\n        \"series\": [\n            {\n                \"type\": \"gauge\",\n                \"data\": [\n                    {\n                        \"value\": 200,\n                        \"total\": 134567,\n                        \"name\": \"完成率\"\n                    }\n                ]\n            }\n        ]\n        }\n        */\n\n    }, {\n        key: 'setOptions',\n        value: function setOptions(json) {\n            if (json.stage) {\n                var group = new THREE.Group();\n                json.stage.add(group);\n                this.addDestroy(group);\n\n                json.stage = group;\n\n                json.stage.position.y += -geometry3d.to3d(20);\n            }\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'setOptions', this).call(this, json);\n        }\n    }, {\n        key: 'clearText',\n        value: function clearText() {\n            var _this5 = this;\n\n            //console.log( 'clearText', this.clearTextList );\n\n            this.clearTextList.map(function (item, key) {\n                _this5.dispose(item);\n            });\n\n            this.clearTextList = [];\n        }\n    }, {\n        key: 'update',\n        value: function update(data, allData) {\n            var _this6 = this;\n\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'update', this).call(this, data, allData);\n\n            this.clearText();\n\n            if (data && data.data && data.data.length) {\n                data.data.map(function (val) {\n                    _this6.curRate = val.value;\n                    _this6.totalNum = val.total;\n                });\n            } else {\n                this.curRate = 0;\n                this.totalNum = 0;\n            }\n\n            this.initDataLayout();\n\n            this.angle = this.arcOffset + this.arcOffsetPad;\n            this.animationAngle = this.getAttackRateAngle() + this.arcOffsetPad;\n\n            this.updateArrow();\n\n            if (this.curRate) {\n                this.rateStep = Math.floor(this.curRate / (this.animationStep * 2));\n                this.angleStep = Math.abs(this.animationAngle) / this.animationStep;\n            }\n\n            !this.isRunAnimation && this.animation();\n\n            if (parseInt(this.totalNum)) {\n                this.totalNumStep = Math.floor(this.totalNum / this.animationStep);\n                this.totalNumStep < 1 && (this.totalNumStep = 1);\n                this.totalNumCount = 0;\n                this.animationText();\n            } else {}\n\n            !this.inited && this.animationCircleLine();\n\n            this.inited = 1;\n        }\n    }, {\n        key: 'resize',\n        value: function resize(width, height) {\n            var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n            var allData = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : null;\n\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'resize', this).call(this, width, height, data, allData);\n        }\n    }, {\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this7 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLine.rotation.z -= .03;\n\n            window.requestAnimationFrame(function () {\n                _this7.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'animationText',\n        value: function animationText() {\n            var _this8 = this;\n\n            if (this.isDestroy) return;\n\n            if (this.totalNumCount >= this.totalNum) {\n                return;\n            }\n            this.totalNumCount += this.totalNumStep;\n\n            if (this.totalNumCount >= this.totalNum || !this.isAnimation()) {\n                this.totalNumCount = this.totalNum;\n            };\n\n            this.totalTextTexture.text = this.totalNumCount + '';\n            this.totalTextTexture.redraw();\n\n            window.requestAnimationFrame(function () {\n                _this8.animationText();\n            });\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            var _this9 = this;\n\n            if (this.totalTextGroup) {\n                this.dispose(this.totalTextGroup);\n            }\n\n            this.totalTextGroup = new THREE.Group();\n            this.stage.add(this.totalTextGroup);\n            this.addDestroy(this.totalTextGroup);\n\n            var fontSize = geometry3d.to3d(36);\n            var fontSize1 = geometry3d.to3d(36);\n            var labelFontSize = geometry3d.to3d(22);\n            var params = {\n                text: 0 + '',\n                fontFamily: '\"Agency FB\",MicrosoftYaHei',\n                fontSize: fontSize * 2,\n                fontStyle: 'italic',\n                letterSpacing: 1.5\n                //, fontWeight: 'bold'\n            },\n                colorParams = {\n                color: this.textColor\n            },\n                tmpParams = _jsonUtilsx2.default.clone(params),\n                labelParams = _jsonUtilsx2.default.clone(params);\n\n            params.text = this.totalNum + '';\n            tmpParams.text = this.totalNum + '';\n\n            labelParams = Object.assign(labelParams, {\n                fontSize: labelFontSize,\n                fontFamily: 'MicrosoftYaHei',\n                text: this.totalPostfix,\n                fontWeight: 'normal'\n            });\n\n            this.tmpTotalText = this.createText(fontSize, colorParams, tmpParams, function (sprite) {\n                sprite.position.x = Math.pow(10, 10);\n            }, this.totalTextGroup);\n            this.tmpTotalText.matrixWorldNeedsUpdate = true;\n\n            this.render();\n\n            this.totalTextPostfix = this.createText(labelFontSize, colorParams, labelParams, function (sprite) {\n                sprite.position.x = _this9.tmpTotalText.scale.x / 2 + sprite.scale.x / 2 - geometry3d.to3d(5);\n            }, this.totalTextGroup);\n\n            this.totalText = this.createText(fontSize, colorParams, params, function (sprite, material, texture) {\n                sprite.position.x = _this9.totalTextPostfix.position.x - _this9.totalTextPostfix.scale.x / 2 - sprite.scale.x / 2 + geometry3d.to3d(5);\n                texture.text = '0';\n                _this9.totalTextTexture = texture;\n            }, this.totalTextGroup);\n\n            this.totalTextGroup.position.y = -(this.arcOutRadius + geometry3d.to3d(25));\n            this.totalTextGroup.position.x = -(this.totalTextPostfix.scale.x / 2);\n        }\n    }, {\n        key: 'drawTextRect',\n        value: function drawTextRect() {\n            this.dispose(this.textReatGroupIns);\n\n            var textWidth = (this.totalTextPostfix.position.x + this.totalTextPostfix.scale.x / 2) * 2 + 5,\n                heightPad = 0,\n                rectHeight = geometry3d.to3d(28),\n                textX = 0,\n                textY = -(this.arcOutRadius + geometry3d.to3d(25));\n\n            if (textWidth < 170) {\n                textWidth = 170;\n            }\n\n            textWidth = geometry3d.to3d(textWidth);\n\n            var group = new THREE.Group();\n            group.transparent = true;\n\n            var bgGeometry = new THREE.PlaneGeometry(textWidth, rectHeight, 32, 32);\n            var bgMaterial = new THREE.MeshBasicMaterial({\n                color: this.parseColor(this.lineColor),\n                side: THREE.DoubleSide,\n                opacity: .2,\n                transparent: true\n            });\n            var bgPlane = new THREE.Mesh(bgGeometry, bgMaterial);\n\n            bgPlane.position.y = textY - Math.abs(this.getPosition(this.tmpTotalText.matrixWorld).y);\n\n            group.add(bgPlane);\n            this.addDestroy(bgPlane);\n\n            var partpoints = void 0,\n                geometryy = void 0,\n                line = void 0,\n                material = void 0,\n                part = void 0,\n                indices = void 0,\n                count = 0;\n            var vertices, positions, geometry, i;\n\n            partpoints = [], indices = [];\n\n            var height = this.getBoxSize(bgPlane).y;\n            var top = this.getPosition(bgPlane.matrixWorld).y + 2;\n            var arrowLength = geometry3d.to3d(6);\n\n            var points = [{\n                start: { x: -textWidth / 2 + arrowLength, y: top + arrowLength * 2 },\n                end: { x: -textWidth / 2, y: top + arrowLength * 2 }\n            }, {\n                start: { x: -textWidth / 2, y: top + arrowLength * 2 },\n                end: { x: -textWidth / 2, y: top + arrowLength * 1 }\n            }, {\n                start: { x: -textWidth / 2 + arrowLength, y: top - height + arrowLength * 2 },\n                end: { x: -textWidth / 2, y: top - height + arrowLength * 2 }\n            }, {\n                start: { x: -textWidth / 2, y: top - height + arrowLength * 2 },\n                end: { x: -textWidth / 2, y: top - height + arrowLength * 3 }\n            }, {\n                start: { x: textWidth / 2 - arrowLength, y: top + arrowLength * 2 },\n                end: { x: textWidth / 2, y: top + arrowLength + arrowLength * 1 }\n            }, {\n                start: { x: textWidth / 2, y: top + arrowLength * 2 },\n                end: { x: textWidth / 2, y: top + arrowLength }\n            }, {\n                start: { x: textWidth / 2 - arrowLength, y: top - height + arrowLength * 2 },\n                end: { x: textWidth / 2, y: top - height + arrowLength * 2 }\n            }, {\n                start: { x: textWidth / 2, y: top - height + arrowLength * 2 },\n                end: { x: textWidth / 2, y: top - height + arrowLength * 3 }\n            }];\n\n            points.map(function (item, key) {\n                partpoints.push(new THREE.Vector3(item.start.x, item.start.y, 1), new THREE.Vector3(item.end.x, item.end.y, 1));\n                indices.push(key);\n            });\n\n            material = new THREE.LineBasicMaterial({\n                color: this.lineColor\n            });\n\n            vertices = partpoints;\n            indices = [];\n            vertices.map(function (item, key) {\n                indices.push(key);\n            });\n\n            positions = new Float32Array(vertices.length * 3);\n\n            for (i = 0; i < vertices.length; i++) {\n                positions[i * 3] = vertices[i].x;\n                positions[i * 3 + 1] = vertices[i].y;\n                positions[i * 3 + 2] = vertices[i].z;\n            }\n\n            geometry = new THREE.BufferGeometry();\n            geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n            geometry.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n\n            line = new THREE.LineSegments(geometry, material);\n            group.add(line);\n            this.addDestroy(line);\n\n            this.textReatGroupIns = group;\n\n            this.scene.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'drawArcText',\n        value: function drawArcText() {\n            var _this10 = this;\n\n            if (!(this.textAr && this.textAr.length)) return;\n\n            this.textAr.map(function (val, key) {\n                var fontSize = geometry3d.to3d(16);\n                var text = _this10.createText(fontSize, {\n                    color: _this10.lineColor,\n                    rotation: geometry.radians(val.angle + 90 + (val.rotationOffset || 0) + 180)\n                }, {\n                    text: val.text + '',\n                    fontFamily: 'MicrosoftYaHei, \"Times New Roman\", Times, serif',\n                    fontSize: fontSize * 2\n                }, function (sprite) {\n                    sprite.position.x = val.point.x;\n                    sprite.position.y = val.point.y;\n\n                    _this10.clearTextList.push(sprite);\n                });\n            });\n        }\n    }, {\n        key: 'drawArcLine',\n        value: function drawArcLine() {\n\n            var line = new _three5.MeshLine(),\n                points,\n                geometryy,\n                material,\n                circle,\n                curve;\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.arcLineRaidus, this.arcLineRaidus, geometry.radians(this.arcAngleOffset), geometry.radians(this.arcAngle + this.arcAngleOffset), false, // aClockwise\n            0 // aRotation\n            );\n\n            points = curve.getPoints(200);\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n\n            circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawArcPartLine',\n        value: function drawArcPartLine() {\n\n            var partpoints = void 0,\n                geometryy = void 0,\n                line = void 0,\n                material = void 0,\n                part = void 0,\n                indices = void 0,\n                count = 0;\n            var vertices, positions, geometry, i;\n\n            partpoints = [], indices = [];\n\n            this.arcPartLineAr.map(function (item, key) {\n                partpoints.push(new THREE.Vector3(item.start.x, item.start.y, 1), new THREE.Vector3(item.end.x, item.end.y, 1));\n                indices.push(key);\n            });\n            this.arcOutlinePartAr.map(function (item, key) {\n                partpoints.push(new THREE.Vector3(item.start.x, item.start.y, 1), new THREE.Vector3(item.end.x, item.end.y, 1));\n                indices.push(key);\n            });\n\n            material = new THREE.LineBasicMaterial({\n                color: this.lineColor\n            });\n\n            vertices = partpoints;\n            indices = [];\n            vertices.map(function (item, key) {\n                indices.push(key);\n            });\n\n            positions = new Float32Array(vertices.length * 3);\n\n            for (i = 0; i < vertices.length; i++) {\n                positions[i * 3] = vertices[i].x;\n                positions[i * 3 + 1] = vertices[i].y;\n                positions[i * 3 + 2] = vertices[i].z;\n            }\n\n            geometry = new THREE.BufferGeometry();\n            geometry.addAttribute('position', new THREE.BufferAttribute(positions, 3));\n            geometry.setIndex(new THREE.BufferAttribute(new Uint16Array(indices), 1));\n\n            line = new THREE.LineSegments(geometry, material);\n            this.stage.add(line);\n            this.addDestroy(line);\n        }\n    }, {\n        key: 'drawArc',\n        value: function drawArc() {\n\n            var line = void 0,\n                material = void 0,\n                geometryx = void 0,\n                mesh = void 0,\n                arc = void 0,\n                tmp = void 0,\n                color = void 0;\n\n            color = 0xffffff;\n\n            geometryx = new THREE.RingGeometry(this.arcInRadius, this.arcOutRadius, 256, 1, geometry.radians(this.arcAngleOffset), geometry.radians(this.arcAngle));\n\n            var texture = new THREE.Texture(this.generateGradientTexture());\n            texture.needsUpdate = true; // important!\n\n            material = new THREE.MeshBasicMaterial({ /*color: color,*/map: texture, side: THREE.DoubleSide, transparent: true });\n            arc = new THREE.Mesh(geometryx, material);\n\n            arc.position.y = this.fixCy();\n\n            this.stage.add(arc);\n            this.addDestroy(arc);\n        }\n    }, {\n        key: 'generateGradientTexture',\n        value: function generateGradientTexture() {\n\n            var size = geometry3d.resizeToBit(this.width * this.arcOutPercent * this.sizeRate * 2);\n\n            // create canvas\n            var canvas = document.createElement('canvas');\n            canvas.width = size;\n            canvas.height = size;\n\n            // get context\n            var context = canvas.getContext('2d');\n\n            // draw gradient\n            context.rect(-size / 2, -size / 2, size + size / 2, size + size / 2);\n            var gradient = context.createLinearGradient(0, 0, size, size);\n            gradient.addColorStop(0, '#5a78ca');\n            gradient.addColorStop(0.4, '#64b185');\n            gradient.addColorStop(1, '#ff9000');\n            context.fillStyle = gradient;\n            context.fill();\n            return canvas;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n\n            this.drawArcText();\n            if (!this.inited) {\n                this.drawInnerText();\n                this.drawInnerCircle();\n                this.drawArc();\n                this.drawArcLine();\n                this.drawCircle();\n                this.drawCircleLine();\n                this.drawArcPartLine();\n                this.initRoundText();\n            }\n            this.drawText();\n            this.drawTextRect();\n            this.drawArrow();\n            this.updateArrow();\n        }\n    }, {\n        key: 'drawArrow',\n        value: function drawArrow() {\n\n            this.dispose(this.arrowIcon);\n            this.preAngle = 0;\n\n            var group = new THREE.Group();\n\n            var geo = void 0,\n                mat = void 0,\n                tri = void 0,\n                width = geometry3d.to3d(5),\n                top = geometry3d.to3d(14);\n\n            geo = new THREE.Geometry();\n            geo.vertices = [new THREE.Vector3(0, 0, 0), new THREE.Vector3(width, 0, 0), new THREE.Vector3(0, top, 0)];\n\n            geo.faces.push(new THREE.Face3(0, 1, 2));\n            geo.faces[0].color.setHex(0x973500);\n            geo.center();\n\n            mat = new THREE.MeshBasicMaterial({\n                color: 0x973500,\n                vertexColors: THREE.FaceColors\n                //, wireframe: true\n                //, wireframeLinewidth: 1\n            });\n            mat.depthTest = false;\n            tri = new THREE.Mesh(geo, mat);\n            tri.renderOrder = -3;\n            tri.position.x = width;\n            group.add(tri);\n            this.addDestroy(tri);\n\n            geo = new THREE.Geometry();\n            geo.vertices = [new THREE.Vector3(-width, 0, 0), new THREE.Vector3(0, 0, 0), new THREE.Vector3(0, top, 0)];\n\n            geo.faces.push(new THREE.Face3(0, 1, 2));\n            geo.faces[0].color.setHex(0xff5a00);\n            geo.center();\n\n            mat = new THREE.MeshBasicMaterial({\n                color: 0xff5a00,\n                vertexColors: THREE.FaceColors\n                //, wireframe: true\n                //, wireframeLinewidth: 1\n            });\n            mat.depthTest = false;\n            tri = new THREE.Mesh(geo, mat);\n            tri.renderOrder = -3;\n            group.add(tri);\n            this.addDestroy(tri);\n\n            this.arrowIcon = group;\n\n            group.renderOrder = -3;\n\n            this.stage.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'updateArrow',\n        value: function updateArrow() {\n            if (isNaN(this.angle)) {\n                this.angle = -55;\n            }\n            var angle = -(-180 + this.angle);\n\n            if (this.preAngle === this.angle) return;\n            this.preAngle = this.angle;\n\n            var point = geometry.distanceAngleToPoint(this.innerCircleRadius + geometry3d.to3d(6), angle);\n\n            this.arrowIcon.position.x = point.x;\n            this.arrowIcon.position.y = point.y;\n\n            this.arrowIcon.rotation.z = geometry.radians(angle - 90);\n        }\n    }, {\n        key: 'animation',\n        value: function animation() {\n            var _this11 = this;\n\n            if (this.isDestroy) {\n                this.isRunAnimation = false;\n                return;\n            }\n            if (this.angle > this.animationAngle) {\n                this.isRunAnimation = false;\n                return;\n            }\n            this.isRunAnimation = true;\n\n            this.angle += this.angleStep;\n\n            if (this.angle >= this.animationAngle || !this.isAnimation()) {\n                this.angle = this.animationAngle;\n            };\n\n            this.updateArrow();\n\n            window.requestAnimationFrame(function () {\n                _this11.animation();\n            });\n        }\n    }, {\n        key: 'drawInnerText',\n        value: function drawInnerText() {\n            if (!this.inited) {\n                var fontSize = geometry3d.to3d(46);\n                this.percentText = this.createText(fontSize, { color: 0xffffff }, {\n                    text: this.getAttackText(),\n                    fontFamily: 'HuXiaoBoKuHei, \"Times New Roman\", Times, serif',\n                    fontSize: fontSize * 2,\n                    fontStyle: 'italic'\n                });\n            }\n        }\n    }, {\n        key: 'drawInnerCircle',\n        value: function drawInnerCircle() {\n            this.innerCircleRadius = geometry3d.to3d(this.roundRadius);\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.innerCircleRadius, this.innerCircleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.innerCircleRadius, this.innerCircleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 3\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n            this.circleRadius = geometry3d.to3d(Math.ceil(this.circlePercent * this.max / 2) * this.sizeRate);\n\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, this.fixCy(), // ax, aY\n            this.circleRadius, this.circleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = geometry3d.to3d(Math.ceil(this.circleLinePercent * this.max / 2));\n\n            var material = void 0,\n                geometryItem = void 0,\n                circle = void 0,\n                group = void 0,\n                line = void 0;\n\n            group = new THREE.Group();\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(90), geometry.radians(90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n            this.addDestroy(circle);\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(0), geometry.radians(-90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            group.position.y = this.fixCy();\n\n            group.add(circle);\n            this.addDestroy(circle);\n\n            this.circleLine = group;\n\n            this.stage.add(group);\n            this.addDestroy(group);\n        }\n    }, {\n        key: 'fixCx',\n        value: function fixCx() {\n            return 0;\n        }\n    }, {\n        key: 'fixCy',\n        value: function fixCy() {\n            return 0;\n        }\n    }, {\n        key: 'destroy',\n        value: function destroy() {\n            _get(Gauge.prototype.__proto__ || Object.getPrototypeOf(Gauge.prototype), 'destroy', this).call(this);\n            this.textRoundAngle.map(function (val) {\n                if (val.ins) val.ins.destroy();\n            });\n        }\n    }]);\n\n    return Gauge;\n}(_base2.default);\n\nexports.default = Gauge;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _get = function get(object, property, receiver) { if (object === null) object = Function.prototype; var desc = Object.getOwnPropertyDescriptor(object, property); if (desc === undefined) { var parent = Object.getPrototypeOf(object); if (parent === null) { return undefined; } else { return get(parent, property, receiver); } } else if (\"value\" in desc) { return desc.value; } else { var getter = desc.get; if (getter === undefined) { return undefined; } return getter.call(receiver); } };\n\nvar _base = require('../common/base.js');\n\nvar _base2 = _interopRequireDefault(_base);\n\nvar _geometry = require('../../geometry/geometry.js');\n\nvar geometry = _interopRequireWildcard(_geometry);\n\nvar _geometry3d = require('../../geometry/geometry3d.js');\n\nvar geometry3d = _interopRequireWildcard(_geometry3d);\n\nvar _jsonUtilsx = require('json-utilsx');\n\nvar _jsonUtilsx2 = _interopRequireDefault(_jsonUtilsx);\n\nvar _utils = require('../../common/utils.js');\n\nvar utils = _interopRequireWildcard(_utils);\n\nvar _three = require('three.texttexture');\n\nvar _three2 = _interopRequireDefault(_three);\n\nvar _three3 = require('three.textsprite');\n\nvar _three4 = _interopRequireDefault(_three3);\n\nvar _three5 = require('three.meshline');\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar THREE = require('three');\n\nvar RoundStateText = function (_VisChartBase) {\n    _inherits(RoundStateText, _VisChartBase);\n\n    function RoundStateText(box, width, height, camera) {\n        _classCallCheck(this, RoundStateText);\n\n        var _this = _possibleConstructorReturn(this, (RoundStateText.__proto__ || Object.getPrototypeOf(RoundStateText)).call(this, box, width, height, camera));\n\n        _this.name = 'RoundStateText ' + Date.now();\n\n        _this.radius = 30;\n\n        _this.textOffsetX = -2;\n        _this.textOffsetY = -1;\n\n        _this.circleLineRotation = 0;\n        _this.circleLineRotationStep = 4;\n\n        _this.curColor = 0xdeaf5c;\n        return _this;\n    }\n\n    _createClass(RoundStateText, [{\n        key: 'animationCircleLine',\n        value: function animationCircleLine() {\n            var _this2 = this;\n\n            if (this.isDestroy) return;\n            if (!this.circleLine) return;\n\n            if (!this.isAnimation()) {\n                return;\n            }\n\n            this.circleLineRotation += this.circleLineRotationStep;\n\n            //this.circleLine.rotation( this.circleLineRotation );\n            this.circleLine.rotation.z -= .03;\n\n            window.requestAnimationFrame(function () {\n                _this2.animationCircleLine();\n            });\n        }\n    }, {\n        key: 'setOptions',\n        value: function setOptions(json) {\n            _get(RoundStateText.prototype.__proto__ || Object.getPrototypeOf(RoundStateText.prototype), 'setOptions', this).call(this, json);\n\n            this.stageBackup = this.stage;\n            this.stage = new THREE.Object3D();\n            this.stageBackup.add(this.stage);\n            this.addDestroy(this.stage);\n\n            this.stage.position.x = this.point.x;\n            this.stage.position.y = this.point.y;\n        }\n    }, {\n        key: 'init',\n        value: function init() {\n            //console.log( 'RoundStateText init', this );\n            this.circleRadius = geometry3d.to3d(this.radius - 5);\n            this.circleRadius *= this.sizeRate;\n\n            //this.lineColor = this.curColor;\n\n            this.initDataLayout();\n\n            //console.log( this.point.x, this.point.y );\n\n            this.animationCircleLine();\n\n            return this;\n        }\n    }, {\n        key: 'update',\n        value: function update(rate) {\n            this.rate = rate;\n\n            var color = this.lineColor;\n\n            if (rate >= this.min && rate < this.max) {\n                color = this.curColor;\n            }\n\n            this.text.material.color.set(color);\n            this.circle.material.uniforms.color.value.set(color);\n            this.linePartMaterial1.uniforms.color.value.set(color);\n            this.linePartMaterial2.uniforms.color.value.set(color);\n\n            return this;\n        }\n    }, {\n        key: 'initDataLayout',\n        value: function initDataLayout() {\n            this.drawText();\n            this.drawCircle();\n            this.drawCircleLine();\n        }\n    }, {\n        key: 'drawText',\n        value: function drawText() {\n            var fontSize = geometry3d.to3d(38);\n            var texture = new _three2.default({\n                text: this.text,\n                fontFamily: 'HuXiaoBoKuHei, \"Times New Roman\", Times, serif',\n                fontSize: fontSize * 2,\n                fill: this.lineColor,\n                fontStyle: 'italic'\n            });\n            var material = new THREE.SpriteMaterial({ map: texture, color: 0xffffff });\n            var sprite = new THREE.Sprite(material);\n            sprite.scale.setX(texture.imageAspect).multiplyScalar(fontSize);\n            this.text = sprite;\n\n            this.stage.add(this.text);\n            this.addDestroy(this.text);\n        }\n    }, {\n        key: 'drawCircle',\n        value: function drawCircle() {\n\n            var line = new _three5.MeshLine();\n\n            var curve = new THREE.EllipseCurve(0, 0, // ax, aY\n            this.circleRadius, this.circleRadius, 0, 2 * Math.PI, // aStartAngle, aEndAngle\n            false, // aClockwise\n            0 // aRotation\n            );\n\n            var points = curve.getPoints(200);\n            var geometryy = new THREE.Geometry().setFromPoints(points);\n\n            curve = new THREE.EllipseCurve(0, 0, // ax, aY\n            this.circleRadius, this.circleRadius, 0, geometry.radians(10), // aStartAngle, aEndAngle\n            false, // aClockwise\n            geometry.radians(.5) // aRotation\n            );\n\n            points = [].concat(_toConsumableArray(points), _toConsumableArray(curve.getPoints(50)));\n\n            geometryy = new THREE.Geometry().setFromPoints(points);\n\n            line.setGeometry(geometryy);\n            var material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 2\n            });\n\n            var circle = new THREE.Mesh(line.geometry, material);\n\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            this.circle = circle;\n            this.circleMaterial = material;\n\n            this.stage.add(circle);\n            this.addDestroy(circle);\n        }\n    }, {\n        key: 'drawCircleLine',\n        value: function drawCircleLine() {\n            this.circleLineRadius = geometry3d.to3d(this.radius - 1);\n            this.circleLineRadius *= this.sizeRate;\n\n            var material = void 0,\n                geometryItem = void 0,\n                circle = void 0,\n                group = void 0,\n                line = void 0;\n\n            group = new THREE.Group();\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(90), geometry.radians(90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n            group.add(circle);\n            this.addDestroy(circle);\n            this.linePartMaterial1 = material;\n\n            line = new _three5.MeshLine();\n            material = new _three5.MeshLineMaterial({\n                color: new THREE.Color(this.lineColor),\n                lineWidth: 1\n            });\n            geometryItem = new THREE.CircleGeometry(this.circleLineRadius, 128, geometry.radians(0), geometry.radians(-90));\n            geometryItem.vertices.shift();\n            line.setGeometry(geometryItem);\n            circle = new THREE.Line(line.geometry, material);\n            circle.renderOrder = -1;\n            circle.material.depthTest = false;\n\n            group.position.y = this.fixCy();\n\n            group.add(circle);\n            this.addDestroy(circle);\n\n            this.circleLine = group;\n\n            this.stage.add(group);\n            this.addDestroy(group);\n            this.linePartMaterial2 = material;\n        }\n    }, {\n        key: 'reset',\n        value: function reset() {}\n    }, {\n        key: 'calcDataPosition',\n        value: function calcDataPosition() {}\n    }, {\n        key: 'animationLine',\n        value: function animationLine() {}\n    }, {\n        key: 'calcLayoutPosition',\n        value: function calcLayoutPosition() {}\n    }]);\n\n    return RoundStateText;\n}(_base2.default);\n\nexports.default = RoundStateText;","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\nvar CHART_TYPE = exports.CHART_TYPE = {\n    dount: 'dount',\n    gauge: 'gauge'\n};","'use strict';\n\n// This THREEx helper makes it easy to handle the mouse events in your 3D scene\n//\n// * CHANGES NEEDED\n//   * handle drag/drop\n//   * notify events not object3D - like DOM\n//     * so single object with property\n//   * DONE bubling implement bubling/capturing\n//   * DONE implement event.stopPropagation()\n//   * DONE implement event.type = \"click\" and co\n//   * DONE implement event.target\n//\n// # Lets get started\n//\n// First you include it in your page\n//\n// ```<script src='threex.domevent.js'>< /script>```\n//\n// # use the object oriented api\n//\n// You bind an event like this\n// \n// ```mesh.on('click', function(object3d){ ... })```\n//\n// To unbind an event, just do\n//\n// ```mesh.off('click', function(object3d){ ... })```\n//\n// As an alternative, there is another naming closer DOM events.\n// Pick the one you like, they are doing the same thing\n//\n// ```mesh.addEventListener('click', function(object3d){ ... })```\n// ```mesh.removeEventListener('click', function(object3d){ ... })```\n//\n// # Supported Events\n//\n// Always in a effort to stay close to usual pratices, the events name are the same as in DOM.\n// The semantic is the same too.\n// Currently, the available events are\n// [click, dblclick, mouseup, mousedown](http://www.quirksmode.org/dom/events/click.html),\n// [mouseover and mouse out](http://www.quirksmode.org/dom/events/mouseover.html).\n//\n// # use the standalone api\n//\n// The object-oriented api modifies THREE.Object3D class.\n// It is a global class, so it may be legitimatly considered unclean by some people.\n// If this bother you, simply do ```THREEx.DomEvents.noConflict()``` and use the\n// standalone API. In fact, the object oriented API is just a thin wrapper\n// on top of the standalone API.\n//\n// First, you instanciate the object\n//\n// ```var domEvent = new THREEx.DomEvent();```\n// \n// Then you bind an event like this\n//\n// ```domEvent.bind(mesh, 'click', function(object3d){ object3d.scale.x *= 2; });```\n//\n// To unbind an event, just do\n//\n// ```domEvent.unbind(mesh, 'click', callback);```\n//\n// \n// # Code\n\n//\n\n/** @namespace */\nvar THREEx = THREEx || {};\n\n// # Constructor\nTHREEx.DomEvents = function (camera, domElement) {\n\tthis._camera = camera || null;\n\tthis._domElement = domElement || document;\n\tthis._raycaster = new THREE.Raycaster();\n\tthis._selected = null;\n\tthis._boundObjs = {};\n\t// Bind dom event for mouse and touch\n\tvar _this = this;\n\n\tthis._$onClick = function () {\n\t\t_this._onClick.apply(_this, arguments);\n\t};\n\tthis._$onDblClick = function () {\n\t\t_this._onDblClick.apply(_this, arguments);\n\t};\n\tthis._$onMouseMove = function () {\n\t\t_this._onMouseMove.apply(_this, arguments);\n\t};\n\tthis._$onMouseDown = function () {\n\t\t_this._onMouseDown.apply(_this, arguments);\n\t};\n\tthis._$onMouseUp = function () {\n\t\t_this._onMouseUp.apply(_this, arguments);\n\t};\n\tthis._$onTouchMove = function () {\n\t\t_this._onTouchMove.apply(_this, arguments);\n\t};\n\tthis._$onTouchStart = function () {\n\t\t_this._onTouchStart.apply(_this, arguments);\n\t};\n\tthis._$onTouchEnd = function () {\n\t\t_this._onTouchEnd.apply(_this, arguments);\n\t};\n\tthis._$onContextmenu = function () {\n\t\t_this._onContextmenu.apply(_this, arguments);\n\t};\n\tthis._domElement.addEventListener('click', this._$onClick, false);\n\tthis._domElement.addEventListener('dblclick', this._$onDblClick, false);\n\tthis._domElement.addEventListener('mousemove', this._$onMouseMove, false);\n\tthis._domElement.addEventListener('mousedown', this._$onMouseDown, false);\n\tthis._domElement.addEventListener('mouseup', this._$onMouseUp, false);\n\tthis._domElement.addEventListener('touchmove', this._$onTouchMove, false);\n\tthis._domElement.addEventListener('touchstart', this._$onTouchStart, false);\n\tthis._domElement.addEventListener('touchend', this._$onTouchEnd, false);\n\tthis._domElement.addEventListener('contextmenu', this._$onContextmenu, false);\n};\n\n// # Destructor\nTHREEx.DomEvents.prototype.destroy = function () {\n\t// unBind dom event for mouse and touch\n\tthis._domElement.removeEventListener('click', this._$onClick, false);\n\tthis._domElement.removeEventListener('dblclick', this._$onDblClick, false);\n\tthis._domElement.removeEventListener('mousemove', this._$onMouseMove, false);\n\tthis._domElement.removeEventListener('mousedown', this._$onMouseDown, false);\n\tthis._domElement.removeEventListener('mouseup', this._$onMouseUp, false);\n\tthis._domElement.removeEventListener('touchmove', this._$onTouchMove, false);\n\tthis._domElement.removeEventListener('touchstart', this._$onTouchStart, false);\n\tthis._domElement.removeEventListener('touchend', this._$onTouchEnd, false);\n\tthis._domElement.removeEventListener('contextmenu', this._$onContextmenu, false);\n};\n\nTHREEx.DomEvents.eventNames = [\"click\", \"dblclick\", \"mouseover\", \"mouseout\", \"mousemove\", \"mousedown\", \"mouseup\", \"contextmenu\", \"touchstart\", \"touchend\"];\n\nTHREEx.DomEvents.prototype._getRelativeMouseXY = function (domEvent) {\n\tvar element = domEvent.target || domEvent.srcElement;\n\tif (element.nodeType === 3) {\n\t\telement = element.parentNode; // Safari fix -- see http://www.quirksmode.org/js/events_properties.html\n\t}\n\n\t//get the real position of an element relative to the page starting point (0, 0)\n\t//credits go to brainjam on answering http://stackoverflow.com/questions/5755312/getting-mouse-position-relative-to-content-area-of-an-element\n\tvar elPosition = { x: 0, y: 0 };\n\tvar tmpElement = element;\n\t//store padding\n\tvar style = getComputedStyle(tmpElement, null);\n\telPosition.y += parseInt(style.getPropertyValue(\"padding-top\"), 10);\n\telPosition.x += parseInt(style.getPropertyValue(\"padding-left\"), 10);\n\t//add positions\n\tdo {\n\t\telPosition.x += tmpElement.offsetLeft;\n\t\telPosition.y += tmpElement.offsetTop;\n\t\tstyle = getComputedStyle(tmpElement, null);\n\n\t\telPosition.x += parseInt(style.getPropertyValue(\"border-left-width\"), 10);\n\t\telPosition.y += parseInt(style.getPropertyValue(\"border-top-width\"), 10);\n\t} while (tmpElement = tmpElement.offsetParent);\n\n\tvar elDimension = {\n\t\twidth: element === window ? window.innerWidth : element.offsetWidth,\n\t\theight: element === window ? window.innerHeight : element.offsetHeight\n\t};\n\n\treturn {\n\t\tx: +((domEvent.pageX - elPosition.x) / elDimension.width) * 2 - 1,\n\t\ty: -((domEvent.pageY - elPosition.y) / elDimension.height) * 2 + 1\n\t};\n};\n\n/********************************************************************************/\n/*\t\tdomevent context\t\t\t\t\t\t*/\n/********************************************************************************/\n\n// handle domevent context in object3d instance\n\nTHREEx.DomEvents.prototype._objectCtxInit = function (object3d) {\n\tobject3d._3xDomEvent = {};\n};\nTHREEx.DomEvents.prototype._objectCtxDeinit = function (object3d) {\n\tdelete object3d._3xDomEvent;\n};\nTHREEx.DomEvents.prototype._objectCtxIsInit = function (object3d) {\n\treturn object3d._3xDomEvent ? true : false;\n};\nTHREEx.DomEvents.prototype._objectCtxGet = function (object3d) {\n\treturn object3d._3xDomEvent;\n};\n\n/********************************************************************************/\n/*\t\t\t\t\t\t\t\t\t\t*/\n/********************************************************************************/\n\n/**\n * Getter/Setter for camera\n*/\nTHREEx.DomEvents.prototype.camera = function (value) {\n\tif (value) this._camera = value;\n\treturn this._camera;\n};\n\nTHREEx.DomEvents.prototype.bind = function (object3d, eventName, callback, useCapture) {\n\tconsole.assert(THREEx.DomEvents.eventNames.indexOf(eventName) !== -1, \"not available events:\" + eventName);\n\n\tif (!this._objectCtxIsInit(object3d)) this._objectCtxInit(object3d);\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tif (!objectCtx[eventName + 'Handlers']) objectCtx[eventName + 'Handlers'] = [];\n\n\tobjectCtx[eventName + 'Handlers'].push({\n\t\tcallback: callback,\n\t\tuseCapture: useCapture\n\t});\n\n\t// add this object in this._boundObjs\n\tif (this._boundObjs[eventName] === undefined) {\n\t\tthis._boundObjs[eventName] = [];\n\t}\n\tthis._boundObjs[eventName].push(object3d);\n};\nTHREEx.DomEvents.prototype.addEventListener = THREEx.DomEvents.prototype.bind;\n\nTHREEx.DomEvents.prototype.unbind = function (object3d, eventName, callback, useCapture) {\n\tconsole.assert(THREEx.DomEvents.eventNames.indexOf(eventName) !== -1, \"not available events:\" + eventName);\n\n\tif (!this._objectCtxIsInit(object3d)) this._objectCtxInit(object3d);\n\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tif (!objectCtx[eventName + 'Handlers']) objectCtx[eventName + 'Handlers'] = [];\n\n\tvar handlers = objectCtx[eventName + 'Handlers'];\n\tfor (var i = 0; i < handlers.length; i++) {\n\t\tvar handler = handlers[i];\n\t\tif (callback != handler.callback) continue;\n\t\tif (useCapture != handler.useCapture) continue;\n\t\thandlers.splice(i, 1);\n\t\tbreak;\n\t}\n\t// from this object from this._boundObjs\n\tvar index = this._boundObjs[eventName].indexOf(object3d);\n\tconsole.assert(index !== -1);\n\tthis._boundObjs[eventName].splice(index, 1);\n};\nTHREEx.DomEvents.prototype.removeEventListener = THREEx.DomEvents.prototype.unbind;\n\nTHREEx.DomEvents.prototype._bound = function (eventName, object3d) {\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tif (!objectCtx) return false;\n\treturn objectCtx[eventName + 'Handlers'] ? true : false;\n};\n\n/********************************************************************************/\n/*\t\tonMove\t\t\t\t\t\t\t\t*/\n/********************************************************************************/\n\n// # handle mousemove kind of events\n\nTHREEx.DomEvents.prototype._onMove = function (eventName, mouseX, mouseY, origDomEvent) {\n\t//console.log('eventName', eventName, 'boundObjs', this._boundObjs[eventName])\n\t// get objects bound to this event\n\tvar boundObjs = this._boundObjs[eventName];\n\tif (boundObjs === undefined || boundObjs.length === 0) return;\n\t// compute the intersection\n\tvar vector = new THREE.Vector2();\n\n\t// update the picking ray with the camera and mouse position\n\tvector.set(mouseX, mouseY);\n\tthis._raycaster.setFromCamera(vector, this._camera);\n\n\tvar intersects = this._raycaster.intersectObjects(boundObjs);\n\n\tvar oldSelected = this._selected;\n\n\tif (intersects.length > 0) {\n\t\tvar notifyOver, notifyOut, notifyMove;\n\t\tvar intersect = intersects[0];\n\t\tvar newSelected = intersect.object;\n\t\tthis._selected = newSelected;\n\t\t// if newSelected bound mousemove, notify it\n\t\tnotifyMove = this._bound('mousemove', newSelected);\n\n\t\tif (oldSelected != newSelected) {\n\t\t\t// if newSelected bound mouseenter, notify it\n\t\t\tnotifyOver = this._bound('mouseover', newSelected);\n\t\t\t// if there is a oldSelect and oldSelected bound mouseleave, notify it\n\t\t\tnotifyOut = oldSelected && this._bound('mouseout', oldSelected);\n\t\t}\n\t} else {\n\t\t// if there is a oldSelect and oldSelected bound mouseleave, notify it\n\t\tnotifyOut = oldSelected && this._bound('mouseout', oldSelected);\n\t\tthis._selected = null;\n\t}\n\n\t// notify mouseMove - done at the end with a copy of the list to allow callback to remove handlers\n\tnotifyMove && this._notify('mousemove', newSelected, origDomEvent, intersect);\n\t// notify mouseEnter - done at the end with a copy of the list to allow callback to remove handlers\n\tnotifyOver && this._notify('mouseover', newSelected, origDomEvent, intersect);\n\t// notify mouseLeave - done at the end with a copy of the list to allow callback to remove handlers\n\tnotifyOut && this._notify('mouseout', oldSelected, origDomEvent, intersect);\n};\n\n/********************************************************************************/\n/*\t\tonEvent\t\t\t\t\t\t\t\t*/\n/********************************************************************************/\n\n// # handle click kind of events\n\nTHREEx.DomEvents.prototype._onEvent = function (eventName, mouseX, mouseY, origDomEvent) {\n\t//console.log('eventName', eventName, 'boundObjs', this._boundObjs[eventName])\n\t// get objects bound to this event\n\tvar boundObjs = this._boundObjs[eventName];\n\tif (boundObjs === undefined || boundObjs.length === 0) return;\n\t// compute the intersection\n\tvar vector = new THREE.Vector2();\n\n\t// update the picking ray with the camera and mouse position\n\tvector.set(mouseX, mouseY);\n\tthis._raycaster.setFromCamera(vector, this._camera);\n\n\tvar intersects = this._raycaster.intersectObjects(boundObjs, true);\n\t// if there are no intersections, return now\n\tif (intersects.length === 0) return;\n\n\t// init some variables\n\tvar intersect = intersects[0];\n\tvar object3d = intersect.object;\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tvar objectParent = object3d.parent;\n\n\twhile (typeof objectCtx == 'undefined' && objectParent) {\n\t\tobjectCtx = this._objectCtxGet(objectParent);\n\t\tobjectParent = objectParent.parent;\n\t}\n\tif (!objectCtx) return;\n\n\t// notify handlers\n\tthis._notify(eventName, object3d, origDomEvent, intersect);\n};\n\nTHREEx.DomEvents.prototype._notify = function (eventName, object3d, origDomEvent, intersect) {\n\tvar objectCtx = this._objectCtxGet(object3d);\n\tvar handlers = objectCtx ? objectCtx[eventName + 'Handlers'] : null;\n\n\t// parameter check\n\tconsole.assert(arguments.length === 4);\n\n\t// do bubbling\n\tif (!objectCtx || !handlers || handlers.length === 0) {\n\t\tobject3d.parent && this._notify(eventName, object3d.parent, origDomEvent, intersect);\n\t\treturn;\n\t}\n\n\t// notify all handlers\n\tvar handlers = objectCtx[eventName + 'Handlers'];\n\tfor (var i = 0; i < handlers.length; i++) {\n\t\tvar handler = handlers[i];\n\t\tvar toPropagate = true;\n\t\thandler.callback({\n\t\t\ttype: eventName,\n\t\t\ttarget: object3d,\n\t\t\torigDomEvent: origDomEvent,\n\t\t\tintersect: intersect,\n\t\t\tstopPropagation: function stopPropagation() {\n\t\t\t\ttoPropagate = false;\n\t\t\t}\n\t\t});\n\t\tif (!toPropagate) continue;\n\t\t// do bubbling\n\t\tif (handler.useCapture === false) {\n\t\t\tobject3d.parent && this._notify(eventName, object3d.parent, origDomEvent, intersect);\n\t\t}\n\t}\n};\n\n/********************************************************************************/\n/*\t\thandle mouse events\t\t\t\t\t\t*/\n/********************************************************************************/\n// # handle mouse events\n\nTHREEx.DomEvents.prototype._onMouseDown = function (event) {\n\treturn this._onMouseEvent('mousedown', event);\n};\nTHREEx.DomEvents.prototype._onMouseUp = function (event) {\n\treturn this._onMouseEvent('mouseup', event);\n};\n\nTHREEx.DomEvents.prototype._onMouseEvent = function (eventName, domEvent) {\n\tvar mouseCoords = this._getRelativeMouseXY(domEvent);\n\tthis._onEvent(eventName, mouseCoords.x, mouseCoords.y, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onMouseMove = function (domEvent) {\n\tvar mouseCoords = this._getRelativeMouseXY(domEvent);\n\tthis._onMove('mousemove', mouseCoords.x, mouseCoords.y, domEvent);\n\tthis._onMove('mouseover', mouseCoords.x, mouseCoords.y, domEvent);\n\tthis._onMove('mouseout', mouseCoords.x, mouseCoords.y, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onClick = function (event) {\n\t// TODO handle touch ?\n\tthis._onMouseEvent('click', event);\n};\nTHREEx.DomEvents.prototype._onDblClick = function (event) {\n\t// TODO handle touch ?\n\tthis._onMouseEvent('dblclick', event);\n};\n\nTHREEx.DomEvents.prototype._onContextmenu = function (event) {\n\t//TODO don't have a clue about how this should work with touch..\n\tthis._onMouseEvent('contextmenu', event);\n};\n\n/********************************************************************************/\n/*\t\thandle touch events\t\t\t\t\t\t*/\n/********************************************************************************/\n// # handle touch events\n\n\nTHREEx.DomEvents.prototype._onTouchStart = function (event) {\n\treturn this._onTouchEvent('touchstart', event);\n};\nTHREEx.DomEvents.prototype._onTouchEnd = function (event) {\n\treturn this._onTouchEvent('touchend', event);\n};\n\nTHREEx.DomEvents.prototype._onTouchMove = function (domEvent) {\n\tif (domEvent.touches.length != 1) return undefined;\n\n\tdomEvent.preventDefault();\n\n\tvar mouseX = +(domEvent.touches[0].pageX / window.innerWidth) * 2 - 1;\n\tvar mouseY = -(domEvent.touches[0].pageY / window.innerHeight) * 2 + 1;\n\tthis._onMove('mousemove', mouseX, mouseY, domEvent);\n\tthis._onMove('mouseover', mouseX, mouseY, domEvent);\n\tthis._onMove('mouseout', mouseX, mouseY, domEvent);\n};\n\nTHREEx.DomEvents.prototype._onTouchEvent = function (eventName, domEvent) {\n\tif (domEvent.touches.length != 1) return undefined;\n\n\tdomEvent.preventDefault();\n\n\tvar mouseX = +(domEvent.touches[0].pageX / window.innerWidth) * 2 - 1;\n\tvar mouseY = -(domEvent.touches[0].pageY / window.innerHeight) * 2 + 1;\n\tthis._onEvent(eventName, mouseX, mouseY, domEvent);\n};\n\nmodule.exports = THREEx;","module.exports = \"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\" ?>\\r\\n<!DOCTYPE svg PUBLIC \\\"-//W3C//DTD SVG 1.1//EN\\\" \\\"http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd\\\">\\r\\n<svg width=\\\"198pt\\\" height=\\\"196pt\\\" viewBox=\\\"0 0 198 196\\\" version=\\\"1.1\\\" xmlns=\\\"http://www.w3.org/2000/svg\\\">\\r\\n<g id=\\\"#11162133\\\">\\r\\n<path fill=\\\"#111621\\\" opacity=\\\"0.20\\\" d=\\\" M 97.91 0.00 L 109.13 0.00 C 113.17 0.93 117.22 1.80 121.29 2.59 C 148.15 8.63 171.90 26.83 185.00 51.02 C 196.31 71.48 199.78 96.10 194.74 118.91 C 187.93 151.58 163.07 179.54 131.58 190.47 C 124.36 193.20 116.68 194.16 109.22 196.00 L 88.81 196.00 C 84.54 194.98 80.24 194.14 75.94 193.25 C 53.43 187.91 33.05 174.17 19.57 155.38 C 7.53 138.84 1.02 118.46 0.96 98.02 C 1.45 98.03 2.43 98.03 2.91 98.03 C 3.01 117.05 8.83 135.88 19.35 151.71 C 21.19 148.89 24.14 147.25 27.11 145.83 C 34.34 156.00 43.12 165.23 53.91 171.65 C 52.72 174.07 51.42 176.44 50.02 178.75 C 48.85 178.55 47.68 178.36 46.51 178.17 C 49.70 180.41 53.10 182.36 56.63 184.02 C 57.95 181.26 59.38 178.56 60.92 175.93 C 72.21 181.32 84.52 184.31 97.00 185.07 C 96.99 187.75 96.98 190.42 96.97 193.10 C 90.25 192.70 83.55 191.84 76.97 190.41 C 71.72 189.28 66.80 187.06 61.55 185.94 C 66.63 188.90 72.38 190.35 78.06 191.66 C 91.48 194.67 105.56 194.84 119.00 191.87 C 125.01 190.48 131.16 189.10 136.52 185.89 C 126.19 188.90 115.87 192.52 104.96 192.57 C 104.99 190.04 105.02 187.51 105.05 184.98 C 117.45 184.01 129.56 180.60 140.74 175.16 C 142.02 177.57 143.28 179.98 144.52 182.41 C 147.27 180.91 149.96 179.34 152.62 177.71 C 150.37 175.95 148.74 173.62 147.53 171.06 C 157.67 164.03 166.62 155.30 173.37 144.93 C 175.84 146.13 178.11 147.70 179.78 149.91 C 181.35 147.24 182.92 144.58 184.45 141.89 C 182.13 140.61 179.81 139.32 177.49 138.03 C 182.77 126.91 186.18 114.96 187.00 102.66 C 189.32 102.71 191.63 102.74 193.95 102.74 C 193.46 108.55 192.80 114.36 191.41 120.02 C 190.21 125.26 188.02 130.21 186.96 135.49 C 189.83 130.36 191.34 124.63 192.68 118.94 C 195.77 105.19 195.74 90.78 192.66 77.03 C 191.32 71.36 189.95 65.58 186.91 60.54 C 187.97 65.46 189.98 70.10 191.17 74.98 C 192.77 81.42 193.67 88.02 193.91 94.65 C 191.67 94.65 189.42 94.65 187.17 94.65 C 186.22 82.28 183.34 70.07 177.82 58.91 C 180.07 57.54 182.33 56.20 184.62 54.90 C 183.11 51.78 181.41 48.76 179.66 45.78 C 179.39 49.04 176.46 50.42 173.94 51.79 C 167.87 43.16 161.07 34.82 152.38 28.69 C 150.98 27.52 149.16 26.63 148.28 24.99 C 149.00 22.38 151.00 20.42 152.65 18.35 C 150.09 16.75 147.48 15.21 144.83 13.76 C 143.65 16.25 142.40 18.71 141.07 21.12 C 129.84 15.43 117.54 12.01 104.99 11.01 C 105.01 8.40 105.02 5.79 105.04 3.18 C 110.41 3.75 115.79 4.39 121.05 5.62 C 126.32 6.77 131.27 9.04 136.56 10.07 C 128.02 5.61 118.38 3.68 108.88 2.52 C 105.20 1.91 100.70 3.13 97.91 0.00 M 153.57 19.63 C 157.32 23.08 161.04 26.67 165.36 29.40 C 162.21 25.35 158.24 21.82 153.57 19.63 M 169.56 33.72 C 171.81 37.24 174.33 40.63 177.41 43.48 C 175.60 39.67 173.01 36.18 169.56 33.72 M 20.64 152.67 C 22.43 156.42 25.06 159.74 28.33 162.31 C 26.24 158.75 23.67 155.47 20.64 152.67 M 168.62 163.36 C 172.34 160.53 175.35 156.80 177.38 152.59 C 174.06 155.82 171.15 159.49 168.62 163.36 M 153.61 176.32 C 158.25 174.11 162.27 170.62 165.40 166.56 C 161.09 169.30 157.38 172.90 153.61 176.32 M 34.77 168.57 C 37.23 171.98 40.61 174.64 44.43 176.37 C 41.55 173.37 38.27 170.80 34.77 168.57 Z\\\" />\\r\\n<path fill=\\\"#111621\\\" opacity=\\\"0.20\\\" d=\\\" M 57.07 13.11 C 69.12 6.20 83.26 3.66 97.01 3.01 C 97.01 5.66 97.00 8.31 96.98 10.95 C 85.82 11.70 74.62 13.88 64.43 18.65 C 63.11 19.06 61.78 20.11 60.35 19.78 C 58.99 17.79 57.02 15.57 57.07 13.11 Z\\\" />\\r\\n<path fill=\\\"#111621\\\" opacity=\\\"0.20\\\" d=\\\" M 83.96 13.61 C 89.36 12.79 94.91 11.54 100.37 12.38 C 100.58 12.70 100.98 13.35 101.19 13.67 C 88.49 14.33 75.69 16.51 64.22 22.24 C 43.28 32.06 26.84 50.94 19.97 73.02 C 17.04 81.47 16.38 90.41 15.63 99.25 C 13.85 98.53 14.07 96.50 14.07 94.93 C 14.78 77.74 20.68 60.76 31.03 46.99 C 43.67 29.78 62.98 17.58 83.96 13.61 Z\\\" />\\r\\n<path fill=\\\"#111621\\\" opacity=\\\"0.20\\\" d=\\\" M 19.20 46.62 C 26.83 34.67 37.15 24.24 49.48 17.15 C 50.81 19.53 52.13 21.91 53.46 24.28 C 49.31 27.52 44.89 30.42 41.01 33.99 C 35.46 38.91 31.05 44.92 26.77 50.92 C 24.20 49.57 21.68 48.14 19.20 46.62 Z\\\" />\\r\\n<path fill=\\\"#111621\\\" opacity=\\\"0.20\\\" d=\\\" M 15.02 53.74 C 17.65 54.93 20.18 56.33 22.56 57.97 C 16.87 69.41 13.74 81.93 12.84 94.65 C 9.94 94.65 7.05 94.65 4.16 94.65 C 4.47 80.42 8.29 66.28 15.02 53.74 Z\\\" />\\r\\n<path fill=\\\"#111621\\\" opacity=\\\"0.20\\\" d=\\\" M 4.04 102.85 C 7.03 102.57 10.04 102.52 13.04 102.78 C 13.83 115.35 17.39 127.60 23.00 138.86 C 20.54 140.45 17.96 141.85 15.31 143.10 C 8.70 130.69 4.96 116.87 4.04 102.85 Z\\\" />\\r\\n</g>\\r\\n</svg>\\r\\n\"","\n\nimport Vis3Chart from 'vis3chart';\n\nimport fontfaceobserver from 'fontfaceobserver';\n\nimport * as common from './common.js';\n\nimport svgRateOut from './data-3d/svg/rate-out.txt';\n\nimport * as dat from 'dat.gui';\n\nlet background = [\n    { \n        //\"url\": \"./img/rate-out.png\"\n        \"url\": svgRateOut\n        , \"issvgstring\": true\n        , \"width\": 106\n        , \"height\": 106\n        , \"offsetX\": 0\n        , \"offsetY\": 1\n        , \"rotation\": 1\n        , \"rotationAttr\": 'z'\n        , \"scaleOffset\": .15\n    }\n];\n\n//console.log( background );\n\nlet font = new fontfaceobserver( 'HuXiaoBoKuHei' );\nfont.load().then(function () {\n\n    let config = {\n        scene: {\n            position: { x: 0, y: 0, z: 0 }\n        }\n        , camera: {\n            position: { x: 0, y: 0, z: 0 }\n        }\n    }\n\n    let gui = new dat.GUI();\n    let scene = gui.addFolder( 'scene position' );\n        scene.add( config.scene.position, 'x' );\n        scene.add( config.scene.position, 'y' );\n        scene.add( config.scene.position, 'z' );\n\n    let camera = gui.addFolder( 'camera position' );\n        camera.add( config.camera.position, 'x' );\n        camera.add( config.camera.position, 'y' );\n        camera.add( config.camera.position, 'z' );\n\n\n    let data = require( './data/gauge0.json' );\n    //let data = require( './data/gauge.json' );\n    //let data = require( './data/gauge1100.json' );\n    //let data = require( './data/gauge11110000.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n    common.setColor( data );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n    common.setColor( data );\n\n    //console.log( data );\n\n    let size = 500;\n\n    let box = document.querySelector('#twoBox');\n        \n    let dmins = new Vis3Chart( box );\n        dmins.updateThreeConfig( {\n            camera: {\n                fov: 40\n            }\n            , cameraPosition: {\n                //z: 300\n            }\n        });\n        dmins.update( data, true ); \n\n    window.addEventListener( 'resize', ()=>{\n\n        window.tmpTimeout && clearTimeout( window.tmpTimeout );\n\n        window.tmpTimeout = setTimeout( ()=>{\n            let size = Math.min( window.innerHeight, window.innerWidth ) * .6;\n            //dmins.setRedraw( 0 ).resize( size, size );\n            dmins.resize( size, size );\n        }, 1000 );\n    });\n\n    setTimeout( ()=>{\n        let data = require( './data/gauge1100.json' );\n        //let data = require( './data/gauge0.json' );\n        data \n        && data.series \n        && data.series.map( item => {\n            item.background = background;\n        });\n\n        common.setColor( data );\n        dmins.update( data, true, 0 ); \n\n    }, 3000 * Math.pow( 10, 10 ) );\n\n}, function () {\n  console.log('Font is not available');\n});\n\n\n"],"sourceRoot":""}